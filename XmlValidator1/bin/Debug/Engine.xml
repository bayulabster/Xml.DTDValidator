<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Engine SYSTEM "valid.dtd">
<Engine Id="Engine" Title="Antibodies Lab" TrackingCode="UA-25584366-6" Domain="www.labster.com" XmlVersion="17">
  <Time Id="EngineTime" TimeLapseMinutes="0" TimeLapseMultiplier="1" />
  <Player Id="Player" FirstName="John" LastName="Doe" Email="" DefaultQuizMaxPoint="10" DefaultQuizMinPoint="2" DefaultQuizPointReduction="2" LabPadItemId="LabPad" />
  <Assets>
    <Asset AssetPath="Hands" />
    <Asset AssetPath="LabPad" />
    <Asset AssetPath="SoundEffects" />
    <Asset AssetPath="labassistant_female_caucasian_nolipsync" />

    <Asset AssetPath="Cabinet" />
    <Asset AssetPath="EldonCardABL" />
    <Asset AssetPath="EldonStick" />
    <Asset AssetPath="Furnitures" />
    <Asset AssetPath="GlovesBox" />
    <Asset AssetPath="HoloTable" />
    <Asset AssetPath="Laptop" />
    <Asset AssetPath="Molecules" />
    <Asset AssetPath="PC" />
    <Asset AssetPath="PCRPipetteTipsRack" />
    <Asset AssetPath="PipetteKit" />
    <Asset AssetPath="PipetteStandingHolder" />
    <Asset AssetPath="RackTubes15ml" />
    <Asset AssetPath="Tube15ml" />
    <Asset AssetPath="TrashBin" />

    <Asset AssetPath="Main" />
    <Asset AssetPath="Machines" />
    <Asset AssetPath="MontserratRegular" />
    <Asset AssetPath="HelveticaNeueLT-Medium" />
    <Asset AssetPath="HelveticaNeueLT-Roman" />
    <Asset AssetPath="HelveticaNeueLT-Bold" />
    <Asset AssetPath="OpenSansRegular" />
    <Asset AssetPath="OpenSansRegularFront" />
    <Asset AssetPath="HUD" />

    <Asset AssetPath="004_CYT_intro_and_consult" />
    <Asset AssetPath="035_ABL_AntibodyAntigeneComplex" />
  </Assets>
  <MediaCenter Id="MediaCenter" MediaList="MediaList" />
  <AudioCenter ExternalPath="AudioList" />
  <VoiceManager IsEnabled="false" DefaultVoiceId="Default" IsLogEnabled="true">
    <Voice Id="Default" Gender="Female" />
    <Voice Id="Marie" Gender="Female" />
    <Voice Id="DrLee" Gender="Female" />
    <Voice Id="Carmen" Gender="Female" />
    <Voice Id="Joel" Gender="Male" />
  </VoiceManager>
  <Images>
    <Image Id="Image_hazard" Title="Hazard symbols" IsUnlocked="true" URL="https://s3.amazonaws.com/labsterim/media/uploads/tutorial/hazard_symbol.png" />
    <Image Id="Image_ab" Title="Antibody structure" URL="https://s3.amazonaws.com/labsterim/media/uploads/ABL/antibody.png" IsUnlocked="false" />
    <Image Id="Image_isotypes" Title="Antibody isotypes" URL="https://s3.amazonaws.com/labsterim/media/uploads/ABL/isotypes.png" IsUnlocked="false" />
    <Image Id="Image_avid" Title="Affinity vs. avidity" URL="https://s3.amazonaws.com/labsterim/media/uploads/ABL/avidity-affinity_s.png" IsUnlocked="false" />
    <Image Id="Image_ABO" Title="ABO blood grouping system" URL="https://s3.amazonaws.com/labsterim/media/uploads/ABL/ABO.png" IsUnlocked="false" />
  </Images>
  <GUI>
    <GUIExternal Type="GUIPanel" XmlPath="GUI_Navigation" />
    <GUIExternal Type="GUIDialogue" XmlPath="GUI_ConversationOVRTransparant" />
    <GUIExternal Type="GUIDialogue" XmlPath="GUI_PopupTitle" />
    <GUIExternal Type="GUIDialogue" XmlPath="GUI_Subtitle" />
    <GUIExternal Type="GUIDialogue" XmlPath="GUI_Subtitle_Simple" />
    <GUIExternal Type="GUIDialogue" XmlPath="GUI_Notification" />
    <GUIExternal Type="GUIPanel" XmlPath="GUI_PopupSave" />
    <GUIExternal Type="GUITooltip" XmlPath="GUI_Tooltip" />
    <GUIExternal Type="GUIPanel" XmlPath="GUI_PopupSfx" />
    <GUIExternal Type="GUIScreen" XmlPath="GUI_LabPadScreen_NewDesign" />
    <GUIExternal Type="GUIPopup" XmlPath="GUI_WikiScreen" />
    <GUIExternal Type="GUIPanel" XmlPath="GUI_FullScreenImage" />

    <GUITooltip3D Id="Tooltip1" AtlasPath="HUD" Align="Top" Offset="0,0.05" FontPath="OpenSansRegularFront" Depth="1000">
      <Label Name="Tooltip" Depth="1" Align="Bottom" ImageSource="Tooltip" TileMode="Sliced" Position="0,-10" Size="370,65" Color="255,255,255,255" Text="{Binding Tooltip}" TextSize="18" ComparisonVisibility="{Binding Tooltip, Converter=Invert}" ComparisonValue="" AutoResizeWithLabel="true" AutoResizeOffset="50,40" />
      <Label Name="ExtendedTooltip" Depth="0" Align="Top" ImageSource="Tooltip" TileMode="Sliced" Position="0,10" Size="270,65" Color="255,255,127,255" Text="{Binding ExtendedTooltip}" TextSize="14" ComparisonVisibility="{Binding ExtendedTooltip, Converter=Invert}" ComparisonValue="" AutoResizeWithLabel="true" AutoResizeOffset="50,35" />
    </GUITooltip3D>

    <GUIScreen Id="GUIScreen_Holotable" Resolution="920,290" AtlasPath="MachineUIAtlas" Align="Center" FontPath="MontserratRegular">
      <Page Id="Page_Holotable_Off" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_HolotableOff" Depth="0" IsVisible="false">
        <Image Id="Image_BGHolotable0" Depth="0" ImageSource="block_white" Color="55,100,130,255" Size="900,290" Align="Center" />
      </Page>
      <Page Id="Page_Holotable" Size="920,290" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_HolotableOn" Align="Center" Depth="0" IsVisible="false">
        <Image Id="Image_BGHolotable1" Depth="0" ImageSource="block_white" Color="90,137,183" Size="900,290" Align="Center" />
        <Image Id="Image_BGHolotableR" Depth="0" ImageSource="block_white" Color="90,137,183" Size="300,290" Align="Right" Position="450,0" />
        <Image Id="Image_BGHolotableL" Depth="0" ImageSource="block_white" Color="90,137,183" Size="300,290" Align="Left" Position="-450,0" />
        <Button Id="Button_AbActive" Depth="3" ImageSource="bluebox_border3px" TileMode="Sliced" Text=" " TextSize="42" MaxLineCount="1" Align="Center" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="AntibodyState" Position="0, -64" Size="294,124" Command="GotoStateCommand" CommandParameter="NoMoleculeState" />
        <Button Id="Button_AbPassive" Depth="3" ImageSource="bluebox_border3px" TileMode="Sliced" Text=" " TextSize="42" MaxLineCount="1" Align="Center" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="NoMoleculeState" Position="0, -64" Size="294,124" Command="GotoStateCommand" CommandParameter="AntibodyState" />
        <Button Id="Button_AntibodyRotateCW" Depth="2" ImageSource="bluebox_border3px" TileMode="Sliced" Text="" TextSize="48" Align="Right" Position="-1,58" Size="146,117" Command="GotoStateCommand" CommandParameter="State_HoloStartRotationCW" />
        <Button Id="Button_AntibodyRotateCCW" Depth="2" ImageSource="bluebox_border3px" TileMode="Sliced" Text="" TextSize="48" Align="Left" Position="1,58" Size="145,117" Command="GotoStateCommand" CommandParameter="State_HoloStartRotationCCW" />
        <Label Id="Label_AntibodyMolTitle" Position="0,-64" Size="300,124" Align="Center" Depth="3" Text="[b]ANTIBODY[/b]" TextSize="42" />
        <Image Id="Image_DropShadow" Position="0, -62" Depth="3" ImageSource="dropshadow_9slice" Size="294,120" Align="Center" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="AntibodyState" />

        <Image Id="Image_IconLeft" Align="Right" Position="-55,60" Size="42,73" Depth="2" ImageSource="icon_left" />
        <Image Id="Image_IconRight" Align="Left" Position="55,60" Size="42,73" Depth="2" ImageSource="icon_right" />
      </Page>
    </GUIScreen>

    <GUIScreen Id="GUIScreen_PC" AtlasPath="MachineUIAtlas" Align="Center" Resolution="1920,1080" FontPath="MontserratRegular">
      <Page Id="Page_PCScreenIsOff" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_Off" Depth="0" IsVisible="false">
        <Image Id="Image_PageOff" Depth="-2" Align="Center" ImageSource="AxisLine" Color="238,238,238" Position="0,0" Size="1920,1080" />
        <Label Id="Label_PageOff" Depth="3" Align="Center" Color="64,64,64" Text="[b][i]Labster[/i][/b]" Position="0,-100" TextSize="180" MaxLineCount="1" Overflow="ResizeFreely" KeepAspectRatio="BasedOnHeight" />
        <Label Id="Label_SubtOff" Depth="3" Align="Center" Color="64,64,64" Text="saving the world" Position="0,50" TextSize="50" MaxLineCount="1" Overflow="ResizeFreely" KeepAspectRatio="BasedOnHeight" />
        <Image Id="Image_UIBgOff" Depth="2" Align="Center" ImageSource="block_black" Color="238,238,238" Position="0,0" Size="1920,1080" />
      </Page>
      <Page Id="Page_ABAG_PC" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_ABAG_Interactive" IsVisible="false">
        <Image Id="Image_GreyBG1" Align="Center" Depth="1" ImageSource="block_white" Color="239,239,239" Position="0,0" Size="1920,1080" />
        <Panel Id="Panel_Title1" Align="Center" Depth="1" Position="0,-490" Size="1920,100">
          <Image Id="Image_BlueBorder1" Align="Center" Depth="1" ImageSource="bluebox_border1px" Position="0,0" Size="1920,100" />
          <Label Id="Label_AbAgTitle" Align="Center" Depth="2" Text="[b]Label the structure of the antibody and the antigen[/b]" TextSize="42" Color="255,255,255,255" Position="0,0" Size="1920,70" />
        </Panel>
        <Image Id="Image_WhiteBGLeft" Align="Center" Position="-356,50" Size="1100,872" Depth="2" TileMode="Sliced" ImageSource="block_white" />
        <Image Id="Image_AbAgBackground" Align="Center" Position="-356,50" Size="1000,800" Depth="3" ImageSource="https://s3.amazonaws.com/labsterim/media/uploads/ABL/background_opt.png" />
        <Image Id="Panel_WhiteBGRight" Align="Center" Position="571,50" Size="675,872" Depth="2" TileMode="Sliced" ImageSource="block_white" />

        <Label Id="Label_Dropdown_Active_A" Depth="2" Align="Left" Text="[b] 1. [/b]" TextSize="36" Color="136,136,136,255" Position="282,-300" Size="800,70" />
        <Label Id="Label_Dropdown_Active_B" Depth="2" Align="Left" Text="[b] 2. [/b]" TextSize="36" Color="136,136,136,255" Position="282,-210" Size="800,70" />
        <Label Id="Label_Dropdown_Active_C" Depth="2" Align="Left" Text="[b] 3. [/b]" TextSize="36" Color="136,136,136,255" Position="282,-120" Size="800,70" />
        <Label Id="Label_Dropdown_Active_D" Depth="2" Align="Left" Text="[b] 4. [/b]" TextSize="36" Color="136,136,136,255" Position="282,-30" Size="800,70" />
        <Label Id="Label_Dropdown_Active_E" Depth="2" Align="Left" Text="[b] 5. [/b]" TextSize="36" Color="136,136,136,255" Position="282,60" Size="800,70" />
        <Label Id="Label_Dropdown_Active_F" Depth="2" Align="Left" Text="[b] 6. [/b]" TextSize="36" Color="136,136,136,255" Position="282,150" Size="800,70" />

        <Label Id="Label_CorrectAnswer_A" Depth="5" Align="Left" TextSize="32" Color="116,176,235,255" Position="360,-300" Size="450,50" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameInactive" Text="Variable region" />
        <Label Id="Label_CorrectAnswer_B" Depth="5" Align="Left" TextSize="32" Color="116,176,235,255" Position="360,-210" Size="450,50" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameInactive" Text="Constant region" />
        <Label Id="Label_CorrectAnswer_C" Depth="5" Align="Left" TextSize="32" Color="116,176,235,255" Position="360,-120" Size="450,50" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameInactive" Text="Disulfide bridge" />
        <Label Id="Label_CorrectAnswer_D" Depth="5" Align="Left" TextSize="32" Color="116,176,235,255" Position="360,-30" Size="450,50" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameInactive" Text="Light chain" />
        <Label Id="Label_CorrectAnswer_E" Depth="5" Align="Left" TextSize="32" Color="116,176,235,255" Position="360,60" Size="450,50" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameInactive" Text="Heavy chain" />
        <Label Id="Label_CorrectAnswer_F" Depth="5" Align="Left" TextSize="32" Color="116,176,235,255" Position="360,150" Size="450,50" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameInactive" Text="Epitope" />

        <DropDownList Id="ColumnDropDown_A_ABAG" Position="625,-300" Size="450,50" Depth="5" TextSize="30" Align="Center" MaxLineCount="1" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" Target="{Binding StateGroups.StateGroup_PCW1ItemA_ABAG_Labelling}" TextAlign="Left" Padding="15,10" TextOffset="-60,0" ImageOffset="-60,0" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameActive" />
        <DropDownList Id="ColumnDropDown_B_ABAG" Position="625,-210" Size="450,50" Depth="5" TextSize="30" Align="Center" MaxLineCount="1" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" Target="{Binding StateGroups.StateGroup_PCW1ItemB_ABAG_Labelling}" TextAlign="Left" Padding="15,10" TextOffset="-60,0" ImageOffset="-60,0" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameActive" />
        <DropDownList Id="ColumnDropDown_C_ABAG" Position="625,-120" Size="450,50" Depth="5" TextSize="30" Align="Center" MaxLineCount="1" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" Target="{Binding StateGroups.StateGroup_PCW1ItemC_ABAG_Labelling}" TextAlign="Left" Padding="15,10" TextOffset="-60,0" ImageOffset="-60,0" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameActive" />
        <DropDownList Id="ColumnDropDown_D_ABAG" Position="625,-30" Size="450,50" Depth="5" TextSize="30" Align="Center" MaxLineCount="1" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" Target="{Binding StateGroups.StateGroup_PCW1ItemD_ABAG_Labelling}" TextAlign="Left" Padding="15,10" TextOffset="-60,0" ImageOffset="-60,0" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameActive" />
        <DropDownList Id="ColumnDropDown_E_ABAG" Position="625,60" Size="450,50" Depth="5" TextSize="30" Align="Center" MaxLineCount="1" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" Target="{Binding StateGroups.StateGroup_PCW1ItemE_ABAG_Labelling}" TextAlign="Left" Padding="15,10" TextOffset="-60,0" ImageOffset="-60,0" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameActive" />
        <DropDownList Id="ColumnDropDown_F_ABAG" Position="625,150" Size="450,50" Depth="5" TextSize="30" Align="Center" MaxLineCount="1" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" Target="{Binding StateGroups.StateGroup_PCW1ItemF_ABAG_Labelling}" TextAlign="Left" Padding="15,10" TextOffset="-60,0" ImageOffset="-60,0" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameActive" />

        <Image Id="LabelImage_SubmitA_CorrectAnswer" Depth="5" Align="Left" ImageSource="transp_block_green_border" Position="325,-300" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitACorrect" />
        <Image Id="LabelImage_SubmitA_WrongAnswer" Depth="5" Align="Left" ImageSource="transp_block_red_border" Position="325,-300" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitAWrong" />
        <Image Id="LabelImage_SubmitB_CorrectAnswer" Depth="5" Align="Left" ImageSource="transp_block_green_border" Position="325,-210" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitBCorrect" />
        <Image Id="LabelImage_SubmitB_WrongAnswer" Depth="5" Align="Left" ImageSource="transp_block_red_border" Position="325,-210" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitBWrong" />
        <Image Id="LabelImage_SubmitC_CorrectAnswer" Depth="5" Align="Left" ImageSource="transp_block_green_border" Position="325,-120" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitCCorrect" />
        <Image Id="LabelImage_SubmitC_WrongAnswer" Depth="5" Align="Left" ImageSource="transp_block_red_border" Position="325,-120" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitCWrong" />
        <Image Id="LabelImage_SubmitD_CorrectAnswer" Depth="5" Align="Left" ImageSource="transp_block_green_border" Position="325,-30" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitDCorrect" />
        <Image Id="LabelImage_SubmitD_WrongAnswer" Depth="5" Align="Left" ImageSource="transp_block_red_border" Position="325,-30" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitDWrong" />
        <Image Id="LabelImage_SubmitE_CorrectAnswer" Depth="5" Align="Left" ImageSource="transp_block_green_border" Position="325,60" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitECorrect" />
        <Image Id="LabelImage_SubmitE_WrongAnswer" Depth="5" Align="Left" ImageSource="transp_block_red_border" Position="325,60" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitEWrong" />
        <Image Id="LabelImage_SubmitF_CorrectAnswer" Depth="5" Align="Left" ImageSource="transp_block_green_border" Position="325,150" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitFCorrect" />
        <Image Id="LabelImage_SubmitF_WrongAnswer" Depth="5" Align="Left" ImageSource="transp_block_red_border" Position="325,150" Size="480,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_SubmitFWrong" />

        <Button Id="Button_Labeling_Submit" Command="GotoStateCommand" CommandParameter="State_ScreenLabelingProcess" Depth="3" ImageSource="button_submit" TileMode="Sliced" Align="Center" Text="[b]SUBMIT[/b]" TextSize="30" Position="550,272" Size="250,75" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameActive" />
        <Button Id="Button_Labeling_Reset" Command="GotoStateCommand" CommandParameter="State_ScreenLabelingReset" Depth="4" ImageSource="button_reset" TileMode="Sliced" Align="Center" Text="[b]RESET[/b]" TextSize="30" Position="550,382" Size="250,75" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameActive" />
        <Button Id="Button_Labeling_Submit_Passive" Depth="3" ImageSource="button_submit" TileMode="Sliced" Align="Center" Text="[b]SUBMIT[/b]" TextSize="30" Position="550,272" Size="250,75" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameInactive" Normal="215,215,215,255" Hover="215,215,215,255" />
        <Button Id="Button_Labeling_Reset_Passive" Depth="4" ImageSource="button_reset" TileMode="Sliced" Align="Center" Text="[b]RESET[/b]" TextSize="30" Position="550,382" Size="250,75" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_MinigameInactive" Normal="215,215,215,255" Hover="215,215,215,255" />
      </Page>
    </GUIScreen>

    <!--region GUISCREEN of EldonCard01 WB2-->
    <GUIScreen Id="GUI_EldonCardScreen_Rhesus_Card01W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Page Id="Page_MainPage_Card01W2Rhesus" IsDefault="true" IsVisible="false">
        <Panel Id="Panel_MainPage_Card01W2Rhesus" Depth="3" Collider="true" Size="196,64">
          <DropDownList Id="DropDownList_Card01W2" Position="0,0" Size="178,56" Depth="5" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" ImageOffset="0,0" Target="{Binding StateGroups.StateGroup_BloodType_EC01W2}" TextSize="42" Align="Center" MaxLineCount="1" Padding="1,1" TextOffset="-25,0" KeepAspectRatio="BasedOnHeight" Overflow="ResizeFreely" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterFocused" />
          <Image Id="ImageLabel_SubmitCard01W2_CorrectAnswer1" Depth="4" Align="Left" ImageSource="transp_block_green_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorGreen" />
          <Image Id="ImageLabel_SubmitCard01W2_WrongAnswer1" Depth="4" Align="Left" ImageSource="transp_block_red_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorRed" />
          <Label Id="Label_Rhesus1" Depth="2" Align="Left" Text="[b] A- [/b]" TextSize="46" Color="100,100,100,255" Position="-45,0" Size="196,64" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterQuiz" />
        </Panel>
      </Page>
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Name_Card01W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Name_Card01W2" Depth="2" Align="Right" Text="Patient 1" TextSize="46" Color="100,100,100,255" Position="20,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Born_Card01W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="700,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Born_Card01W2" Depth="2" Align="Center" Text="14 - 04 - 1989" TextSize="46" Color="100,100,100,255" Position="0,0" Size="700,20" />
      <Panel Id="Panel_Card01W2" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_HelperIsVisible">
        <Button Id="Button_Card01W2_ToRight" Depth="3" ImageSource="icon_right" Normal="213,165,0" Hover="255,201,14" TileMode="Sliced" Align="Center" TextSize="30" Position="455,-400" Size="74,130" Command="GotoStateCommand" CommandParameter="State_JumpFromCard01toCard02" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_ReadyToJump">
        </Button>
      </Panel>
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Date_Card01W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Date_Card01W2_A" Depth="2" Align="Right" Text="{Binding EngineRoot.Time.CurrentTime.Now, StringFormat={0:MM/dd/yy}}" TextSize="46" Color="100,100,100,255" Position="90,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Signature_Card01W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Image Id="Label_Signature_Card01W2" ImageSource="https://labsterim.s3.amazonaws.com/media/uploads/ABL/signatureP01.png" Size="550,150" Align="Center" Position="-50,0" Depth="3" />
    </GUIScreen>
    <!--endregion GUISCREEN of EldonCard01 WB2-->
    <!--region GUISCREEN of EldonCard02 WB2-->
    <GUIScreen Id="GUI_EldonCardScreen_Rhesus_Card02W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Page Id="Page_MainPage_Card02W2Rhesus" IsDefault="true" IsVisible="false">
        <Panel Id="Panel_MainPage_Card02W2Rhesus" Depth="3" Collider="true" Size="196,64">
          <DropDownList Id="DropDownList_Card02W2" Position="0,0" Size="178,56" Depth="5" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" ImageOffset="0,0" Target="{Binding StateGroups.StateGroup_BloodType_EC02W2}" TextSize="42" Align="Center" MaxLineCount="1" Padding="1,1" TextOffset="-25,0" KeepAspectRatio="BasedOnHeight" Overflow="ResizeFreely" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterFocused" />
          <Image Id="ImageLabel_SubmitCard02W2_CorrectAnswer" Depth="4" Align="Left" ImageSource="transp_block_green_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorGreen" />
          <Image Id="ImageLabel_SubmitCard02W2_WrongAnswer" Depth="4" Align="Left" ImageSource="transp_block_red_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorRed" />
          <Label Id="Label_Rhesus2" Depth="2" Align="Left" Text="[b] B+ [/b]" TextSize="46" Color="100,100,100,255" Position="-45,0" Size="196,64" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterQuiz" />
        </Panel>
      </Page>
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Name_Card02W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Name_Card02W2" Depth="2" Align="Right" Text="Patient 2" TextSize="46" Color="100,100,100,255" Position="20,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Born_Card02W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Born_Card02W2" Depth="2" Align="Center" Text="16 - 04 - 1988" TextSize="46" Color="100,100,100,255" Position="0,0" Size="700,20" />
      <Panel ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_HelperIsVisible">
        <Button Id="Button_Card02W2_ToRight" Depth="3" ImageSource="icon_right" Normal="213,165,0" Hover="255,201,14" TileMode="Sliced" Align="Center" TextSize="30" Position="455,-400" Size="74,130" Command="GotoStateCommand" CommandParameter="State_JumpFromCard02toCard03" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_ReadyToJump">
        </Button>
        <Button Id="Button_Card02W2_ToLeft" Depth="3" ImageSource="icon_left" Normal="213,165,0" Hover="255,201,14" TileMode="Sliced" Align="Center" TextSize="30" Position="-455,-400" Size="74,130" Command="GotoStateCommand" CommandParameter="State_JumpFromCard02toCard01" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_ReadyToJump">
        </Button>
      </Panel>
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Date_Card02W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Date_Card02W2_A" Depth="2" Align="Right" Text="{Binding EngineRoot.Time.CurrentTime.Now, StringFormat={0:MM/dd/yy}}" TextSize="46" Color="100,100,100,255" Position="90,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Signature_Card02W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Image Id="Label_Signature_Card02W2" ImageSource="https://labsterim.s3.amazonaws.com/media/uploads/ABL/signatureP02.png" Size="550,150" Align="Center" Position="-50,0" Depth="3" />
    </GUIScreen>
    <!--endregion GUISCREEN of EldonCard02 WB2-->
    <!--region GUISCREEN of EldonCard03 WB2-->
    <GUIScreen Id="GUI_EldonCardScreen_Rhesus_Card03W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Page Id="Page_MainPage_Card03W2Rhesus" IsDefault="true" IsVisible="false">
        <Panel Id="Panel_MainPage_Card03W2Rhesus" Depth="3" Collider="true" Size="196,64">
          <DropDownList Id="DropDownList_Card03W2" Position="0,0" Size="178,56" Depth="5" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" ImageOffset="0,0" Target="{Binding StateGroups.StateGroup_BloodType_EC03W2}" TextSize="42" Align="Center" MaxLineCount="1" Padding="1,1" TextOffset="-25,0" KeepAspectRatio="BasedOnHeight" Overflow="ResizeFreely" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterFocused" />
          <Image Id="ImageLabel_SubmitCard03W2_CorrectAnswer" Depth="4" Align="Left" ImageSource="transp_block_green_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorGreen" />
          <Image Id="ImageLabel_SubmitCard03W2_WrongAnswer" Depth="4" Align="Left" ImageSource="transp_block_red_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorRed" />
          <Label Id="Label_Rhesus3" Depth="2" Align="Left" Text="[b] O- [/b]" TextSize="46" Color="100,100,100,255" Position="-45,0" Size="196,64" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterQuiz" />
        </Panel>
      </Page>
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Name_Card03W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Name_Card03W2" Depth="2" Align="Right" Text="Patient 3" TextSize="46" Color="100,100,100,255" Position="20,0" Size="350,70" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_EasterEggHidden" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Born_Card03W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Born_Card03W2" Depth="2" Align="Center" Text="27 - 02 - 1996" TextSize="46" Color="100,100,100,255" Position="0,0" Size="700,20" />
      <Panel ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_HelperIsVisible">
        <Button Id="Button_Card03W2_ToRight" Depth="3" ImageSource="icon_right" Normal="213,165,0" Hover="255,201,14" TileMode="Sliced" Align="Center" TextSize="30" Position="455,-400" Size="74,130" Command="GotoStateCommand" CommandParameter="State_JumpFromCard03toCard04" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_ReadyToJump">
        </Button>
        <Button Id="Button_Card03W2_ToLeft" Depth="3" ImageSource="icon_left" Normal="213,165,0" Hover="255,201,14" TileMode="Sliced" Align="Center" TextSize="30" Position="-455,-400" Size="74,130" Command="GotoStateCommand" CommandParameter="State_JumpFromCard03toCard02" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_ReadyToJump">
        </Button>
      </Panel>
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Date_Card03W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Date_Card03W2_A" Depth="2" Align="Right" Text="{Binding EngineRoot.Time.CurrentTime.Now, StringFormat={0:MM/dd/yy}}" TextSize="46" Color="100,100,100,255" Position="90,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Signature_Card03W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Image Id="Label_Signature_Card03W2" ImageSource="https://labsterim.s3.amazonaws.com/media/uploads/ABL/signatureP03.png" Size="550,150" Align="Center" Position="-50,0" Depth="3" />
    </GUIScreen>
    <!--endregion GUISCREEN of EldonCard03 WB2-->
    <!--region GUISCREEN of EldonCard04 WB2-->
    <GUIScreen Id="GUI_EldonCardScreen_Rhesus_Card04W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Page Id="Page_MainPage_Card04W2Rhesus" IsDefault="true" IsVisible="false">
        <Panel Id="Panel_MainPage_Card04W2Rhesus" Depth="3" Collider="true" Size="196,64">
          <DropDownList Id="DropDownList_Card04W2" Position="0,0" Size="178,56" Depth="5" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" ImageOffset="0,0" Target="{Binding StateGroups.StateGroup_BloodType_EC04W2}" TextSize="42" Align="Center" MaxLineCount="1" Padding="1,1" TextOffset="-25,0" KeepAspectRatio="BasedOnHeight" Overflow="ResizeFreely" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterFocused" />
          <Image Id="ImageLabel_SubmitCard04W2_CorrectAnswer" Depth="4" Align="Left" ImageSource="transp_block_green_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorGreen" />
          <Image Id="ImageLabel_SubmitCard04W2_WrongAnswer" Depth="4" Align="Left" ImageSource="transp_block_red_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorRed" />
          <Label Id="Label_Rhesus4" Depth="2" Align="Left" Text="[b] AB+ [/b]" TextSize="46" Color="100,100,100,255" Position="-45,0" Size="196,64" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterQuiz" />
        </Panel>
      </Page>
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Name_Card04W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Name_Card04W2" Depth="2" Align="Right" Text="Patient 4" TextSize="46" Color="100,100,100,255" Position="20,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Born_Card04W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Born_Card04W2" Depth="2" Align="Center" Text="25 - 09 - 1994" TextSize="46" Color="100,100,100,255" Position="0,0" Size="700,20" />
      <Panel ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_HelperIsVisible">
        <Button Id="Button_Card04W2_ToLeft" Depth="3" ImageSource="icon_left" Normal="213,165,0" Hover="255,201,14" TileMode="Sliced" Align="Center" TextSize="30" Position="-455,-400" Size="74,130" Command="GotoStateCommand" CommandParameter="State_JumpFromCard04toCard03" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_ReadyToJump">
        </Button>
      </Panel>
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Date_Card04W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Date_Card04W2_A" Depth="2" Align="Right" Text="{Binding EngineRoot.Time.CurrentTime.Now, StringFormat={0:MM/dd/yy}}" TextSize="46" Color="100,100,100,255" Position="90,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Signature_Card04W2" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Image Id="Label_Signature_Card04W2" ImageSource="https://labsterim.s3.amazonaws.com/media/uploads/ABL/signatureP04.png" Size="550,150" Align="Center" Position="-50,0" Depth="3" />
    </GUIScreen>
    <!--endregion GUISCREEN of EldonCard04 WB2-->

    <!--region GUISCREEN of EldonCard Carmen WB3-->
    <GUIScreen Id="GUI_EldonCardScreen_Rhesus_Carmen" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <DropDownList Id="DropDownList_CardCarmen" Position="0,0" Size="178,56" Depth="5" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" ImageOffset="0,0" Target="{Binding StateGroups.StateGroup_BloodType_ECCarmen}" TextSize="42" Align="Center" MaxLineCount="1" Padding="1,1" TextOffset="-25,0" KeepAspectRatio="BasedOnHeight" Overflow="ResizeFreely" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterFocused" />
      <Image Id="ImageLabel_SubmitCard01W2_CorrectAnswer3" Depth="4" Align="Left" ImageSource="transp_block_green_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorGreen" />
      <Image Id="ImageLabel_SubmitCard01W2_WrongAnswer3" Depth="4" Align="Left" ImageSource="transp_block_red_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorRed" />
      <Label Id="Label_Name_Card04W3" Depth="2" Align="Left" Text="[b] A- [/b]" TextSize="46" Color="100,100,100,255" Position="-45,0" Size="196,64" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterQuiz" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Name_Carmen" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Name_Carmen" Depth="2" Align="Right" Text="Carmen" TextSize="46" Color="100,100,100,255" Position="20,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Born_Carmen" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Born_Carmen" Depth="2" Align="Center" Text="13 - 08 - 1988" TextSize="46" Color="100,100,100,255" Position="0,0" Size="700,20" />
      <Button Id="Button_CardCarmen_ToRight" Depth="3" ImageSource="icon_right" Normal="213,165,0" Hover="255,201,14" TileMode="Sliced" Align="Center" TextSize="30" Position="455,-400" Size="74,130" Command="GotoStateCommand" CommandParameter="State_JumpFromCardCarmentoCardFChild" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_ReadyToJump">
      </Button>
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Date_Carmen" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Date_CardCarmen_A" Depth="2" Align="Right" Text="{Binding EngineRoot.Time.CurrentTime.Now, StringFormat={0:MM/dd/yy}}" TextSize="46" Color="100,100,100,255" Position="90,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Signature_Carmen" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Image Id="Image_Signature_Carmen" ImageSource="https://labsterim.s3.amazonaws.com/media/uploads/ABL/signaturePCarmen.png" Size="600,150" Align="Center" Position="-100,0" Depth="3" />
    </GUIScreen>
    <!--endregion GUISCREEN of EldonCard Carmen WB3-->
    <!--region GUISCREEN of EldonCard FirstChild WB3-->
    <GUIScreen Id="GUI_EldonCardScreen_Rhesus_FirstChild" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <DropDownList Id="DropDownList_CardFirstChildW3" Position="0,0" Size="178,56" Depth="5" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" ImageOffset="0,0" Target="{Binding StateGroups.StateGroup_BloodType_ECFirstChild}" TextSize="42" Align="Center" MaxLineCount="1" Padding="1,1" TextOffset="-25,0" KeepAspectRatio="BasedOnHeight" Overflow="ResizeFreely" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterFocused" />
      <Image Id="Image_SubmitCard01W2_CorrectAnswer3" Depth="4" Align="Left" ImageSource="transp_block_green_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorGreen" />
      <Image Id="Image_SubmitCard01W2_WrongAnswer3" Depth="4" Align="Left" ImageSource="transp_block_red_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorRed" />
      <Label Depth="2" Align="Left" Text="[b] O+ [/b]" TextSize="46" Color="100,100,100,255" Position="-45,0" Size="196,64" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterQuiz" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Name_FirstChild" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Name_FirstChild" Depth="2" Align="Right" Text="First child" TextSize="46" Color="100,100,100,255" Position="35,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Born_FirstChild" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Born_FirstChild" Depth="2" Align="Center" Text="07 - 12 - 2012" TextSize="46" Color="100,100,100,255" Position="0,0" Size="700,20" />
      <Button Id="Button_CardFChild_ToRight" Depth="3" ImageSource="icon_right" Normal="213,165,0" Hover="255,201,14" TileMode="Sliced" Align="Center" TextSize="30" Position="455,-400" Size="74,130" Command="GotoStateCommand" CommandParameter="State_JumpFromCardFChildtoCardFetus" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_ReadyToJump">
      </Button>
      <Button Id="Button_CardFChild_ToLeft" Depth="3" ImageSource="icon_left" Normal="213,165,0" Hover="255,201,14" TileMode="Sliced" Align="Center" TextSize="30" Position="-455,-400" Size="74,130" Command="GotoStateCommand" CommandParameter="State_JumpFromCardFChildtoCardCarmen" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_ReadyToJump">
      </Button>
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Date_FirstChild" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Date_FirstChild_A" Depth="2" Align="Right" Text="{Binding EngineRoot.Time.CurrentTime.Now, StringFormat={0:MM/dd/yy}}" TextSize="46" Color="100,100,100,255" Position="90,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Signature_FirstChild" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Image Id="Image_Signature_FirstChild" ImageSource="https://labsterim.s3.amazonaws.com/media/uploads/ABL/signaturePCarmen.png" Size="600,150" Align="Center" Position="-100,0" Depth="3" />
    </GUIScreen>
    <!--endregion GUISCREEN of EldonCard FirstChild WB3-->
    <!--region GUISCREEN of EldonCard Fetus WB3-->
    <GUIScreen Id="GUI_EldonCardScreen_Rhesus_Fetus" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <DropDownList Id="DropDownList_CardECFetusW3" Position="0,0" Size="178,56" Depth="5" ImageSource="dropdown_background" BackgroundImage="UI_dropdown_box_9slice" HighlightImage="button_submit" TileMode="Sliced" ImageOffset="0,0" Target="{Binding StateGroups.StateGroup_BloodType_ECFetus}" TextSize="42" Align="Center" MaxLineCount="1" Padding="1,1" TextOffset="-25,0" KeepAspectRatio="BasedOnHeight" Overflow="ResizeFreely" Color="255,255,255,255" HighlightColor="255,255,255,255" TextColor="116,176,235,255" TextHighlightColor="215,215,215,255" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterFocused" />
      <Image Id="ImageLabel_SubmitCard01W2_CorrectAnswer" Depth="4" Align="Left" ImageSource="transp_block_green_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorGreen" />
      <Image Id="ImageLabel_SubmitCard01W2_WrongAnswer" Depth="4" Align="Left" ImageSource="transp_block_red_border" Position="-140,-12" Size="275,120" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_LabelIndicatorRed" />
      <Label Id="Label_RhesusResult_Fetus" Depth="2" Align="Left" Text="[b] A+ [/b]" TextSize="46" Color="100,100,100,255" Position="-45,0" Size="196,64" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_AfterQuiz" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Name_Fetus" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Name_Fetus" Depth="2" Align="Right" Text="Fetus" TextSize="46" Color="100,100,100,255" Position="-50,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Born_Fetus" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Born_Fetus" Depth="2" Align="Center" Text="N.A." TextSize="46" Color="100,100,100,255" Position="0,0" Size="700,20" />
      <Button Id="Button_CardFetus_ToLeft" Depth="3" ImageSource="icon_left" Normal="213,165,0" Hover="255,201,14" TileMode="Sliced" Align="Center" TextSize="30" Position="-455,-400" Size="74,130" Command="GotoStateCommand" CommandParameter="State_JumpFromFetustoCardFChild" ComparisonVisibility="{Binding ActiveStates}" ComparisonValue="State_ReadyToJump">
      </Button>
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Date_Fetus" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Label Id="Label_Date_Fetus_A" Depth="2" Align="Right" Text="{Binding EngineRoot.Time.CurrentTime.Now, StringFormat={0:MM/dd/yy}}" TextSize="46" Color="100,100,100,255" Position="90,0" Size="350,70" />
    </GUIScreen>
    <GUIScreen Id="GUI_EldonCardScreen_Signature_Fetus" AtlasPath="MachineUIAtlas" HiddenByFullScreen="false" Position="0,0" Align="Center" Resolution="375,80" Depth="-1" FontPath="MontserratRegular">
      <Image Id="Image_Signature_Fetus" ImageSource="https://labsterim.s3.amazonaws.com/media/uploads/ABL/signaturePCarmen.png" Size="600,150" Align="Center" Position="-100,0" Depth="3" />
    </GUIScreen>
    <!--endregion GUISCREEN of EldonCard Fetus WB3-->
  </GUI>
  <Items>
    <Element Id="LabPad" SourceId="LabPad" IsClickable="true" IsPickUpAllowed="false">
      <Triggers>
        <EventTrigger Event="Click">
          <Conditions>
            <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_SessionHolotableExploration" />
          </Conditions>
          <Actions>
            <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_HoloExplore" IsMuted="false" />
          </Actions>
        </EventTrigger>
        <!--region [Triggers for Mechanism of Sample-blood case ABO Bloodtyping Puzzle ]-->
        <EventTrigger Event="Click">
          <Conditions>
            <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_SessionSampleABOPuzzle" />
          </Conditions>
          <Actions>
            <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABOint1" />
          </Actions>
        </EventTrigger>
        <!--endregion-->
        <!--region [Triggers for Mechanism of Carmen's family case ABO Bloodtyping Puzzle]-->
        <EventTrigger Event="Click">
          <Conditions>
            <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_SessionCarmenABOPuzzle" />
          </Conditions>
          <Actions>
            <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABOint2" />
          </Actions>
        </EventTrigger>
        <!--endregion-->
        <!--region [LeftHand specified case]-->
        <EventTrigger Event="Click">
          <Conditions>
            <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_SessionSpecialized" />
          </Conditions>
          <Actions>
            <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsVisible" Value="false" />
            <Setter Target="LeftHand" Property="IsVisible" Value="false" />
          </Actions>
        </EventTrigger>
        <!--endregion-->
      </Triggers>
      <StateGroups>
        <StateGroup Id="StateGroup_Session">
          <States>
            <State Id="State_SessionDefault" IsDefault="true" />
            <State Id="State_SessionWaitAssistant" />
            <State Id="State_SessionHolotableExploration" />
            <State Id="State_SessionSampleABOPuzzle" />
            <State Id="State_SessionCarmenABOPuzzle" />
            <State Id="State_SessionABAGPuzzle" />
            <State Id="State_SessionSpecialized" />
          </States>
        </StateGroup>
        <StateGroup Id="StateGroup_MechanicSampleABOPuzzle">
          <States>
            <State Id="State_SampleABOPuzzle_Default" IsDefault="true" />
            <State Id="State_SampleABOPuzzle_Scoring">
              <Triggers>
                <Trigger>
                  <Actions>
                    <GotoState Target="BloodTestCard1W2" StateId="State_LabellingIsWrong" />
                    <GotoState Target="BloodTestCard2W2" StateId="State_LabellingIsWrong" />
                    <GotoState Target="BloodTestCard3W2" StateId="State_LabellingIsWrong" />
                    <GotoState Target="BloodTestCard4W2" StateId="State_LabellingIsWrong" />

                    <GotoState Target="BloodTestCard1W2" StateId="State_LabellingIsCorrect">
                      <Conditions>
                        <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="Type_A_Negative" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard2W2" StateId="State_LabellingIsCorrect">
                      <Conditions>
                        <DataCondition Target="BloodTestCard2W2" Property="ActiveStates" Comparison="Contains" Value="Type_B_Positive" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard3W2" StateId="State_LabellingIsCorrect">
                      <Conditions>
                        <DataCondition Target="BloodTestCard3W2" Property="ActiveStates" Comparison="Contains" Value="Type_O_Negative" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard4W2" StateId="State_LabellingIsCorrect">
                      <Conditions>
                        <DataCondition Target="BloodTestCard4W2" Property="ActiveStates" Comparison="Contains" Value="Type_AB_Positive" />
                      </Conditions>
                    </GotoState>
                    <!--GREEN INDICATOR-->
                    <GotoState Target="BloodTestCard1W2" StateId="State_LabelIndicatorGreen">
                      <Conditions>
                        <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="Type_A_Negative" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard2W2" StateId="State_LabelIndicatorGreen">
                      <Conditions>
                        <DataCondition Target="BloodTestCard2W2" Property="ActiveStates" Comparison="Contains" Value="Type_B_Positive" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard3W2" StateId="State_LabelIndicatorGreen">
                      <Conditions>
                        <DataCondition Target="BloodTestCard3W2" Property="ActiveStates" Comparison="Contains" Value="Type_O_Negative" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard4W2" StateId="State_LabelIndicatorGreen">
                      <Conditions>
                        <DataCondition Target="BloodTestCard4W2" Property="ActiveStates" Comparison="Contains" Value="Type_AB_Positive" />
                      </Conditions>
                    </GotoState>
                    <!--RED INDICATOR-->
                    <GotoState Target="BloodTestCard1W2" StateId="State_LabelIndicatorRed">
                      <Conditions>
                        <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="NotContains" Value="Type_A_Negative" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard2W2" StateId="State_LabelIndicatorRed">
                      <Conditions>
                        <DataCondition Target="BloodTestCard2W2" Property="ActiveStates" Comparison="NotContains" Value="Type_B_Positive" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard3W2" StateId="State_LabelIndicatorRed">
                      <Conditions>
                        <DataCondition Target="BloodTestCard3W2" Property="ActiveStates" Comparison="NotContains" Value="Type_O_Negative" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard4W2" StateId="State_LabelIndicatorRed">
                      <Conditions>
                        <DataCondition Target="BloodTestCard4W2" Property="ActiveStates" Comparison="NotContains" Value="Type_AB_Positive" />
                      </Conditions>
                    </GotoState>
                    <GotoState StateId="State_SampleABOPuzzle_WrongAnswer">
                      <Conditions>
                        <CompositeCondition Match="Any">
                          <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="State_LabellingIsWrong" />
                          <DataCondition Target="BloodTestCard2W2" Property="ActiveStates" Comparison="Contains" Value="State_LabellingIsWrong" />
                          <DataCondition Target="BloodTestCard3W2" Property="ActiveStates" Comparison="Contains" Value="State_LabellingIsWrong" />
                          <DataCondition Target="BloodTestCard4W2" Property="ActiveStates" Comparison="Contains" Value="State_LabellingIsWrong" />
                        </CompositeCondition>
                      </Conditions>
                    </GotoState>
                    <GotoState StateId="State_SampleABOPuzzle_CorrectAnswer" />
                  </Actions>
                </Trigger>
              </Triggers>
            </State>
            <State Id="State_SampleABOPuzzle_WrongAnswer">
              <Triggers>
                <Trigger>
                  <Conditions>
                    <DataCondition Target="{Binding Parameters.Parameter_ABO_PuzzleTrial.Value, ElementId=PCW1}" Comparison="GreaterThanOrEqual" Value="3" />
                  </Conditions>
                  <Actions>
                    <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABOhint" />
                  </Actions>
                </Trigger>
                <Trigger>
                  <Conditions>
                    <DataCondition Target="{Binding Parameters.Parameter_ABO_PuzzleTrial.Value, ElementId=PCW1}" Comparison="LessThanOrEqual" Value="2" />
                  </Conditions>
                  <Actions>
                    <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABOwrong" />
                  </Actions>
                </Trigger>
              </Triggers>
            </State>
            <State Id="State_SampleABOPuzzle_CorrectAnswer" />
          </States>
        </StateGroup>
        <StateGroup Id="StateGroup_MechanicCarmenABOPuzzle">
          <States>
            <State Id="State_CarmenABOPuzzle_Default" IsDefault="true" />
            <State Id="State_CarmenABOPuzzle_Scoring">
              <Triggers>
                <Trigger>
                  <Actions>
                    <GotoState Target="BloodTestCard_Carmen" StateId="State_LabellingIsWrong" />
                    <GotoState Target="BloodTestCard_FirstChild" StateId="State_LabellingIsWrong" />
                    <GotoState Target="BloodTestCard_Fetus" StateId="State_LabellingIsWrong" />

                    <GotoState Target="BloodTestCard_Carmen" StateId="State_LabellingIsCorrect">
                      <Conditions>
                        <DataCondition Target="BloodTestCard_Carmen" Property="ActiveStates" Comparison="Contains" Value="Type_A_Negative" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard_FirstChild" StateId="State_LabellingIsCorrect">
                      <Conditions>
                        <DataCondition Target="BloodTestCard_FirstChild" Property="ActiveStates" Comparison="Contains" Value="Type_O_Positive" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard_Fetus" StateId="State_LabellingIsCorrect">
                      <Conditions>
                        <DataCondition Target="BloodTestCard_Fetus" Property="ActiveStates" Comparison="Contains" Value="Type_A_Positive" />
                      </Conditions>
                    </GotoState>
                    <!--GREEN INDICATOR-->
                    <GotoState Target="BloodTestCard_Carmen" StateId="State_LabelIndicatorGreen">
                      <Conditions>
                        <DataCondition Target="BloodTestCard_Carmen" Property="ActiveStates" Comparison="Contains" Value="Type_A_Negative" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard_FirstChild" StateId="State_LabelIndicatorGreen">
                      <Conditions>
                        <DataCondition Target="BloodTestCard_FirstChild" Property="ActiveStates" Comparison="Contains" Value="Type_O_Positive" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard_Fetus" StateId="State_LabelIndicatorGreen">
                      <Conditions>
                        <DataCondition Target="BloodTestCard_Fetus" Property="ActiveStates" Comparison="Contains" Value="Type_A_Positive" />
                      </Conditions>
                    </GotoState>
                    <!--RED INDICATOR-->
                    <GotoState Target="BloodTestCard_Carmen" StateId="State_LabelIndicatorRed">
                      <Conditions>
                        <DataCondition Target="BloodTestCard_Carmen" Property="ActiveStates" Comparison="NotContains" Value="Type_A_Negative" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard_FirstChild" StateId="State_LabelIndicatorRed">
                      <Conditions>
                        <DataCondition Target="BloodTestCard_FirstChild" Property="ActiveStates" Comparison="NotContains" Value="Type_O_Positive" />
                      </Conditions>
                    </GotoState>
                    <GotoState Target="BloodTestCard_Fetus" StateId="State_LabelIndicatorRed">
                      <Conditions>
                        <DataCondition Target="BloodTestCard_Fetus" Property="ActiveStates" Comparison="NotContains" Value="Type_A_Positive" />
                      </Conditions>
                    </GotoState>
                    <GotoState StateId="State_CarmenABOPuzzle_WrongAnswer">
                      <Conditions>
                        <CompositeCondition Match="Any">
                          <DataCondition Target="BloodTestCard_Carmen" Property="ActiveStates" Comparison="Contains" Value="State_LabellingIsWrong" />
                          <DataCondition Target="BloodTestCard_FirstChild" Property="ActiveStates" Comparison="Contains" Value="State_LabellingIsWrong" />
                          <DataCondition Target="BloodTestCard_Fetus" Property="ActiveStates" Comparison="Contains" Value="State_LabellingIsWrong" />
                        </CompositeCondition>
                      </Conditions>
                    </GotoState>
                    <GotoState StateId="State_CarmenABOPuzzle_CorrectAnswer" />
                  </Actions>
                </Trigger>
              </Triggers>
            </State>
            <State Id="State_CarmenABOPuzzle_WrongAnswer">
              <Triggers>
                <Trigger>
                  <Conditions>
                    <DataCondition Target="{Binding Parameters.Parameter_ABOCarmen_PuzzleTrial.Value, ElementId=PCW1}" Comparison="GreaterThanOrEqual" Value="3" />
                  </Conditions>
                  <Actions>
                    <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABOhint_Carmen" />
                  </Actions>
                </Trigger>
                <Trigger>
                  <Conditions>
                    <DataCondition Target="{Binding Parameters.Parameter_ABOCarmen_PuzzleTrial.Value, ElementId=PCW1}" Comparison="LessThanOrEqual" Value="2" />
                  </Conditions>
                  <Actions>
                    <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABOwrong_Carmen" />
                  </Actions>
                </Trigger>
              </Triggers>
            </State>
            <State Id="State_CarmenABOPuzzle_CorrectAnswer" />
          </States>
        </StateGroup>
        <StateGroup Id="StateGroup_LTLabpadTutorial">
          <States>
            <State Id="State_LabPadTutorialDefault" IsDefault="true" />
            <State Id="State_LabPadTutorialIsSkipped" />
          </States>
        </StateGroup>
        <StateGroup Id="StateGroup_GlovesSession">
          <States>
            <State Id="State_SafeToDiscard" IsDefault="true" />
            <State Id="State_NotSafeToDiscard" />
          </States>
        </StateGroup>
        <StateGroup Id="StateGroup_EventConversation">
          <States>
            <State Id="State_EventConversationHidden" IsDefault="true" />
          </States>
        </StateGroup>
      </StateGroups>
      <Screens>
        <Screen GameObjectId="Screen" GUIScreenId="GUI_LabPadScreen" />
      </Screens>
    </Element>

    <Container Id="Pipette" ItemId="Pipette" MaxAmount="20" AllowTrashing="false" Tooltip="Pipette" ExtendedTooltip="Allows you to take a controlled volume of the liquid from one container and place it into another - remember to use clean tips!" SourceId="Pipette">
      <Triggers>
        <!--Prevent from pick pipette without gloves-->
        <EventTrigger Event="PreviewClick">
          <Conditions>
            <CompositeCondition>
              <DataCondition Target="LeftHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
              <DataCondition Target="RightHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You need to wear gloves" />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <!--Put on Pipette Tip-->
        <EventTrigger Event="Drop">
          <Conditions>
            <CompositeCondition>
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="PipetteBox" />
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="NoTip" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <PlaySound SoundId="PickUp" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
            <GotoState StateId="HasTip" />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <CompositeCondition>
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="PipetteBox" />
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="HasTip" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You already collected a tip" />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <!--Trash Pipette Tip-->
        <EventTrigger Event="Drop">
          <Conditions>
            <CompositeCondition>
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="PlaceholderBehaviour" Value="Trash" />
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="HasTip" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <GotoState Target="TrashbinFlattopW2" StateId="State_Trashing" />
            <GotoState Target="TrashbinFlattopW3" StateId="State_Trashing" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <PlaySound SoundId="Trash" />
            <GotoState StateId="NoTip" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
          </Actions>
        </EventTrigger>
        <!--Keep track of Pipette Contamination-->
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <CompositeCondition>
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Type" Value="Container" />
              <DataCondition Target="{Binding Contents}" Property="Amount" Value="0" />
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="TipUsed" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Your pipette tip has already been used and could contaminate reagents and reactions. Always use a clean tip!\nContamination can ruin the experiment." />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="Drop">
          <Conditions>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Type" Value="Container" />
          </Conditions>
          <Actions>
            <GotoState StateId="TipUsed" />
          </Actions>
        </EventTrigger>
        <!--Make sure user puts on a pipette tip-->
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <CompositeCondition>
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Type" Value="Container" />
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="NoTip" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You need to have a tip on your pipette in order to collect liquid.\n\nOtherwise the pipette will be contaminated and ruin the experiment." />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="Click">
          <Conditions>
            <DataCondition Target="RightHand" Property="HasElement" Value="false" />
          </Conditions>
          <Actions>
            <Setter Property="EmphasisDuration" Value="0" />
          </Actions>
        </EventTrigger>
      </Triggers>
      <StateGroups>
        <StateGroup TransitionDuration="0">
          <States>
            <State Id="TipClean" IsDefault="true" />
            <State Id="TipUsed" />
          </States>
        </StateGroup>
        <StateGroup TransitionDuration="0">
          <States>
            <State Id="NoTip" AnimationId="PipetteTip" IsDefault="true">
              <Triggers>
                <Trigger>
                  <Actions>
                    <Wait />
                    <GotoState StateId="TipClean" />
                    <ModifyContent Mode="Clear" />
                  </Actions>
                </Trigger>
              </Triggers>
            </State>
            <State Id="HasTip" AnimationId="PipetteTip" IsReverse="true" />
          </States>
        </StateGroup>
      </StateGroups>
    </Container>
    <Container Id="TestTube15ml" MaxAmount="10000" Tooltip="Tube 15ml" AllowContentTransfer="false" AllowContentPickup="true" AllowTrashing="false" SourceId="Tube15ml">
      <Triggers>
        <EventTrigger Event="PreviewClick">
          <Conditions>
            <CompositeCondition>
              <DataCondition Target="LeftHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
              <DataCondition Target="RightHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You need to wear gloves" />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="PreviewClick">
          <Actions>
            <Setter Property="EmphasisDuration" Value="0" />
          </Actions>
        </EventTrigger>
      </Triggers>
    </Container>
    <Container Id="TestTube15ml_B" MaxAmount="10000" Tooltip="Tube 15ml" AllowContentTransfer="false" AllowContentPickup="true" AllowTrashing="false" SourceId="Tube15ml">
      <Triggers>
        <EventTrigger Event="PreviewClick">
          <Conditions>
            <CompositeCondition>
              <DataCondition Target="LeftHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
              <DataCondition Target="RightHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You need to wear gloves" />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="PreviewClick">
          <Actions>
            <Setter Property="EmphasisDuration" Value="0" />
          </Actions>
        </EventTrigger>
      </Triggers>
    </Container>
    <Container Id="EldonStickItem" MaxAmount="60" Tooltip="Eldon Stick" AllowContentTransfer="false" AllowContentPickup="false" AllowTrashing="false" SourceId="EldonStick">
      <Triggers>
        <EventTrigger Event="PreviewClick">
          <Conditions>
            <CompositeCondition>
              <DataCondition Target="LeftHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
              <DataCondition Target="RightHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You need to wear gloves" />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="PreviewClick">
          <Conditions>
            <DataCondition Target="RightHand" Property="HasElement" Value="false" />
          </Conditions>
          <Actions>
            <Setter Property="EmphasisDuration" Value="0" />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <CompositeCondition>
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="PlaceholderBehaviour" Value="Trash" />
              <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ActiveStates" Comparison="Contains" Value="StickClean" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You will need this clean Eldon stick" />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <CompositeCondition>
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Type" Value="Container" />
              <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="Amount" Comparison="GreaterThan" Value="0" />
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="StickUsedOnEldonCard" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You need a new Eldon stick for the next test.\nThrow away the used one in the trash bin." />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <CompositeCondition Match="Any">
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="TestTube15ml" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Type" Value="Container" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Good laboratory practices include the use of pipettes to add liquids." />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <!--DROP INTO ANTI-A-->
        <EventTrigger Event="Drop">
          <Conditions>
            <CompositeCondition Match="All">
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="StickClean" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="AntiA_Item" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWaterAndBlood" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <GotoState StateId="StickUsedOnEldonCard" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Blood" Amount="20" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Water" Amount="20" />
            <GotoState Target="BloodTestCard1W2" StateId="A_HasMixed" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
          </Actions>
        </EventTrigger>
        <!--DROP INTO ANTI-B-->
        <EventTrigger Event="Drop">
          <Conditions>
            <CompositeCondition Match="All">
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="StickClean" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="AntiB_Item" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWaterAndBlood" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <GotoState StateId="StickUsedOnEldonCard" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Blood" Amount="20" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Water" Amount="20" />
            <GotoState Target="BloodTestCard1W2" StateId="B_HasMixed" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
          </Actions>
        </EventTrigger>
        <!--DROP INTO ANTI-D-->
        <EventTrigger Event="Drop">
          <Conditions>
            <CompositeCondition Match="All">
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="StickClean" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="AntiD_Item" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWaterAndBlood" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <GotoState StateId="StickUsedOnEldonCard" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Blood" Amount="20" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Water" Amount="20" />
            <GotoState Target="BloodTestCard1W2" StateId="D_HasMixed" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
          </Actions>
        </EventTrigger>
        <!--DROP INTO CONTROL-->
        <EventTrigger Event="Drop">
          <Conditions>
            <CompositeCondition Match="All">
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="StickClean" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="Control_Item" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWaterAndBlood" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <GotoState StateId="StickUsedOnEldonCard" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Blood" Amount="20" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Water" Amount="20" />
            <GotoState Target="BloodTestCard1W2" StateId="C_HasMixed" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
          </Actions>
        </EventTrigger>

        <!--DROP INTO ANTI-A CARMEN'S CARD-->
        <EventTrigger Event="Drop">
          <Conditions>
            <CompositeCondition Match="All">
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="StickClean" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_AntiA_Item" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWaterAndBlood" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <GotoState StateId="StickUsedOnEldonCard" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Blood_Carmen" Amount="20" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Water" Amount="20" />
            <GotoState Target="BloodTestCard_Carmen" StateId="A_HasMixed" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
          </Actions>
        </EventTrigger>
        <!--DROP INTO ANTI-B CARMEN'S CARD-->
        <EventTrigger Event="Drop">
          <Conditions>
            <CompositeCondition Match="All">
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="StickClean" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_AntiB_Item" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWaterAndBlood" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <GotoState StateId="StickUsedOnEldonCard" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Blood_Carmen" Amount="20" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Water" Amount="20" />
            <GotoState Target="BloodTestCard_Carmen" StateId="B_HasMixed" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
          </Actions>
        </EventTrigger>
        <!--DROP INTO ANTI-D CARMEN'S CARD-->
        <EventTrigger Event="Drop">
          <Conditions>
            <CompositeCondition Match="All">
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="StickClean" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_AntiD_Item" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWaterAndBlood" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <GotoState StateId="StickUsedOnEldonCard" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Blood_Carmen" Amount="20" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Water" Amount="20" />
            <GotoState Target="BloodTestCard_Carmen" StateId="D_HasMixed" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
          </Actions>
        </EventTrigger>
        <!--DROP INTO CONTROL CARMEN'S CARD-->
        <EventTrigger Event="Drop">
          <Conditions>
            <CompositeCondition Match="All">
              <DataCondition Property="ActiveStates" Comparison="Contains" Value="StickClean" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_Control_Item" />
              <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWaterAndBlood" />
            </CompositeCondition>
          </Conditions>
          <Actions>
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <GotoState StateId="StickUsedOnEldonCard" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Blood_Carmen" Amount="20" />
            <ModifyContent Target="{Binding CurrentElement, RelativeSource=RightHand}" Mode="Add" Type="Content_Water" Amount="20" />
            <GotoState Target="BloodTestCard_Carmen" StateId="C_HasMixed" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
          </Actions>
        </EventTrigger>

        <!--ELDON STICK WARNINGS-->
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <CompositeCondition Match="All">
              <CompositeCondition>
                <DataCondition Property="ActiveStates" Comparison="NotContains" Value="StickClean" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWaterAndBlood" />
              </CompositeCondition>
              <CompositeCondition Match="1">
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="AntiA_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="AntiB_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="AntiD_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="Control_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_AntiA_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_AntiB_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_AntiD_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_Control_Item" />
              </CompositeCondition>
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="The Eldon stick has already been used.\nPlease discard it and use a new one to prevent cross-contamination." />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <CompositeCondition Match="All">
              <CompositeCondition>
                <DataCondition Property="ActiveStates" Comparison="Contains" Value="StickClean" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ActiveStates" Comparison="Contains" Value="EldonCard_Mixed" />
              </CompositeCondition>
              <CompositeCondition Match="1">
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="AntiA_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="AntiB_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="AntiD_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="Control_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_AntiA_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_AntiB_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_AntiD_Item" />
                <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="EC_CARMEN_Control_Item" />
              </CompositeCondition>
            </CompositeCondition>
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Please use Eldon stick only for the unmixed circle." />
            <CancelEvent />
          </Actions>
        </EventTrigger>
      </Triggers>
      <StateGroups>
        <StateGroup Id="StateGroup_UsabilityCondition">
          <States>
            <State Id="StickClean" IsDefault="true" />
            <State Id="StickUsedOnEldonCard">
              <Triggers>
                <Trigger>
                  <Conditions>
                    <CompositeCondition>
                      <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="Equals" Value="EldonStickItem" />
                      <DataCondition Target="{Binding HasElement, RelativeSource=RightHand}" Value="true" />
                    </CompositeCondition>
                  </Conditions>
                  <Actions>
                    <Setter Target="Placeholder_EldonStick1" Property="IsVisible" Value="false">
                      <Conditions>
                        <DataCondition Target="Placeholder_EldonStick1" Property="HasElement" Comparison="Equals" Value="false" />
                      </Conditions>
                    </Setter>
                    <Setter Target="Placeholder_EldonStick2" Property="IsVisible" Value="false">
                      <Conditions>
                        <DataCondition Target="Placeholder_EldonStick2" Property="HasElement" Comparison="Equals" Value="false" />
                      </Conditions>
                    </Setter>
                    <Setter Target="Placeholder_EldonStick3" Property="IsVisible" Value="false">
                      <Conditions>
                        <DataCondition Target="Placeholder_EldonStick3" Property="HasElement" Comparison="Equals" Value="false" />
                      </Conditions>
                    </Setter>
                    <Setter Target="Placeholder_EldonStick4" Property="IsVisible" Value="false">
                      <Conditions>
                        <DataCondition Target="Placeholder_EldonStick4" Property="HasElement" Comparison="Equals" Value="false" />
                      </Conditions>
                    </Setter>
                    <Setter Target="Placeholder_EldonStick1W3" Property="IsVisible" Value="false">
                      <Conditions>
                        <DataCondition Target="Placeholder_EldonStick1W3" Property="HasElement" Comparison="Equals" Value="false" />
                      </Conditions>
                    </Setter>
                    <Setter Property="AllowTrashing" Value="true" />
                  </Actions>
                </Trigger>
              </Triggers>
            </State>
          </States>
        </StateGroup>
      </StateGroups>
    </Container>
    <Element Id="MOL_Antibody" GameObjectId="MOL_AntibodySurface" SourceId="MOL_AntibodySurface">
      <StateGroups>
        <StateGroup Id="StateGroup_HoloStartRotation">
          <States>
            <State Id="State_HoloStartRotationCW" AnimationId="Rotate" WrapMode="Loop" IsReverse="false" AnimationSpeed="0.1" />
            <State Id="State_HoloStartRotationCCW" AnimationId="Rotate" WrapMode="Loop" IsReverse="true" AnimationSpeed="0.1" IsDefault="true" />
          </States>
        </StateGroup>
      </StateGroups>
    </Element>
  </Items>
  <ContentTypes>
    <ContentType Id="Content_Water" Title="Water" Color="255,255,255" Opacity="0" />
    <ContentType Id="Content_Blood" Title="Blood Sample 1" Color="255,0,0" Opacity="100" />
    <ContentType Id="Content_Blood_P2" Title="Blood Sample 2" Color="255,0,0" Opacity="100" />
    <ContentType Id="Content_Blood_P3" Title="Blood Sample 3" Color="255,0,0" Opacity="100" />
    <ContentType Id="Content_Blood_P4" Title="Blood Sample 4" Color="255,0,0" Opacity="100" />
    <ContentType Id="Content_Blood_Carmen" Title="Carmen's blood sample" Color="255,0,0" Opacity="100" />
    <ContentType Id="Content_Blood_FirstChild" Title="First child's blood sample" Color="255,0,0" Opacity="100" />
    <ContentType Id="Content_Blood_Fetus" Title="Fetal blood sample" Color="255,0,0" Opacity="100" />
  </ContentTypes>

  <Conversations>
    <Conversation Id="Conversation_Labster" Sentence="Welcome to Labster! A novel teaching platform for exploring the world of biotechnology." NextConvId="Conversation_Welcome" ReadMoreUrl="antibodies" />
    <Conversation Id="Conversation_Welcome" Sentence="So glad you made it! This is the Antibodies Lab! In this lab you will learn the basics about antibodies and you will help a young couple to identify the risk of Rhesus disease.\n\nDr. Lee is asking for you in the consultation room, let's go!" />
    <Conversation Id="Conversation_HospCon" VoiceId="DrLee" Sentence="[m][b]Dr. Lee:[/b][/m] Hello, I am Dr. Lee, the obstetrician. How can I help you today?" />
    <Conversation Id="Conversation_HospCon1" VoiceId="Joel" Sentence="[m][b]Joel:[/b][/m] Hi, Dr. Lee. We are here today because my wife is pregnant with our second child and we are a bit worried." />
    <Conversation Id="Conversation_HospCon2" VoiceId="Carmen" Sentence="[m][b]Carmen:[/b][/m] We have [m]read[/m][say]red[/say] about Rhesus incompatibility and that this could cause problems during pregnancy." />
    <Conversation Id="Conversation_Rh" VoiceId="Joel" Sentence="[m][b]Joel:[/b][/m] Can you tell us more about Rhesus incompatibility and the risk for the baby?" />
    <Conversation Id="Conversation_Rh1" VoiceId="DrLee" Sentence="[m][b]Dr. Lee:[/b][/m] When having the second child, if the baby is Rhesus-positive, the pre-formed anti-Rhesus antibodies can cross the placenta and enter the fetal bloodstream." />
    <Conversation Id="Conversation_Rh2" VoiceId="DrLee" Sentence="[m][b]Dr. Lee:[/b][/m] The antibodies attack the fetal red blood cells with the Rhesus antigen. In the worst case this can lead to hemolytic disease of the newborn or short HDN. It is characterized by a decreased level of red blood cells." />
    <Conversation Id="Conversation_HospEnd" VoiceId="Joel" Sentence="[m][b]Joel:[/b][/m] Thank you for your explanation. Is there anything we can do to test for a potential Rhesus incompatibility?" />
    <Conversation Id="Conversation_HospEnd1" VoiceId="DrLee" Sentence="[m][b]Dr. Lee:[/b][/m] Absolutely! I will schedule for a blood test to identify your Rhesus statuses to see if further treatment is needed." />
    <Conversation Id="Conversation_EnterLab" Sentence="Joel and Carmen are expecting their second child and want to find out if there is Rhesus incompatibility between Carmen and the baby.\n\nDr. Lee has tasked you to review their case, so let's get started!" />

    <!--region [LabPad Tutorials]-->
    <Conversation Id="Conversation_StartTutorial" Sentence="Would you like to start a short Tutorial on how to use the LabPad and navigate through the lab?">
      <Options>
        <Option Sentence="Yes, I am playing LABSTER for the first time." NextConvId="Conversation_Tutorial1" />
        <Option Sentence="No, I know how to use the LabPad.">
          <Triggers>
            <Trigger>
              <Actions>
                <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_LabPadTutorialIsSkipped" />
              </Actions>
            </Trigger>
          </Triggers>
        </Option>
      </Options>
    </Conversation>
    <Conversation Id="Conversation_Tutorial1" Sentence="The LabPad will guide you through the virtual lab and will store all the information you collect while playing.\n\nYou are currently in the &quot;[b]Home[/b]&quot; tab. Here the instructions and quiz questions will be displayed.\n\nClick &quot;[b]Continue[/b]&quot; to proceed. Make sure you read the information carefully - you won't be able to access it anymore after you click &quot;[b]Continue[/b]&quot;." ReadMoreUrl="relevant-theory" />
    <Conversation Id="Conversation_Tutorial2" Sentence="&lt;p&gt;                                          [b]↑[/b]&lt;br/&gt;Images are stored in the [b]&quot;Media&quot;[/b] tab.&lt;br/&gt;In the virtual lab you will be working with dangerous chemicals.&lt;br/&gt;Take a look at the warning symbol on this flask! &lt;img alt=&quot;&quot; src=&quot;https://s3.amazonaws.com/labsterim/media/uploads/tutorial/ErlenmeyerFlask.png&quot;/&gt;This means that the flask contains corrosive chemicals.&lt;br/&gt;Click on the blue [b]&quot;View Image&quot;[/b] button below to identify other hazard symbols you might find in the lab.&lt;br/&gt;                                        [b]↓[/b]&lt;/p&gt;" ImageId="Image_hazard" />
    <Conversation Id="Conversation_Tutorial3" Sentence="&lt;p&gt;                       [b]↑[/b]&lt;br/&gt;Open the [b]&quot;Theory&quot;[/b] tab to access more information. You can read about what you have to consider when working with corrosive chemicals here.&lt;/p&gt;" ReadMoreUrl="corrosive-chemicals" />
    <Conversation Id="Conversation_Tutorial4" Sentence="Great work!                                            [b]↑[/b]\nYou can track your progress in the [b]&quot;Mission&quot;[/b] tab. You will see all the completed tasks listed there. Use it if you want to get an overview of your work in the lab.\n\nYou can also see your [b]PROGRESS[/b] and the [b]virtual lab time[/b] on the top right of the LabPad. You are very efficient and start working early in the lab, 8:00 am everyday!" />
    <Conversation Id="Conversation_TutorialEnd" Sentence="Good job! Now you know how to work in the lab. If you ever get stuck somewhere or if you want to take a break you can [b]exit the lab[/b] from the button at the top center, and continue from the last checkpoint. Let's get started with today's mission." />
    <!--endregion [LabPad Tutorial]-->

    <Conversation Id="Conversation_Intro" Sentence="Awesome! Now that you're all dressed up for the experiment, you're ready to help Joel and Carmen." />
    <Conversation Id="Conversation_ABAGint" VoiceId="Marie" Sentence="[b][m]Marie:[/b][/m] Hey there! I'm Marie! Before we start with your quest let's talk a bit more about the key players in this mission: antibodies!\n\n[b]Antibodies[/b] are super important when it comes to protecting your body from viruses, bacteria and other harmful substances.\nEach antibody binds to a target called [b]antigen[/b]. Together they form a unique antibody-antigen complex.\nIt may help to imagine the antigen as a lock and the antibody as single key for the lock." ReadMoreUrl="antibody" />
    <Conversation Id="Conversation_MolView" Sentence="[b][m]Marie:[/b][/m] Antibodies are also known as immunoglobulins or short Ig. They are Y-shaped proteins. Let's have a look at the structure of an antibody in the molecular viewer." />
    <Conversation Id="Conversation_Holotable1" NextConvId="Conversation_Holotable1b" Sentence="Here you can see a hologram of an antibody, just like the one which causes problems in Rhesus incompatibility. Isn't it a beautiful Y-shaped molecule?" />
    <Conversation Id="Conversation_Holotable1b" Sentence="An antibody consists of two long chains called heavy chains and two short chains called light chains." />
    <Conversation Id="Conversation_Holotable2" Sentence="Can you see the different chains in the hologram? The heavy chains are colored in green/turquoise and red/orange. The light chains appear in yellow and blue." />
    <Conversation Id="Conversation_ABAGint1" VoiceId="Marie" NextConvId="Conversation_ABAGint2" Sentence="&lt;p&gt;[b][m]Marie:[/b][/m] Every antibody is unique, just like a fingerprint! It's produced to detect a single antigen. Binding of the antibody to the antigen happens through a distinct region at the tips of the Y also known as [b]variable region[/b]. This region is different for every antibody and specifically binds to an area called [b]epitope[/b] on the antigen. &lt;/p&gt;&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://s3.amazonaws.com/labsterim/media/uploads/ABL/antibody.png&quot;/&gt;&lt;/p&gt;" ReadMoreUrl="ab-structure" ImageId="Image_ab" />
    <Conversation Id="Conversation_ABAGint2" VoiceId="Marie" Sentence="&lt;p&gt;[b][m]Marie:[/b][/m] In mammals there are five different classes, or [b]isotypes[/b], of antibodies:[m][b] IgA, IgD, IgE, IgG, and IgM[/b][/m][say]eye gee A, eye gee D, eye gee E, eye gee, G, and eye gee M[/say]. They are categorized according to their biochemical properties and fulfill different functions in the body. &lt;/p&gt;&lt;p&gt;See how the classes differ in their shape and organization.&lt;/p&gt;&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://s3.amazonaws.com/labsterim/media/uploads/ABL/isotypes_s.png&quot;/&gt;&lt;/p&gt;" ReadMoreUrl="isotypes" ImageId="Image_isotypes" />
    <Conversation Id="Conversation_ABAGstart" VoiceId="Marie" Sentence="[b][m]Marie:[/b][/m] Let's see if you can identify the structures of an antigen and an antibody." />
    <Conversation Id="Conversation_ABAGcorrect" Sentence="Perfect! You have labelled all the parts of the antibody and antigen correctly." />
    <Conversation Id="Conversation_ABAGwrong" Sentence="No this is incorrect, please try again." />
    <Conversation Id="Conversation_ABAGhint" Sentence="Hmm, looks like you need a bit of help! Click on the 'Theory' tab to see the structure of an antigen and an antibody." ReadMoreUrl="ab-structure" />
    <Conversation Id="Conversation_AAnity" NextConvId="Conversation_AAnity1" Sentence="When an antibody binds to its matching antigen, it forms a tight complex. There are two parameters which determine how efficient the antibody binds to the antigen." />
    <Conversation Id="Conversation_AAnity1" Sentence="&lt;p&gt;They are: [b]affinity[/b] and [b]avidity[/b].&lt;/p&gt;&lt;p&gt;Affinity describes the strength of a single antibody-antigen contact site.&lt;/p&gt;&lt;p&gt;Avidity describes the sum of affinities of multiple antibody-antigen contact sites.&lt;/p&gt;&lt;p&gt;[m]IgG[/m][say]eye gee G[/say] has a strong affinity for its antigens. [m]IgM[/m][say]eye gee M[/say], on the other side, has low affinity but high avidity.&lt;/p&gt;&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://s3.amazonaws.com/labsterim/media/uploads/ABL/avidity-affinity_s.png&quot;/&gt;&lt;/p&gt;" ReadMoreUrl="abag-complex" ImageId="Image_avid" />
    <Conversation Id="Conversation_Animation" Sentence="Let's watch an animation to understand how the mother's immune system specifically produces antibodies against the Rhesus antigen of the baby and how an antibody-antigen complex is formed." />
    <Conversation Id="Conversation_Ani" Sentence="This is a fetal red blood cell. On its surface are Rhesus antigens also known as D antigens." />
    <Conversation Id="Conversation_Ani1" Sentence="Upon first encounter of the Rhesus-negative mother's immune system with the fetal blood, B cells produce specific IgG antibodies targeting the D antigens on the surface of the red blood cells. The body has established an immunological memory." />
    <Conversation Id="Conversation_Ani2" Sentence="During the second pregnancy, if the child is Rhesus-positive, these antibodies recognize the Rhesus antigens on the red blood cells." />
    <Conversation Id="Conversation_Ani3" Sentence="They build a tight antibody-antigen complex. Let's take a closer look at what happens at its interface." />
    <Conversation Id="Conversation_Ani4" Sentence="In every antibody-antigen complex, there are four main types of bonds that can be formed:" />
    <Conversation Id="Conversation_Ani5" Sentence="Hydrogen bonds," />
    <Conversation Id="Conversation_Ani6" Sentence="Electrostatic forces, or ionic bonds," />
    <Conversation Id="Conversation_Ani7" Sentence="Van der Waals forces," />
    <Conversation Id="Conversation_Ani8" Sentence="And hydrophobic interactions." />
    <Conversation Id="Conversation_AniEnd" NextConvId="Conversation_ABOStart" Sentence="Awesome! You now understand the basic concept of antigens and antibodies." />
    <Conversation Id="Conversation_ABOStart" Sentence="Before we determine the Rhesus status for Carmen and her children, we need to know how to conduct the blood test and interpret its results." />
    <Conversation Id="Conversation_ABO" VoiceId="Marie" NextConvId="Conversation_ABO1" Sentence="&lt;p&gt;[b][m]Marie:[/b][/m] The blood typing test we will use is based on the two most commonly used blood grouping systems: the [m][b]ABO[/b][/m][say]A B O[/say] group and the [b]Rhesus[/b] group.&lt;/p&gt;&lt;p&gt;Depending on the presence or absence of A and B antigens on the red blood cell's surface, a person either belongs to A, B, AB or O. Blood groups that are positive for Anti-D are assigned Rhesus positive. Following this classification, a person with blood group A+ would have A antigens as well as D antigens found on its red blood cells.&lt;/p&gt;&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://s3.amazonaws.com/labsterim/media/uploads/ABL/ABO_s.png&quot;/&gt;&lt;/p&gt;" ReadMoreUrl="blood-grouping-system" ImageId="Image_ABO" />
    <Conversation Id="Conversation_ABO1" VoiceId="Marie" Sentence="[b][m]Marie:[/b][/m] Do you know your blood type?\n\nKnowing a person's blood type is extremely important in the case of blood transfusions. When a patient receives blood from a donor with an incompatible blood type, [b]agglutination[/b] will occur. This means that the red blood cells will clump, which could be lethal to the patient.\n\nFor example: If a person with blood group B donates blood to a person with blood group A, agglutination will occur creating clots in the blood vessels. This happens because the recipient's body produces anti-B antibodies that will bind to antigen B on the red blood cells of the donor's blood." ReadMoreUrl="blood-transfusion" />
    <Conversation Id="Conversation_Eldon" Sentence="Let's get started with the blood typing test and determine the blood type of four different patients who are waiting for a blood transfusion from a matching donor.\n\nThere are four Eldon cards in front of you. Each of the circles on the cards contains antibodies for a specific blood antigen. If a matching antibody-antigen pair is formed during mixing blood, cells agglutinate. That is how we can determine, which blood group the sample belongs to." ReadMoreUrl="Blood_typing" />
    <Conversation Id="Conversation_Assist" Sentence="The lab assistant has prepared the remaining Eldon cards for you, and placed the blood samples on the corresponding cards." />
    <Conversation Id="Conversation_ABOexp" Sentence="Well done! Look at the test circles! Some of the blood drops don't look as soluble as before but precipitated. This is called agglutination." IsExplorable="true" />
    <Conversation Id="Conversation_ABOexp2" Sentence="Agglutination is also known as blood clotting. Blood clots are for example formed when you injure yourself. The clots prevent excessive loss of blood by 'sealing' the injury site." />
    <Conversation Id="Conversation_ABOint" Sentence="Alright, have a go at labelling the Eldon cards from the experiment you just did!" />
    <Conversation Id="Conversation_ABOint1" Sentence="Zoom into the individual Eldon card, and select the correct blood type from the drop down list. Remember to take the Rhesus factor (designated with + or -) into account.\n\n\nHave you labelled the test cards?">
      <Options>
        <Option Sentence="Yes I have!">
          <Triggers>
            <Trigger>
              <Actions>
                <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_SampleABOPuzzle_Scoring" />
              </Actions>
            </Trigger>
          </Triggers>
        </Option>
        <Option Sentence="No, I need more time.">
          <Triggers>
            <Trigger>
              <Actions>
                <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_SampleABOPuzzle_Default" />
              </Actions>
            </Trigger>
          </Triggers>
        </Option>
      </Options>
    </Conversation>
    <Conversation Id="Conversation_ABOint2" Sentence="Zoom into the individual Eldon card, and select the correct blood type from the drop down list. Remember to take the Rhesus factor (designated with + or -) into account.\n\n\nHave you labelled the test cards?">
      <Options>
        <Option Sentence="Yes I have!">
          <Triggers>
            <Trigger>
              <Actions>
                <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_CarmenABOPuzzle_Scoring" />
              </Actions>
            </Trigger>
          </Triggers>
        </Option>
        <Option Sentence="No, I need more time.">
          <Triggers>
            <Trigger>
              <Actions>
                <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_CarmenABOPuzzle_Default" />
              </Actions>
            </Trigger>
          </Triggers>
        </Option>
      </Options>
    </Conversation>
    <Conversation Id="Conversation_ABOcorrect" Sentence="Excellent! You're an expert on blood typing! You now understand the principles of compatibility in blood transfusions." />
    <Conversation Id="Conversation_ABOwrong" Sentence="It seems you haven't labeled all Eldon cards correctly. Please try again.">
      <Triggers>
        <Trigger>
          <Actions>
            <Setter Target="{Binding Parameters.Parameter_ABO_PuzzleTrial.Value, ElementId=PCW1}" Adjustment="1" />
            <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_SampleABOPuzzle_Default" />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>
    <Conversation Id="Conversation_ABOhint" Sentence="Looks like you need a bit of help! Click on the 'Theory' tab to read about the antigens and antibodies present in the different blood types." ReadMoreUrl="blood-grouping-system">
      <Triggers>
        <Trigger>
          <Actions>
            <Setter Target="{Binding Parameters.Parameter_ABO_PuzzleTrial.Value, ElementId=PCW1}" Adjustment="1" />
            <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_SampleABOPuzzle_Default" />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>
    <Conversation Id="Conversation_ABOwrong_Carmen" Sentence="It seems you haven't labeled all Eldon cards correctly. Please try again.">
      <Triggers>
        <Trigger>
          <Actions>
            <Setter Target="{Binding Parameters.Parameter_ABOCarmen_PuzzleTrial.Value, ElementId=PCW1}" Adjustment="1" />
            <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_CarmenABOPuzzle_Default" />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>
    <Conversation Id="Conversation_ABOhint_Carmen" Sentence="Looks like you need a bit of help! Click on the 'Theory' tab to read about the antigens and antibodies present in the different blood types." ReadMoreUrl="blood-grouping-system">
      <Triggers>
        <Trigger>
          <Actions>
            <Setter Target="{Binding Parameters.Parameter_ABOCarmen_PuzzleTrial.Value, ElementId=PCW1}" Adjustment="1" />
            <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_CarmenABOPuzzle_Default" />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>
    <Conversation Id="Conversation_ABOEnd" Sentence="Let's apply these principles to help Joel and Carmen to determine if there is a Rhesus incompatibility between Carmen and her second child." />
    <Conversation Id="Conversation_RhStart" Sentence="To determine a potential Rhesus incompatibility we need to first identify the Rhesus status." />
    <Conversation Id="Conversation_RhStart1" NextConvId="Conversation_RhExp" Sentence="We have collected the blood sample from Carmen and her first child. We have also done fetal blood sampling from the fetus by withdrawing blood from the umbilical vein." />
    <Conversation Id="Conversation_RhExp" Sentence="Let's perform blood typing for Carmen, her first child, and her second child.\n\nThe lab assistant has already prepared the Eldon cards with a drop of water on each circle." />
    <Conversation Id="Conversation_RhAssist" Sentence="The lab assistant will prepare the rest of the blood samples for the remaining Eldon cards.\n\nObserve the cards when she is done." />
    <Conversation Id="Conversation_RhEnd" Sentence="Well done! Now we know the Rhesus status for Carmen, her first child, and her unborn second child." />
    <Conversation Id="Conversation_Review" VoiceId="Marie" NextConvId="Conversation_ReviewEnd" Sentence="[m][b]Marie:[/b][/m] Let's review what we've learned.\n\nWe know the basic concepts about antibodies and antigens, and that compatibility is important during blood transfusion. We also know that Rhesus incompatibility can be a problem during pregnancy." />
    <Conversation Id="Conversation_ReviewEnd" VoiceId="Marie" Sentence="[m][b]Marie:[/b][/m] We can now confirm that there is Rhesus incompatibility between Carmen and her child. Let's go back to the hospital consultation room to tell Joel and Carmen what we've found out." />
    <Conversation Id="Conversation_Outro" VoiceId="DrLee" Sentence="[m][b]Dr. Lee:[/b][/m] Hi, welcome back. We have determined the Rhesus status for you and your children." />
    <Conversation Id="Conversation_Outro1" VoiceId="DrLee" Sentence="[m][b]Dr. Lee:[/b][/m] After performing the blood test, we have found that you are Rhesus-negative, while both your first child and second child are Rhesus-positive. This means there is a Rhesus incompatibility." />
    <Conversation Id="Conversation_Outro2" VoiceId="Carmen" Sentence="[m][b]Carmen:[/b][/m] Oh dear! Is there any treatment?" />
    <Conversation Id="Conversation_Outro3" VoiceId="DrLee" Sentence="[m][b]Dr. Lee:[/b][/m] Yes there is. RhoGAM® injections have been developed to treat Rhesus incompatibilities during pregnancies. These injections are small dosages of anti-Rhesus antibodies." />
    <Conversation Id="Conversation_Outro4" VoiceId="DrLee" Sentence="[m][b]Dr. Lee:[/b][/m] The dosage is low enough such that it does not harm the fetus, and high enough to prevent the immune system from producing more Rhesus antibodies." />
    <Conversation Id="Conversation_Outro5" VoiceId="Joel" Sentence="[m][b]Joel:[/b][/m] Sounds great! We would like to make a schedule for the injections. Thank you so much for your help!" />
    <Conversation Id="Conversation_End" NextConvId="Conversation_End2" Sentence="&lt;p&gt;Congratulations! You have completed the Antibodies Lab, and helped Joel and Carmen determine the Rhesus incompatibility.&lt;/p&gt; &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://labsterim.s3.amazonaws.com/media/uploads/ABL/labster_illustration_copy.png&quot; /&gt;&lt;/p&gt; &lt;p&gt;Carmen has given birth to a healthy baby girl!&lt;/p&gt;" />
    <Conversation Id="Conversation_End2" Sentence="Your results will be saved showing the [b]100%[/b] completion.\n\nPlease fill in the feedback survey by clicking the &quot;Continue&quot; button below (it will take you 1 minute). We will use your feedback to keep improving Labster. If you want to give us even more feedback, you can use the &quot;Help&quot; button.">
      <Triggers>
        <Trigger>
          <Actions>
            <StartQuizBlock Target="QuizblockUserSurvey" />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>
    <Conversation Id="Conversation_HoloExplore" Sentence="Are you done exploring?">
      <Options>
        <Option Sentence="a) Yes, I'm done exploring.">
          <Triggers>
            <Trigger>
              <Actions>
                <GotoState Target="{Binding CurrentElement, ElementId=LeftHand}" StateId="State_SessionDefault" />
              </Actions>
            </Trigger>
          </Triggers>
        </Option>
        <Option Sentence="b) No, I want to explore more." />
      </Options>
    </Conversation>
    <Conversation Id="Conversation_SurveyCompleted" Sentence="Thank you for your feedback!" IsContinue="false" IsExplorable="false" />
  </Conversations>

  <QuizBlocks>
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_Tutorial1" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_Tutorial2" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizblockUserSurvey">
      <CompletedActions>
        <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_SurveyCompleted" />
      </CompletedActions>
    </QuizBlock>
    <QuizBlock GUIDialogueId="Conversation_PopUpTransparant" Id="QuizBlock_Intro">
      <CompletedActions>
        <ControlMedia Action="Resume" HasFrames="false" EventName="CameraFather" />
      </CompletedActions>
    </QuizBlock>
    <QuizBlock GUIDialogueId="Conversation_PopUpTransparant" Id="QuizBlock_Intro1">
      <CompletedActions>
        <ControlMedia Action="Resume" />
      </CompletedActions>
    </QuizBlock>
    <QuizBlock GUIDialogueId="Conversation_PopUpTransparant" Id="QuizBlock_ABAG" />
    <QuizBlock GUIDialogueId="Conversation_PopUpTransparant" Id="QuizBlock_ABclass" />
    <QuizBlock GUIDialogueId="Conversation_PopUpTransparant" Id="QuizBlock_Holo" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_Epitope" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_Animation" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_Exp1" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_AntiD" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_Control" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_Agg" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_ABO" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_Transfusion" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_RhBasic" />
    <QuizBlock GUIDialogueId="Conversation_LabPad" Id="QuizBlock_Rhincomp" />
  </QuizBlocks>

  <Quests>
    <Quest Id="Quests_Checklist" MustStartInOrder="true">
      <Missions>
        <!--MISSION 0-->
        <Mission Id="Mission_Inttio" Title="Welcome to the Antibodies lab" MustStartInOrder="true" IsAutoSave="true">
          <Tasks>
            <Task Id="Task_InitializeRuntimeElements" IsLogHidden="true">
              <StartActions>
                <CreateItem Target="TestTube15mlPlaceholderRackIW28" ItemId="TestTube15ml" />
                <ModifyContent Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW28}" Mode="Add" Type="Content_Blood" Amount="9000" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW28}" Property="AllowContentPickup" Value="false" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW28}" Property="AllowContentTransfer" Value="false" />

                <CreateItem Target="TestTube15mlPlaceholderRackIW24" ItemId="TestTube15ml" />
                <ModifyContent Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW24}" Mode="Add" Type="Content_Blood_P2" Amount="9000" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW24}" Property="AllowContentPickup" Value="false" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW24}" Property="AllowContentTransfer" Value="false" />

                <CreateItem Target="TestTube15mlPlaceholderRackIW25" ItemId="TestTube15ml" />
                <ModifyContent Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW25}" Mode="Add" Type="Content_Blood_P3" Amount="9000" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW25}" Property="AllowContentPickup" Value="false" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW25}" Property="AllowContentTransfer" Value="false" />

                <CreateItem Target="TestTube15mlPlaceholderRackIW21" ItemId="TestTube15ml" />
                <ModifyContent Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW21}" Mode="Add" Type="Content_Blood_P4" Amount="9000" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW21}" Property="AllowContentPickup" Value="false" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW21}" Property="AllowContentTransfer" Value="false" />

                <CreateItem Target="TestTube15mlPlaceholderRackIW22" ItemId="TestTube15ml" />
                <ModifyContent Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW22}" Mode="Add" Type="Content_Water" Amount="9000" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW22}" Property="AllowContentPickup" Value="true" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW22}" Property="AllowContentTransfer" Value="false" />

                <CreateItem Target="TestTube15mlPlaceholderRackIW33" ItemId="TestTube15ml_B" />
                <ModifyContent Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW33}" Mode="Add" Type="Content_Blood_Carmen" Amount="9000" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW33}" Property="AllowContentPickup" Value="true" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW33}" Property="AllowContentTransfer" Value="false" />

                <CreateItem Target="TestTube15mlPlaceholderRackIW32" ItemId="TestTube15ml_B" />
                <ModifyContent Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW32}" Mode="Add" Type="Content_Blood_FirstChild" Amount="9000" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW32}" Property="AllowContentPickup" Value="false" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW32}" Property="AllowContentTransfer" Value="false" />

                <CreateItem Target="TestTube15mlPlaceholderRackIW37" ItemId="TestTube15ml_B" />
                <ModifyContent Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW37}" Mode="Add" Type="Content_Blood_Fetus" Amount="9000" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW37}" Property="AllowContentPickup" Value="false" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW37}" Property="AllowContentTransfer" Value="false" />

                <CreateItem Target="TestTube15mlPlaceholderRackIW35" ItemId="TestTube15ml_B" />
                <ModifyContent Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW35}" Mode="Add" Type="Content_Water" Amount="9000" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW35}" Property="AllowContentPickup" Value="false" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW35}" Property="AllowContentTransfer" Value="false" />
              </StartActions>
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW28}" Comparison="Contains" Value="Content_Blood" />
                  <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW24}" Comparison="Contains" Value="Content_Blood_P2" />
                  <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW25}" Comparison="Contains" Value="Content_Blood_P3" />
                  <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW21}" Comparison="Contains" Value="Content_Blood_P4" />
                  <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW22}" Comparison="Contains" Value="Content_Water" />

                  <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW33}" Comparison="Contains" Value="Content_Blood_Carmen" />
                  <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW32}" Comparison="Contains" Value="Content_Blood_FirstChild" />
                  <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW37}" Comparison="Contains" Value="Content_Blood_Fetus" />
                  <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW35}" Comparison="Contains" Value="Content_Water" />
                </CompositeCondition>
              </CompletedWhen>
            </Task>
            <Task Id="Task_Welcome" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_Labster" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Welcome" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_WatchIntroAnimation" IsLogHidden="true">
              <StartActions>
                <ShowMedia Source="004_CYT_intro_and_consult" AllowSkip="false" AllowContinue="false" Title="Antibodies Lab Intro Animation" IsReplayable="false" />
                <EndConversation Target="SubtitleConversation" />
                <EndConversation Target="Popup_Title" />

                <Wait Notification="MediaAnimationStarted" />
                <ControlMedia Action="Resume" HasFrames="false" EventName="StartConsultation2" />
                <Wait Duration="4" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraDoctor" />
                <ControlMedia Action="Pause" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_HospCon" Wait="true" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraFather" />
                <ControlMedia Action="Pause" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_HospCon1" Wait="true" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraMother" />
                <ControlMedia Action="Pause" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_HospCon2" Wait="true" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraFather" />
                <ControlMedia Action="Pause" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Rh" Wait="true" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraDoctor" />
                <ControlMedia Action="Pause" />
                <StartQuizBlock Target="QuizBlock_Intro" IsMuted="true" Wait="true" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraDoctor" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Rh1" Wait="true" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraDoctor" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Rh2" Wait="true" />

                <EndConversation Target="SubtitleConversation" />
                <ControlMedia Action="Pause" />
                <StartQuizBlock Target="QuizBlock_Intro1" IsMuted="true" Wait="true" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraFather" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_HospEnd" Wait="true" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraDoctor" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_HospEnd1" Wait="true" />

                <EndConversation Target="EventConversation" />
                <EndConversation Target="Popup_Title" />
                <ControlMedia Action="Resume" HasFrames="false" EventName="EndConsultation" />

                <ControlMedia Action="Stop" />
              </StartActions>
              <CompletedWhen>
                <CompositeCondition Match="All">
                  <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_HospEnd1" />
                  <DataCondition Target="QuizBlock_Intro" Property="IsCompleted" Value="true" />
                  <DataCondition Target="QuizBlock_Intro1" Property="IsCompleted" Value="true" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="{Binding RelativeSource=RightHand}" Property="IsVisible" Value="true" />
                <Wait Duration="0.2" />
              </CompletedActions>
            </Task>
          </Tasks>
        </Mission>
        <!--MISSION 1-->
        <Mission Id="Mission_EntLab" Title="LabPad tutorial" MustStartInOrder="true" IsAutoSave="true">
          <Tasks>
            <!--region [start the LabPad tutorial]-->
            <Task Id="Task_Tutorial0" Weight="0" Instructions="LabPad tutorial." IsMuted="true" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_StartTutorial" />
              </StartActions>
              <CompletedWhen Match="Any">
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_StartTutorial" />
              </CompletedWhen>
              <SkippedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_LabPadTutorialIsSkipped" />
              </SkippedWhen>
            </Task>
            <Task Id="Task_Tutorial1" Title="Introduction to the LabPad" Weight="0" Instructions="Learn how to use the LabPad." IsLogHidden="false">
              <CompletedWhen Match="Any">
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Tutorial1" />
              </CompletedWhen>
              <SkippedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_LabPadTutorialIsSkipped" />
              </SkippedWhen>
            </Task>
            <Task Id="Task_Tutorial2" Weight="0" Instructions="Try the &quot;View Image&quot; button." IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_Tutorial2" />
              </StartActions>
              <CompletedWhen Match="Any">
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Tutorial2" />
              </CompletedWhen>
              <SkippedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_LabPadTutorialIsSkipped" />
              </SkippedWhen>
            </Task>
            <Task Id="Task_Tutorial3" Title="Learn how to access the relevant theory" Weight="0" Instructions="In the &quot;Theory&quot; tab you can access the relevant theory at any time." IsLogHidden="false">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_Tutorial3" />
              </StartActions>
              <CompletedWhen Match="Any">
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Tutorial3" />
              </CompletedWhen>
              <SkippedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_LabPadTutorialIsSkipped" />
              </SkippedWhen>
            </Task>
            <Task Id="Task_Tutorial4" Instructions="The quiz questions need to be answered in the &quot;Home&quot; tab." Weight="0" IsMuted="true" IsLogHidden="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_Tutorial1" />
              </StartActions>
              <CompletedWhen Match="Any">
                <DataCondition Target="QuizBlock_Tutorial1" Property="IsCompleted" Value="true" />
              </CompletedWhen>
              <SkippedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_LabPadTutorialIsSkipped" />
              </SkippedWhen>
            </Task>
            <Task Id="Task_Tutorial5" Instructions="Pick up a lab coat from the rack.\n   [b]→ Click here for more info ←[/b]." Weight="0" Description="You can always click the LabPad to obtain more information about a task.\n\nHow to wear a lab coat:\n     1. Make sure you are in the center view of the lab.\n     2. Click on the lab coat rack to pick up a coat.\n\nClick on the lab in the background to swipe down the LabPad." IsLogHidden="true">
              <StartActions>
                <Setter Target="LabCoat" Property="EmphasisDuration" Value="-1" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="LabCoat" Property="ActiveStates" Comparison="Contains" Value="Weared" />
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="LabCoat" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
              <SkippedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_LabPadTutorialIsSkipped" />
              </SkippedWhen>
            </Task>
            <Task Id="Task_Tutorial6" Title="Find a glove box and put the gloves on" Weight="0" Instructions="Well done! Now find a glove box and click on it.\n    [b]→ Click here for more info ←[/b]." Description="How to wear gloves:\n     1. You are in the center view of the lab.\n     2. Click on a workbench to go there.\n     3. Locate a glove box,\n         if there are no glove boxes click &quot;[b]BACK[/b]&quot; in the top right corner to\n         move to another workbench.\n     4. Click the glove box when you find it to put the gloves on.\n\nClick on the lab in the background to swipe down the LabPad." IsLogHidden="false">
              <StartActions>
                <Setter Target="GlovesBoxW2" Property="EmphasisDuration" Value="-1" />
                <Setter Target="GlovesBoxW1" Property="EmphasisDuration" Value="-1" />
              </StartActions>
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="LeftHand" Property="ActiveStates" Comparison="Contains" Value="Glove" />
                  <DataCondition Target="RightHand" Property="ActiveStates" Comparison="Contains" Value="Glove" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="GlovesBoxW2" Property="EmphasisDuration" Value="0" />
                <Setter Target="GlovesBoxW1" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
              <SkippedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_LabPadTutorialIsSkipped" />
              </SkippedWhen>
            </Task>
            <Task Id="Task_Tutorial7" Title="Mission tab explained" Weight="0" Instructions="We can speed up the lab time." IsLogHidden="false">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_Tutorial4" />
              </StartActions>
              <CompletedWhen Match="Any">
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Tutorial4" />
              </CompletedWhen>
              <SkippedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_LabPadTutorialIsSkipped" />
              </SkippedWhen>
            </Task>
            <Task Id="Task_Tutorial8" Weight="0" Instructions="Click on the &quot;[b]BACK[/b]&quot; button to step back into the center of the lab." Description="If you are looking at a workbench or a machine you can always go back by clicking on the &quot;[b]BACK[/b]&quot; button in the top right corner." IsLogHidden="true">
              <CompletedWhen Match="Any">
                <DataCondition Target="LabRoom" Property="IsFocused" Value="true" />
              </CompletedWhen>
              <SkippedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_LabPadTutorialIsSkipped" />
              </SkippedWhen>
            </Task>
            <Task Id="Task_Tutorial9" Weight="0" Instructions="Click on the LabPad to answer the quiz question." IsMuted="true" IsLogHidden="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_Tutorial2" />
              </StartActions>
              <CompletedWhen Match="Any">
                <DataCondition Target="QuizBlock_Tutorial2" Property="IsCompleted" Value="true" />
              </CompletedWhen>
              <SkippedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_LabPadTutorialIsSkipped" />
              </SkippedWhen>
              <CompletedActions>
              </CompletedActions>
            </Task>
            <Task Id="Task_Tutorial10" Weight="0" Instructions="Tutorial completed." IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_TutorialEnd" />
              </StartActions>
              <CompletedWhen Match="Any">
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_TutorialEnd" />
              </CompletedWhen>
              <SkippedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_LabPadTutorialIsSkipped" />
              </SkippedWhen>
            </Task>
            <!--endregion [start the LabPad tutorial]-->
          </Tasks>
        </Mission>
        <!--MISSION 2-->
        <Mission Id="Mission_Weacoa" Title="Differentiate between antigens and antibodies" MustStartInOrder="true" IsAutoSave="true">
          <Tasks>
            <Task Id="Task_Conversation_EnterLab" IsLogHidden="true">
              <StartActions>
                <Setter Target="Placeholder_EldonStick1W3" Property="IsVisible" Value="true" />
                <Setter Target="Placeholder_EldonStick1" Property="IsVisible" Value="true" />
                <Setter Target="Placeholder_EldonStick2" Property="IsVisible" Value="true" />
                <Setter Target="Placeholder_EldonStick3" Property="IsVisible" Value="true" />
                <Setter Target="Placeholder_EldonStick4" Property="IsVisible" Value="true" />
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_EnterLab" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_EnterLab" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Userrac11" Instructions="Click on the labcoat rack to wear a labcoat." IsLogHidden="true">
              <StartActions>
                <Setter Target="LabCoat" Property="EmphasisDuration" Value="-1" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="LabCoat" Property="ActiveStates" Comparison="Contains" Value="Weared" />
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="LabCoat" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Conversation_Intro" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_Intro" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Intro" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_WaitAssistant" Instructions="[m]Wait for Marie.[/m]" IsLogHidden="true">
              <StartActions>
                <Setter Target="LabCoat" Property="IsClickable" Value="false" />
                <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsClickable" Value="false" />
                <GotoState Target="AssistantLab" StateId="State_MovingToPlayer" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="AssistantLab" Property="ActiveStates" Comparison="Contains" Value="State_DestinationReached" />
              </CompletedWhen>
              <CompletedActions>
                <Wait Duration="0.1" />
                <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsClickable" Value="true" />
              </CompletedActions>
            </Task>
            <Task Id="Task_ConvAGin13" Instructions="[m]Talk to Marie.[/m]" IsLogHidden="true">
              <StartActions>
                <GotoState Target="AssistantLab" StateId="Talking" />
                <StartConversation Target="Conversation_PopUpTransparant" ConversationId="Conversation_ABAGint" Wait="true" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ABAGint" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="AssistantLab" StateId="IdleHead" />
              </CompletedActions>
            </Task>
            <Task Id="Task_QuizBlock_ABAG" Instructions="[m]Talk to Marie.[/m]" IsLogHidden="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_ABAG" />
                <GotoState Target="AssistantLab" StateId="Talking" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_ABAG" Property="IsCompleted" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="AssistantLab" StateId="IdleHead" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Conversation_MolView" Instructions="[m]Talk to Marie.[/m]" IsLogHidden="true">
              <StartActions>
                <GotoState Target="AssistantLab" StateId="Talking" />
                <StartConversation Target="Conversation_PopUpTransparant" ConversationId="Conversation_MolView" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_MolView" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="AssistantLab" StateId="IdleHead" />
              </CompletedActions>
            </Task>
            <Task Id="Task_WB1" Instructions="Go to Workbench 1." IsLogHidden="true">
              <StartActions>
                <Setter Target="WorkbenchHoloTable" Property="EmphasisDuration" Value="-1" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="WorkbenchHoloTable" Property="IsFocused" Comparison="Equals" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="WorkbenchHoloTable" StateId="State_HolotableOn" />
                <Setter Target="WorkbenchHoloTable" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Holotable1" Instructions="Click on the ANTIBODY button to observe the structure of an antibody." Description="Click on the ANTIBODY button." IsLogHidden="true">
              <CompletedWhen>
                <DataCondition Target="WorkbenchHoloTable" Property="ActiveStates" Comparison="Contains" Value="AntibodyState" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Conversation_Holotable1" Instructions="[m]Observe the structure of the antibody.[/m]" IsLogHidden="true">
              <StartActions>
                <StartConversation ConversationId="Conversation_Holotable1" Target="SubtitleConversation" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Holotable1b" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Conversation_Holotable2" Instructions="[m]Observe the structure of the antibody.[/m]" IsLogHidden="true">
              <StartActions>
                <StartConversation ConversationId="Conversation_Holotable2" Target="SubtitleConversation" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Holotable2" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Holotable4" Instructions="Click here when you're done exploring the structure." IsLogHidden="true">
              <CompletedWhen>
                <DataCondition Target="{Binding CurrentElement, ElementId=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_SessionDefault" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Move01" Instructions="Please, move to the center of the lab." Description="Leave the pipette on its holder and then go to the center of the lab." IsLogHidden="true">
              <CompletedWhen>
                <DataCondition Target="LabRoom" Property="IsFocused" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <Wait Duration="0.1" />
              </CompletedActions>
            </Task>
            <Task Id="Task_QuizBlock_Holo" Instructions="[m]Answer the quiz question.[/m]" IsLogHidden="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_Holo" />
                <GotoState Target="AssistantLab" StateId="Talking" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_Holo" Property="IsCompleted" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="AssistantLab" StateId="IdleHead" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Conversation_ABAGint1" Title="Talk to Marie" Instructions="[m]Talk to Marie.[/m]" IsLogHidden="true">
              <StartActions>
                <GotoState Target="AssistantLab" StateId="Talking" />
                <StartConversation Target="Conversation_PopUpTransparant" ConversationId="Conversation_ABAGint1" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ABAGint2" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="AssistantLab" StateId="IdleHead" />
              </CompletedActions>
            </Task>
            <Task Id="Task_QuizBlock_ABclass" Title="Answer the quiz questions" Instructions="[m]Answer the quiz questions.[/m]" IsLogHidden="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_ABclass" />
                <GotoState Target="AssistantLab" StateId="Talking" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_ABclass" Property="IsCompleted" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="AssistantLab" StateId="IdleHead" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Conversation_ABAGstart" Title="Talk to Marie" Instructions="[m]Talk to Marie.[/m]" IsLogHidden="true">
              <StartActions>
                <GotoState Target="AssistantLab" StateId="Talking" />
                <StartConversation Target="Conversation_PopUpTransparant" ConversationId="Conversation_ABAGstart" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ABAGstart" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="AssistantLab" StateId="IdleHead" />
              </CompletedActions>
            </Task>
            <Task Id="Task_WaitAssistantMoveToCorner" IsLogHidden="true">
              <StartActions>
                <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsClickable" Value="false" />
                <GotoState Target="AssistantLab" StateId="State_MovingToCorner" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="AssistantLab" Property="ActiveStates" Comparison="Contains" Value="State_DestinationReached" />
              </CompletedWhen>
              <CompletedActions>
                <Wait Duration="0.1" />
                <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsClickable" Value="true" />
              </CompletedActions>
            </Task>
          </Tasks>
        </Mission>
        <!--MISSION 3-->
        <Mission Id="Mission_ABAtiv" Title="Identify the structure of an antigen and an antibody" MustStartInOrder="true" IsAutoSave="true">
          <Tasks>
            <Task Id="Task_WB1able18" Instructions="Go to Workbench 2." IsLogHidden="true">
              <StartActions>
                <Setter Target="Workbench2" Property="EmphasisDuration" Value="-1" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="Workbench2" Property="IsFocused" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="Workbench2" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
            </Task>
            <Task Id="Task_UserheP19" Instructions="Click on the laptop." Description="Click on the keyboard of the laptop." IsLogHidden="true">
              <StartActions>
                <Setter Target="PCW1" Property="EmphasisDuration" Value="-1" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="PCW1" Property="IsFocused" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="PCW1" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Userubmi20" Instructions="Label the different parts of the antibody and the antigen." Description="1) Click on the letters.\n\n2) Select the correct word from the drop-down menu.\n\n3) Click 'Submit' when you're done." IsLogHidden="true" Weight="5">
              <StartActions>
                <GotoState Target="PCW1" StateId="State_ABAG_Interactive" />
                <GotoState Target="PCW1" StateId="State_MinigameActive" />
              </StartActions>
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="State_ScreenLabelingIsFinish" />
                  <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ABAGcorrect" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="PCW1" StateId="State_MinigameInactive" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Conversation_AAnity" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_AAnity" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_AAnity1" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_QuizBlock_Epitope" Instructions="Answer the quiz question." IsMuted="true" IsLogHidden="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_Epitope" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_Epitope" Property="IsCompleted" Value="true" />
              </CompletedWhen>
            </Task>
          </Tasks>
        </Mission>
        <!--MISSION 4-->
        <Mission Id="Mission_Anitio" Title="Learn how an antigen-antibody complex is formed" MustStartInOrder="true" IsAutoSave="true">
          <Tasks>
            <Task Id="Task_Conversation_Animation" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_Animation" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Animation" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_WatchAbAgAnimation_notfinish" Instructions="Watch animation of antigen-antibody." IsLogHidden="true" IsMuted="true">
              <StartActions>
                <ShowMedia Source="035_ABL_AntibodyAntigeneComplex" AllowSkip="false" AllowContinue="false" Title="Ab Ag Animation" IsReplayable="false" />
                <EndConversation Target="EventConversation" />
                <GotoState Target="LabRoom" StateId="State_Anim_035IsPlaying" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="LabRoom" Property="ActiveStates" Comparison="Contains" Value="State_Anim_035HasPlayed" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_QuizAnim01" IsLogHidden="true">
              <StartActions>
                <EndConversation Target="EventConversation" />
                <EndConversation Target="SubtitleConversation" />
                <Wait Duration="0.1" />
                <StartQuizBlock Target="QuizBlock_Animation" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_Animation" Property="IsCompleted" Value="true" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Conversation_AniEnd" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_AniEnd" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ABOStart" />
              </CompletedWhen>
            </Task>
          </Tasks>
        </Mission>
        <!--MISSION 5-->
        <Mission Id="Mission_Baspin1" Title="Understand the basic principles of blood typing" MustStartInOrder="true" IsAutoSave="true">
          <Tasks>
            <Task Id="Task_Move02" IsLogHidden="true" Instructions="Please, move to the center of the lab." Description="Leave the pipette on its holder and then go to the center of the lab.">
              <StartActions>
                <MoveTo Element="LabRoom" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="LabRoom" Property="IsFocused" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <Wait Duration="0.1" />
              </CompletedActions>
            </Task>
            <Task Id="Task_WaitAssistant2" Instructions="[m]Wait for Marie.[/m]" IsLogHidden="true">
              <StartActions>
                <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsClickable" Value="false" />
                <GotoState Target="AssistantLab" StateId="State_MovingToPlayer" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="AssistantLab" Property="ActiveStates" Comparison="Contains" Value="State_DestinationReached" />
              </CompletedWhen>
              <CompletedActions>
                <Wait Duration="0.1" />
                <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsClickable" Value="true" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Conversation_ABO_1" Instructions="[m]Talk to Marie.[/m]" IsLogHidden="true">
              <StartActions>
                <GotoState Target="AssistantLab" StateId="Talking" />
                <StartConversation Target="Conversation_PopUpTransparant" ConversationId="Conversation_ABO" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ABO1" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="AssistantLab" StateId="IdleHead" />
              </CompletedActions>
            </Task>
            <Task Id="Task_WaitAssistantMoveToCorner2" IsLogHidden="true">
              <StartActions>
                <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsClickable" Value="false" />
                <GotoState Target="AssistantLab" StateId="State_MovingToCorner" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="AssistantLab" Property="ActiveStates" Comparison="Contains" Value="State_DestinationReached" />
              </CompletedWhen>
              <CompletedActions>
                <Wait Duration="0.1" />
                <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsClickable" Value="true" />
              </CompletedActions>
            </Task>
            <Task Id="Task_WB2sabl33" Instructions="Go to Workbench 2." IsLogHidden="true">
              <StartActions>
                <Setter Target="Workbench2" Property="EmphasisDuration" Value="-1" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="Workbench2" Property="IsFocused" Comparison="Equals" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="Workbench2" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Conversation_Eldon" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_Eldon" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Eldon" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_userlove34" Instructions="Protect your hands and the experiment by wearing gloves." Description="Click on the glove box to put on gloves." IsLogHidden="true">
              <StartActions>
                <Setter Target="GlovesBoxW2" Property="EmphasisDuration" Value="-1" />
                <Setter Target="GlovesBoxW1" Property="EmphasisDuration" Value="-1" />
              </StartActions>
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="LeftHand" Property="ActiveStates" Comparison="Contains" Value="Glove" />
                  <DataCondition Target="RightHand" Property="ActiveStates" Comparison="Contains" Value="Glove" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="GlovesBoxW2" Property="EmphasisDuration" Value="0" />
                <Setter Target="GlovesBoxW1" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
            </Task>
            <Task Id="Task_usercles35" Title="Prepare the Eldon card" Instructions="Pipette a drop of water onto the circles of Eldon card 1. [m]Click here for more information.[/m]" Description="Water is used to activate the antibody sera on the Eldon card.\n\n1) Take up a small amount of water. Remember to pick up a pipette tip before pipetting.\n\n2) Click on Eldon card 1.\n\n3) Place a drop of water onto all four test circles. One pipette tip holds enough water all circles." IsLogHidden="true">
              <StartActions>
                <Setter Target="PipetteHolderPlaceholderW1" Property="IsPickUpAllowed" Value="true" />
                <Setter Target="BloodTestCard1W2" Property="EmphasisDuration" Value="-1" />
                <Setter Target="BloodTestCard1W2" Property="IsClickable" Value="true" />
                <Setter Target="BloodTestCard1W2" Property="IsFocusable" Value="true" />
                <Setter Target="{Binding CurrentElement, ElementId=PipetteHolderPlaceholderW1}" Property="EmphasisDuration" Value="-1" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW21}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW21}" Comparison="ContainsOnly" Value="Content_Water" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW22}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW22}" Comparison="ContainsOnly" Value="Content_Water" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW23}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW23}" Comparison="ContainsOnly" Value="Content_Water" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW24}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW24}" Comparison="ContainsOnly" Value="Content_Water" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW25}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW25}" Comparison="ContainsOnly" Value="Content_Water" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW26}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW26}" Comparison="ContainsOnly" Value="Content_Water" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW27}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW27}" Comparison="ContainsOnly" Value="Content_Water" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW28}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW28}" Comparison="ContainsOnly" Value="Content_Water" />
                  </Conditions>
                </Setter>
              </StartActions>
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="A_HasWater" />
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="B_HasWater" />
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="D_HasWater" />
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="C_HasWater" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="BloodTestCard1W2" Property="EmphasisDuration" Value="0" />
                <Setter Target="{Binding CurrentElement, ElementId=RightHand}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="RightHand" Property="HasElement" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW21}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW21}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW22}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW22}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW23}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW23}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW24}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW24}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW25}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW25}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW26}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW26}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW27}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW27}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW28}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW28}" Value="true" />
                  </Conditions>
                </Setter>
              </CompletedActions>
            </Task>
            <Task Id="Task_QuizBlock_Exp1" IsLogHidden="true" Instructions="Answer the quiz question." IsMuted="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_Exp1" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_Exp1" Property="IsCompleted" Value="true" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_QuizBlock_AntiD" IsLogHidden="true" Instructions="Answer the quiz question." IsMuted="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_AntiD" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_AntiD" Property="IsCompleted" Value="true" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Userstic37" Instructions="Pipette Blood Sample 1 onto the circles of Eldon card 1. [m]Click here for more information.[/m]" Description="1) Take up a small amount of blood.\n\n2) Click on the Eldon card 1.\n\n3) Place a drop of blood onto all four test circles. One pipette tip holds enough blood for all four circles." IsLogHidden="true">
              <StartActions>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW28}" Property="AllowContentPickup" Value="true" />

                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW21}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW21}" Comparison="ContainsOnly" Value="Content_Blood" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW22}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW22}" Comparison="ContainsOnly" Value="Content_Blood" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW23}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW23}" Comparison="ContainsOnly" Value="Content_Blood" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW24}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW24}" Comparison="ContainsOnly" Value="Content_Blood" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW25}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW25}" Comparison="ContainsOnly" Value="Content_Blood" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW26}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW26}" Comparison="ContainsOnly" Value="Content_Blood" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW27}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW27}" Comparison="ContainsOnly" Value="Content_Blood" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW28}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW28}" Comparison="ContainsOnly" Value="Content_Blood" />
                  </Conditions>
                </Setter>
              </StartActions>
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="A_HasWaterAndBlood" />
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="B_HasWaterAndBlood" />
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="D_HasWaterAndBlood" />
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="C_HasWaterAndBlood" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW21}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW21}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW22}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW22}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW23}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW23}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW24}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW24}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW25}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW25}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW26}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW26}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW27}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW27}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW28}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW28}" Value="true" />
                  </Conditions>
                </Setter>
              </CompletedActions>
            </Task>
            <Task Id="Task_userard39" Instructions="Use an Eldon stick to mix the blood sample within the test circles of card 1." Description="Take an Eldon stick and zoom into Eldon Card 1. Click one of the test circles to mix the blood. Each Eldon stick can only be used once. Remember to discard it after you're done." IsLogHidden="true">
              <StartActions>
                <GotoState Target="BloodTestCard1W2" StateId="State_ActivateAllCircles" />
                <Setter Target="Placeholder_EldonStick1" Property="IsClickable" Value="true" />
                <Setter Target="Placeholder_EldonStick2" Property="IsClickable" Value="true" />
                <Setter Target="Placeholder_EldonStick3" Property="IsClickable" Value="true" />
                <Setter Target="Placeholder_EldonStick4" Property="IsClickable" Value="true" />
                <Setter Target="{Binding CurrentElement, ElementId=Placeholder_EldonStick1}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding HasElement, ElementId=Placeholder_EldonStick1}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=Placeholder_EldonStick2}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding HasElement, ElementId=Placeholder_EldonStick2}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=Placeholder_EldonStick3}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding HasElement, ElementId=Placeholder_EldonStick3}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=Placeholder_EldonStick4}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding HasElement, ElementId=Placeholder_EldonStick4}" Value="true" />
                  </Conditions>
                </Setter>
              </StartActions>
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="A_HasMixed" />
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="B_HasMixed" />
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="D_HasMixed" />
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="C_HasMixed" />
                </CompositeCondition>
              </CompletedWhen>
            </Task>
            <Task Id="Task_QuizBlock_Control" IsLogHidden="true" Instructions="Answer the quiz question." IsMuted="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_Control" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_Control" Property="IsCompleted" Value="true" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Conversation_Assist" IsLogHidden="true" Instructions="Wait for 10 minutes.">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_Assist" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Assist" />
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="{Binding EngineRoot.Time.TimeLapseMultiplier}" Value="600" />
                <Setter Target="EngineTime" Property="TimeLapseMinutes" Value="10" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Wait10Minutes" Instructions="Wait for 10 minutes." IsLogHidden="true">
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="{Binding EngineRoot.Time.TimeLapseMultiplier}" Comparison="Equals" Value="1" />
                  <DataCondition Target="{Binding EngineRoot.Time.TimeLapseMinutes}" Comparison="Equals" Value="0" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="BloodTestCard2W2" StateId="State_PreFocused" />
                <GotoState Target="BloodTestCard3W2" StateId="State_PreFocused" />
                <GotoState Target="BloodTestCard4W2" StateId="State_PreFocused" />
              </CompletedActions>
            </Task>
            <Task Id="Task_eldosabl43" Instructions="Click on the arrow to observe the result of the neighboring card." Description="Zoom into the Eldon cards to observe the result. Click on the arrow to move from one card to another." IsLogHidden="true">
              <StartActions>
                <GotoState Target="BloodTestCard1W2" StateId="State_HelperIsVisible" />
                <GotoState Target="BloodTestCard2W2" StateId="State_HelperIsVisible" />
                <GotoState Target="BloodTestCard3W2" StateId="State_HelperIsVisible" />
                <GotoState Target="BloodTestCard4W2" StateId="State_HelperIsVisible" />
                <Setter Target="BloodTestCard1W2" Property="IsFocusable" Value="true" />
                <Setter Target="BloodTestCard2W2" Property="IsFocusable" Value="true" />
                <Setter Target="BloodTestCard3W2" Property="IsFocusable" Value="true" />
                <Setter Target="BloodTestCard4W2" Property="IsFocusable" Value="true" />
              </StartActions>
              <CompletedWhen>
                <CompositeCondition Match="All">
                  <DataCondition Target="BloodTestCard1W2" Property="ActiveStates" Comparison="Contains" Value="State_Focused" />
                  <DataCondition Target="BloodTestCard2W2" Property="ActiveStates" Comparison="Contains" Value="State_Focused" />
                  <DataCondition Target="BloodTestCard3W2" Property="ActiveStates" Comparison="Contains" Value="State_Focused" />
                  <DataCondition Target="BloodTestCard4W2" Property="ActiveStates" Comparison="Contains" Value="State_Focused" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_SafeToDiscard" />
                <Wait Duration="1" />
              </CompletedActions>
            </Task>
            <Task Id="Task_userbin47" Instructions="Discard your gloves." Description="Discard your used gloves to prevent cross-contamination of other samples, lab equipment and personal belongings." IsLogHidden="true">
              <StartActions>
                <Setter Target="TrashbinFlattopW2" Property="EmphasisDuration" Value="-1" />
                <Setter Target="TrashbinFlattopW3" Property="EmphasisDuration" Value="-1" />
              </StartActions>
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="LeftHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
                  <DataCondition Target="RightHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="TrashbinFlattopW2" Property="EmphasisDuration" Value="0" />
                <Setter Target="TrashbinFlattopW3" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
            </Task>
          </Tasks>
        </Mission>
        <!--MISSION 6-->
        <Mission Id="Mission_Baspin2" Title="Continue to understand the basic principles of blood typing" MustStartInOrder="true" IsAutoSave="true">
          <Tasks>
            <Task Id="Task_Conversation_ABOexp" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABOexp" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ABOexp" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_QuizBlock_Agg" IsLogHidden="true" Instructions="Answer the quiz question." IsMuted="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_Agg" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_Agg" Property="IsCompleted" Value="true" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Conversation_ABOexp2" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABOexp2" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ABOexp2" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_QuizBlock_ABO" IsLogHidden="true" Instructions="Answer the quiz question." IsMuted="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_ABO" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_ABO" Property="IsCompleted" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="BloodTestCard1W2" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard2W2" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard3W2" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard4W2" StateId="State_HelperIsNotVisible" />
              </CompletedActions>
            </Task>
          </Tasks>
        </Mission>
        <!--MISSION 7-->
        <Mission Id="Mission_ABOtiv" Title="Correctly characterize different blood types" MustStartInOrder="true" IsAutoSave="true">
          <Tasks>
            <Task Id="Task_Conversation_ABOint" Instructions="Select the correct blood type from the drop-down list." Description="Select the correct blood type from the drop-down list." IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABOint" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ABOint" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="BloodTestCard1W2" StateId="State_AfterFocused" />
                <GotoState Target="BloodTestCard2W2" StateId="State_AfterFocused" />
                <GotoState Target="BloodTestCard3W2" StateId="State_AfterFocused" />
                <GotoState Target="BloodTestCard4W2" StateId="State_AfterFocused" />
                <GotoState Target="BloodTestCard1W2" StateId="State_HelperIsVisible" />
                <GotoState Target="BloodTestCard2W2" StateId="State_HelperIsVisible" />
                <GotoState Target="BloodTestCard3W2" StateId="State_HelperIsVisible" />
                <GotoState Target="BloodTestCard4W2" StateId="State_HelperIsVisible" />
                <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_SessionSampleABOPuzzle" />
                <Wait />
              </CompletedActions>
            </Task>
            <Task Id="Task_LabelingCards_ABOcorrect" Instructions="Label the blood types on the cards. Click here when you're done." IsLogHidden="true" Weight="5">
              <CompletedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_SampleABOPuzzle_CorrectAnswer" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Conversation_ABOcorrect" IsLogHidden="true">
              <StartActions>
                <GotoState Target="BloodTestCard1W2" StateId="State_NotFocused" />
                <GotoState Target="BloodTestCard1W2" StateId="State_AfterQuiz" />

                <GotoState Target="BloodTestCard2W2" StateId="State_NotFocused" />
                <GotoState Target="BloodTestCard2W2" StateId="State_AfterQuiz" />

                <GotoState Target="BloodTestCard3W2" StateId="State_NotFocused" />
                <GotoState Target="BloodTestCard3W2" StateId="State_AfterQuiz" />

                <GotoState Target="BloodTestCard4W2" StateId="State_NotFocused" />
                <GotoState Target="BloodTestCard4W2" StateId="State_AfterQuiz" />
                <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_SessionDefault" />
                <Wait />
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABOcorrect" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ABOcorrect" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_QuizBlock_Transfusion" IsLogHidden="true" Instructions="Answer the quiz question." IsMuted="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_Transfusion" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_Transfusion" Property="IsCompleted" Value="true" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Conversation_ABOEnd" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABOEnd" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ABOEnd" />
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="Workbench3" Property="IsFocusable" Value="true" />
                <Setter Target="PipetteHolderPlaceholderW3" Property="IsPickUpAllowed" Value="true" />
                <GotoState Target="BloodTestCard1W2" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard2W2" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard3W2" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard4W2" StateId="State_HelperIsNotVisible" />
              </CompletedActions>
            </Task>
          </Tasks>
        </Mission>
        <!--MISSION 8-->
        <Mission Id="Mission_Rhlit1" Title="Apply the principles of blood typing to Rhesus incompatibilities" MustStartInOrder="true" IsAutoSave="true">
          <Tasks>
            <Task Id="Task_Move03" IsLogHidden="true" Instructions="Please, move to the center of the lab." Description="Leave the pipette on its holder and then go to the center of the lab.">
              <CompletedWhen>
                <DataCondition Target="LabRoom" Property="IsFocused" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <Wait Duration="0.1" />
              </CompletedActions>
            </Task>
            <Task Id="Task_WB3sabl61" Title="Go to Workbench 3" Instructions="Go to Workbench 3." IsLogHidden="true">
              <StartActions>
                <Setter Target="Workbench3" Property="EmphasisDuration" Value="-1" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="Workbench3" Property="IsFocused" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="Workbench3" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Conversation_RhStart" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_RhStart" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_RhStart" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Quizblock_RhBasic" IsLogHidden="true" Instructions="Answer the quiz question." IsMuted="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_RhBasic" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_RhBasic" Property="IsCompleted" Value="true" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Conversation_RhStart1" IsLogHidden="true">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_RhStart1" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_RhExp" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_GloVeMan" Instructions="Protect your hands and the experiment by wearing gloves." IsLogHidden="true">
              <StartActions>
                <Setter Target="GlovesBoxW2" Property="EmphasisDuration" Value="-1" />
                <Setter Target="GlovesBoxW1" Property="EmphasisDuration" Value="-1" />
              </StartActions>
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="LeftHand" Property="ActiveStates" Comparison="Contains" Value="Glove" />
                  <DataCondition Target="RightHand" Property="ActiveStates" Comparison="Contains" Value="Glove" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="GlovesBoxW2" Property="EmphasisDuration" Value="0" />
                <Setter Target="GlovesBoxW1" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Userarme63" Instructions="Pipette a drop of blood onto the test circles of Eldon card 'Carmen'." Description="Take up a small amount of Carmen's blood sample and pipette it on the four circles of the Eldon card named 'Carmen'. One pipette tip holds enough blood for all circles." IsLogHidden="true">
              <StartActions>
                <Setter Target="BloodTestCard_Carmen" Property="IsFocusable" Value="true" />
                <Setter Target="BloodTestCard_FirstChild" Property="IsFocusable" Value="true" />
                <Setter Target="BloodTestCard_Fetus" Property="IsFocusable" Value="true" />

                <GotoState Target="BloodTestCard_Carmen" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard_FirstChild" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard_Fetus" StateId="State_HelperIsNotVisible" />
                <Setter Target="BloodTestCard_Carmen" Property="EmphasisDuration" Value="-1" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW31}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW31}" Comparison="ContainsOnly" Value="Content_Blood_Carmen" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW32}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW32}" Comparison="ContainsOnly" Value="Content_Blood_Carmen" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW33}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW33}" Comparison="ContainsOnly" Value="Content_Blood_Carmen" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW34}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW34}" Comparison="ContainsOnly" Value="Content_Blood_Carmen" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW35}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW35}" Comparison="ContainsOnly" Value="Content_Blood_Carmen" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW36}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW36}" Comparison="ContainsOnly" Value="Content_Blood_Carmen" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW37}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW37}" Comparison="ContainsOnly" Value="Content_Blood_Carmen" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW38}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents.CurrentContentTypes, ElementId=TestTube15mlPlaceholderRackIW38}" Comparison="ContainsOnly" Value="Content_Blood_Carmen" />
                  </Conditions>
                </Setter>
              </StartActions>
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="BloodTestCard_Carmen" Property="ActiveStates" Comparison="Contains" Value="A_HasWaterAndBlood" />
                  <DataCondition Target="BloodTestCard_Carmen" Property="ActiveStates" Comparison="Contains" Value="B_HasWaterAndBlood" />
                  <DataCondition Target="BloodTestCard_Carmen" Property="ActiveStates" Comparison="Contains" Value="D_HasWaterAndBlood" />
                  <DataCondition Target="BloodTestCard_Carmen" Property="ActiveStates" Comparison="Contains" Value="C_HasWaterAndBlood" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="BloodTestCard_Carmen" Property="EmphasisDuration" Value="0" />
                <GotoState Target="BloodTestCard_Carmen" StateId="State_ActivateAntiAOnly" />
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW31}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW31}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW32}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW32}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW33}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW33}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW34}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW34}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW35}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW35}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW36}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW36}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW37}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW37}" Value="true" />
                  </Conditions>
                </Setter>
                <Setter Target="{Binding CurrentElement, ElementId=TestTube15mlPlaceholderRackIW38}" Property="EmphasisDuration" Value="0">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.HasElement, ElementId=TestTube15mlPlaceholderRackIW38}" Value="true" />
                  </Conditions>
                </Setter>
              </CompletedActions>
            </Task>
            <Task Id="Task_userarme64" Instructions="Use an Eldon stick to mix the blood sample within test circle Anti-A." Description="Take an Eldon stick and zoom into the first Eldon card. Click test circle Anti-A to mix the blood. Each Eldon stick can only be used once. Remember to discard it after you're done." IsLogHidden="true">
              <StartActions>
                <Setter Target="Placeholder_EldonStick1W3" Property="IsClickable" Value="true" />
                <Setter Target="{Binding CurrentElement, ElementId=Placeholder_EldonStick1W3}" Property="EmphasisDuration" Value="-1">
                  <Conditions>
                    <DataCondition Target="{Binding HasElement, ElementId=Placeholder_EldonStick1W3}" Value="true" />
                  </Conditions>
                </Setter>
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="BloodTestCard_Carmen" Property="ActiveStates" Comparison="Contains" Value="A_HasMixed" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="BloodTestCard_Carmen" StateId="State_ActivateAllCircles" />
                <GotoState Target="BloodTestCard_Carmen" StateId="A_HasMixed" />
                <GotoState Target="BloodTestCard_Carmen" StateId="B_HasMixed" />
                <GotoState Target="BloodTestCard_Carmen" StateId="D_HasMixed" />
                <GotoState Target="BloodTestCard_Carmen" StateId="C_HasMixed" />

                <Setter Target="TrashbinFlattopW2" Property="EmphasisDuration" Value="0" />
                <Setter Target="TrashbinFlattopW3" Property="EmphasisDuration" Value="0" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Conversation_RhAssist" IsLogHidden="true" Instructions="Wait for 10 minutes.">
              <StartActions>
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_RhAssist" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_RhAssist" />
              </CompletedWhen>
              <CompletedActions>
                <Setter Target="{Binding EngineRoot.Time.TimeLapseMultiplier}" Value="600" />
                <Setter Target="EngineTime" Property="TimeLapseMinutes" Value="10" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Wait10Minutes2" Instructions="Wait for 10 minutes." IsLogHidden="true">
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="{Binding EngineRoot.Time.TimeLapseMultiplier}" Comparison="Equals" Value="1" />
                  <DataCondition Target="{Binding EngineRoot.Time.TimeLapseMinutes}" Comparison="Equals" Value="0" />
                </CompositeCondition>
              </CompletedWhen>
            </Task>
            <Task Id="Task_eldosabl71" Instructions="Click on Eldon cards: Carmen, First child, and Fetus to observe them." Description="Zoom into the Eldon cards to observe the result. Click on the arrow to move from one card to another." IsLogHidden="true">
              <StartActions>
                <Setter Target="BloodTestCard_Carmen" Property="IsFocusable" Value="true" />
                <Setter Target="BloodTestCard_FirstChild" Property="IsFocusable" Value="true" />
                <Setter Target="BloodTestCard_Fetus" Property="IsFocusable" Value="true" />
                <GotoState Target="BloodTestCard_Carmen" StateId="State_Focused" />
                <GotoState Target="BloodTestCard_FirstChild" StateId="State_PreFocused" />
                <GotoState Target="BloodTestCard_Fetus" StateId="State_PreFocused" />
                <GotoState Target="BloodTestCard_Carmen" StateId="State_HelperIsVisible" />
                <GotoState Target="BloodTestCard_FirstChild" StateId="State_HelperIsVisible" />
                <GotoState Target="BloodTestCard_Fetus" StateId="State_HelperIsVisible" />
              </StartActions>
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="BloodTestCard_Carmen" Property="ActiveStates" Comparison="Contains" Value="State_Focused" />
                  <DataCondition Target="BloodTestCard_FirstChild" Property="ActiveStates" Comparison="Contains" Value="State_Focused" />
                  <DataCondition Target="BloodTestCard_Fetus" Property="ActiveStates" Comparison="Contains" Value="State_Focused" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="BloodTestCard_Carmen" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard_FirstChild" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard_Fetus" StateId="State_HelperIsNotVisible" />
                <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_SafeToDiscard" />
              </CompletedActions>
            </Task>
            <Task Id="Task_userbin74" Instructions="Discard your gloves." Description="Discard your used gloves to prevent cross-contamination of other samples, lab equipment and personal belongings." IsLogHidden="true">
              <CompletedWhen>
                <CompositeCondition>
                  <DataCondition Target="LeftHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
                  <DataCondition Target="RightHand" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
                </CompositeCondition>
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_SessionCarmenABOPuzzle" />
                <Wait Duration="0.5" />
              </CompletedActions>
            </Task>
          </Tasks>
        </Mission>
        <!--MISSION 9-->
        <Mission Id="Mission_Rhlit2" Title="Continue to apply the principles of blood typing to Rhesus incompatibilities" MustStartInOrder="true" IsAutoSave="true">
          <Tasks>
            <Task Id="Task_LabelingCards_ABOcorrect_Carmen" Instructions="Label the blood types on the cards. Click here when you're done." IsLogHidden="true" Weight="4">
              <StartActions>
                <GotoState Target="BloodTestCard_Carmen" StateId="State_AfterFocused" />
                <GotoState Target="BloodTestCard_FirstChild" StateId="State_AfterFocused" />
                <GotoState Target="BloodTestCard_Fetus" StateId="State_AfterFocused" />
                <GotoState Target="BloodTestCard_Carmen" StateId="State_HelperIsVisible" />
                <GotoState Target="BloodTestCard_FirstChild" StateId="State_HelperIsVisible" />
                <GotoState Target="BloodTestCard_Fetus" StateId="State_HelperIsVisible" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_CarmenABOPuzzle_CorrectAnswer" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_Conversation_RhEnd" IsLogHidden="true">
              <StartActions>
                <GotoState Target="BloodTestCard_Carmen" StateId="State_NotFocused" />
                <GotoState Target="BloodTestCard_Carmen" StateId="State_AfterQuiz" />
                <GotoState Target="BloodTestCard_FirstChild" StateId="State_NotFocused" />
                <GotoState Target="BloodTestCard_FirstChild" StateId="State_AfterQuiz" />
                <GotoState Target="BloodTestCard_Fetus" StateId="State_NotFocused" />
                <GotoState Target="BloodTestCard_Fetus" StateId="State_AfterQuiz" />
                <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_SessionDefault" />
                <Wait />
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_RhEnd" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_RhEnd" />
              </CompletedWhen>
            </Task>
            <Task Id="Task_QuizBlock_Rhincomp" IsLogHidden="true" Instructions="Answer the quiz question." IsMuted="true">
              <StartActions>
                <StartQuizBlock Target="QuizBlock_Rhincomp" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="QuizBlock_Rhincomp" Property="IsCompleted" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="BloodTestCard_Carmen" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard_FirstChild" StateId="State_HelperIsNotVisible" />
                <GotoState Target="BloodTestCard_Fetus" StateId="State_HelperIsNotVisible" />
                <Wait Duration="1" />
              </CompletedActions>
            </Task>
          </Tasks>
        </Mission>
        <!--MISSION 10-->
        <Mission Id="Mission_Oututr" Title="Discuss your findings with Joel and Carmen" MustStartInOrder="true" IsAutoSave="true">
          <Tasks>
            <Task Id="Task_Move04" IsLogHidden="true" Instructions="Please, move to the center of the lab." Description="Leave the pipette on its holder and then go to the center of the lab.">
              <StartActions>
                <MoveTo Element="LabRoom" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="LabRoom" Property="IsFocused" Value="true" />
              </CompletedWhen>
              <CompletedActions>
                <Wait Duration="0.1" />
              </CompletedActions>
            </Task>
            <Task Id="Task_WaitAssistant3" Instructions="[m]Wait for Marie.[/m]" IsLogHidden="true">
              <StartActions>
                <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsClickable" Value="false" />
                <GotoState Target="AssistantLab" StateId="State_MovingToPlayer" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="AssistantLab" Property="ActiveStates" Comparison="Contains" Value="State_DestinationReached" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="AssistantLab" StateId="State_StandBy">
                  <Conditions>
                    <DataCondition Target="AssistantLab" Property="ActiveStates" Comparison="Contains" Value="State_DestinationReached" />
                  </Conditions>
                </GotoState>
                <Wait Duration="0.1" />
                <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsClickable" Value="true" />
              </CompletedActions>
            </Task>
            <Task Id="Task_Conversation_Review" Instructions="[m]Talk to Marie.[/m]" IsLogHidden="true">
              <StartActions>
                <GotoState Target="AssistantLab" StateId="Talking" />
                <StartConversation Target="Conversation_PopUpTransparant" ConversationId="Conversation_Review" />
              </StartActions>
              <CompletedWhen>
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_ReviewEnd" />
              </CompletedWhen>
              <CompletedActions>
                <GotoState Target="AssistantLab" StateId="IdleHead" />
                <Setter Target="{Binding CurrentElement, RelativeSource=LeftHand}" Property="IsClickable" Value="true" />
              </CompletedActions>
            </Task>
            <Task Id="Task_WatchOutroAnimation" Instructions="You have completed the Antibodies lab." IsLogHidden="true">
              <StartActions>
                <ShowMedia Source="004_CYT_intro_and_consult" AllowSkip="false" AllowContinue="false" Title="Antibodies Lab Outro Animation" IsReplayable="false" />
                <EndConversation Target="EventConversation" />
                <EndConversation Target="SubtitleConversation" />
                <EndConversation Target="Popup_Title" />

                <Wait Notification="MediaAnimationStarted" />
                <ControlMedia Action="Resume" HasFrames="false" EventName="StartConsultation2" />
                <Wait Duration="4" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraDoctor" />
                <ControlMedia Action="Pause" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Outro" />
                <Wait Notification="PopupClosed" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Outro1" />
                <Wait Notification="PopupClosed" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraMother" />
                <ControlMedia Action="Pause" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Outro2" />
                <Wait Notification="PopupClosed" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraDoctor" />
                <ControlMedia Action="Pause" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Outro3" />
                <Wait Notification="PopupClosed" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Outro4" />
                <Wait Notification="PopupClosed" />

                <ControlMedia Action="Resume" HasFrames="false" EventName="CameraFather" />
                <ControlMedia Action="Pause" />
                <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Outro5" />
                <Wait Notification="PopupClosed" />

                <EndConversation Target="EventConversation" />
                <EndConversation Target="SubtitleConversation" />
                <EndConversation Target="Popup_Title" />
                <ControlMedia Action="Resume" HasFrames="false" EventName="EndConsultation" />

                <Wait Duration="0.1" />
                <ControlMedia Action="Stop" />
              </StartActions>
              <CompletedWhen Match="All">
                <DataCondition Target="{Binding EngineRoot.ConversationManager}" Property="ShownConversations" Comparison="Contains" Value="Conversation_Outro5" />
              </CompletedWhen>
              <CompletedActions>
                <EndGame />
                <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_End" />
              </CompletedActions>
            </Task>
          </Tasks>
        </Mission>
      </Missions>
    </Quest>
  </Quests>
  <Scenes>
    <Scene Id="LabRoom" Title="The Modular Lab" AssetPath="Scenes/LabRoom">
      <Elements>
        <Surface Id="Surface_Labroom" GameObjectId="Surface1">
          <Elements>
            <Element Id="WorkbenchHoloTable" GameObjectId="WorkbenchHoloTable" SourceId="HoloTable" Position="1.26, 1.93" Rotation="90" Tooltip="Workbench 1" ExtendedTooltip="Molecular viewer." IsFocusable="true">
              <Triggers>
                <EventTrigger Event="Focused">
                  <Actions>
                    <Setter Target="{Binding IsVisible, RelativeSource=RightHand}" Value="false" />
                  </Actions>
                </EventTrigger>
                <EventTrigger Event="Defocused">
                  <Actions>
                    <Setter Target="{Binding IsVisible, RelativeSource=RightHand}" Value="true" />
                  </Actions>
                </EventTrigger>
              </Triggers>
              <Elements>
                <Placeholder Id="MoleculePlaceHolder" GameObjectId="Placeholder1" AcceptsItems="MOL_Antibody" ItemId="MOL_Antibody" IsClickable="false" />
              </Elements>
              <StateGroups>
                <StateGroup Id="StateGroup_MoleculeVisibility">
                  <States>
                    <State Id="NoMoleculeState" IsDefault="true">
                      <Triggers>
                        <Trigger>
                          <Actions>
                            <Setter Target="{Binding ElementId=MoleculePlaceHolder}" Property="IsVisible" Value="false" />
                          </Actions>
                        </Trigger>
                      </Triggers>
                    </State>
                    <State Id="AntibodyState">
                      <Triggers>
                        <Trigger>
                          <Actions>
                            <Setter Target="{Binding ElementId=MoleculePlaceHolder}" Property="IsVisible" Value="true" />
                          </Actions>
                        </Trigger>
                      </Triggers>
                    </State>
                  </States>
                </StateGroup>
                <StateGroup Id="StateGroup_MoleculeRotation">
                  <States>
                    <State Id="State_HoloStartRotationCW" IsDefault="true">
                      <Triggers>
                        <Trigger>
                          <Conditions>
                            <CompositeCondition>
                              <DataCondition Target="{Binding ElementId=MoleculePlaceHolder}" Property="IsVisible" Value="true" />
                              <DataCondition Target="{Binding ElementId=MoleculePlaceHolder}" Property="HasElement" Comparison="Equals" Value="true" />
                              <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_HoloStartRotationCW" />
                            </CompositeCondition>
                          </Conditions>
                          <Actions>
                            <GotoState Target="{Binding CurrentElement, ElementId=MoleculePlaceHolder}" StateId="State_HoloStartRotationCW" />
                          </Actions>
                        </Trigger>
                      </Triggers>
                    </State>
                    <State Id="State_HoloStartRotationCCW">
                      <Triggers>
                        <Trigger>
                          <Conditions>
                            <CompositeCondition>
                              <DataCondition Target="{Binding ElementId=MoleculePlaceHolder}" Property="IsVisible" Value="true" />
                              <DataCondition Target="{Binding ElementId=MoleculePlaceHolder}" Property="HasElement" Comparison="Equals" Value="true" />
                              <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_HoloStartRotationCCW" />
                            </CompositeCondition>
                          </Conditions>
                          <Actions>
                            <GotoState Target="{Binding CurrentElement, ElementId=MoleculePlaceHolder}" StateId="State_HoloStartRotationCCW" />
                          </Actions>
                        </Trigger>
                      </Triggers>
                    </State>
                  </States>
                </StateGroup>
                <StateGroup Id="StateGroup_HolotableControlPanel">
                  <States>
                    <State Id="State_HolotableOff" />
                    <State Id="State_HolotableOn" IsDefault="true" />
                  </States>
                </StateGroup>
              </StateGroups>
              <Screens>
                <Screen Id="Screen_HolotableSimulation" GameObjectId="Screen" GUIScreenId="GUIScreen_Holotable" />
              </Screens>
            </Element>
            <Element Id="Workbench2" GameObjectId="Workbench2" SourceId="Table2" Position="3.02,3.80" Rotation="0" Tooltip="Workbench 2" ExtendedTooltip="Blood Typing." IsFocusable="true">
              <Triggers>
                <EventTrigger Event="Focused">
                  <Actions>
                    <Setter Property="EmphasisDuration" Value="0" />
                  </Actions>
                </EventTrigger>
              </Triggers>
              <Elements>
                <Surface Id="Surface_Workbench2" GameObjectId="Main">
                  <Elements>
                    <!--WallDisplay as PC-->
                    <Element Id="PCW1" ItemId="PCW1" GameObjectId="PCW1" SourceId="Laptop" Position="0.28,0.73" Rotation="270" IsFocusable="true" Tooltip="Display">
                      <StateGroups>
                        <StateGroup Id="StateGroup_PCScreens">
                          <States>
                            <State Id="State_Off" IsDefault="true" />
                            <State Id="State_ABAG_Interactive" />
                          </States>
                        </StateGroup>
                        <!--AbAg Labelling-->
                        <StateGroup Id="StateGroup_ScreenLabeling">
                          <States>
                            <State Id="State_ScreenLabelingDefault" IsDefault="true" />
                            <State Id="State_ScreenLabelingReset">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState StateId="ABAG_A_VariableRegion" />
                                    <GotoState StateId="ABAG_B_VariableRegion" />
                                    <GotoState StateId="ABAG_C_VariableRegion" />
                                    <GotoState StateId="ABAG_D_VariableRegion" />
                                    <GotoState StateId="ABAG_E_VariableRegion" />
                                    <GotoState StateId="ABAG_F_VariableRegion" />

                                    <GotoState StateId="State_SubmitADefault" />
                                    <GotoState StateId="State_SubmitBDefault" />
                                    <GotoState StateId="State_SubmitCDefault" />
                                    <GotoState StateId="State_SubmitDDefault" />
                                    <GotoState StateId="State_SubmitEDefault" />
                                    <GotoState StateId="State_SubmitFDefault" />

                                    <Wait />
                                    <GotoState StateId="State_ScreenLabelingDefault" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_ScreenLabelingProcess">
                              <Triggers>

                                <!--A-->
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_A_VariableRegion" />
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitACorrect" />
                                  </Actions>
                                </Trigger>
                                <Trigger>
                                  <Conditions>
                                    <CompositeCondition Match="Any">
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_A_LightChain" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_A_ConstantRegion" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_A_HeavyChain" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_A_AntigenBindingSite" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_A_DisulfideBridge" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_A_Epitope" />
                                    </CompositeCondition>
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitAWrong" />
                                  </Actions>
                                </Trigger>

                                <!--B-->
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_B_ConstantRegion" />
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitBCorrect" />
                                  </Actions>
                                </Trigger>
                                <Trigger>
                                  <Conditions>
                                    <CompositeCondition Match="Any">
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_B_VariableRegion" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_B_DisulfideBridge" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_B_HeavyChain" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_B_AntigenBindingSite" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_B_LightChain" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_B_Epitope" />
                                    </CompositeCondition>
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitBWrong" />
                                  </Actions>
                                </Trigger>

                                <!--C-->
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_C_DisulfideBridge" />
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitCCorrect" />
                                  </Actions>
                                </Trigger>
                                <Trigger>
                                  <Conditions>
                                    <CompositeCondition Match="Any">
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_C_VariableRegion" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_C_ConstantRegion" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_C_LightChain" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_C_AntigenBindingSite" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_C_HeavyChain" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_C_Epitope" />
                                    </CompositeCondition>
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitCWrong" />
                                  </Actions>
                                </Trigger>

                                <!--D-->
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_D_LightChain" />
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitDCorrect" />
                                  </Actions>
                                </Trigger>
                                <Trigger>
                                  <Conditions>
                                    <CompositeCondition Match="Any">
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_D_VariableRegion" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_D_ConstantRegion" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_D_HeavyChain" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_D_AntigenBindingSite" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_D_DisulfideBridge" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_D_Epitope" />
                                    </CompositeCondition>
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitDWrong" />
                                  </Actions>
                                </Trigger>

                                <!--E-->
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_E_HeavyChain" />
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitECorrect" />
                                  </Actions>
                                </Trigger>
                                <Trigger>
                                  <Conditions>
                                    <CompositeCondition Match="Any">
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_E_VariableRegion" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_E_LightChain" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_E_ConstantRegion" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_E_AntigenBindingSite" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_E_DisulfideBridge" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_E_Epitope" />
                                    </CompositeCondition>
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitEWrong" />
                                  </Actions>
                                </Trigger>

                                <!--F-->
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_F_Epitope" />
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitFCorrect" />
                                  </Actions>
                                </Trigger>
                                <Trigger>
                                  <Conditions>
                                    <CompositeCondition Match="Any">
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_F_VariableRegion" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_F_ConstantRegion" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_F_HeavyChain" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_F_AntigenBindingSite" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_F_DisulfideBridge" />
                                      <DataCondition Target="PCW1" Property="ActiveStates" Comparison="Contains" Value="ABAG_F_LightChain" />
                                    </CompositeCondition>
                                  </Conditions>
                                  <Actions>
                                    <GotoState StateId="State_SubmitFWrong" />
                                  </Actions>
                                </Trigger>

                                <!--Scoring Process-->
                                <Trigger>
                                  <Actions>
                                    <GotoState StateId="State_ScreenLabelingIsFinish">
                                      <Conditions>
                                        <CompositeCondition Match="All">
                                          <DataCondition Property="ActiveStates" Comparison="Contains" Value="ABAG_A_VariableRegion" />
                                          <DataCondition Property="ActiveStates" Comparison="Contains" Value="ABAG_B_ConstantRegion" />
                                          <DataCondition Property="ActiveStates" Comparison="Contains" Value="ABAG_C_DisulfideBridge" />
                                          <DataCondition Property="ActiveStates" Comparison="Contains" Value="ABAG_D_LightChain" />
                                          <DataCondition Property="ActiveStates" Comparison="Contains" Value="ABAG_E_HeavyChain" />
                                          <DataCondition Property="ActiveStates" Comparison="Contains" Value="ABAG_F_Epitope" />
                                        </CompositeCondition>
                                      </Conditions>
                                    </GotoState>
                                    <GotoState StateId="State_ScreenLabelingIsWrong">
                                      <Conditions>
                                        <CompositeCondition Match="Any">
                                          <DataCondition Property="ActiveStates" Comparison="NotContains" Value="ABAG_A_VariableRegion" />
                                          <DataCondition Property="ActiveStates" Comparison="NotContains" Value="ABAG_B_ConstantRegion" />
                                          <DataCondition Property="ActiveStates" Comparison="NotContains" Value="ABAG_C_DisulfideBridge" />
                                          <DataCondition Property="ActiveStates" Comparison="NotContains" Value="ABAG_D_LightChain" />
                                          <DataCondition Property="ActiveStates" Comparison="NotContains" Value="ABAG_E_HeavyChain" />
                                          <DataCondition Property="ActiveStates" Comparison="NotContains" Value="ABAG_F_Epitope" />
                                        </CompositeCondition>
                                      </Conditions>
                                    </GotoState>
                                  </Actions>
                                </Trigger>

                              </Triggers>
                            </State>
                            <State Id="State_ScreenLabelingIsFinish">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABAGcorrect" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_ScreenLabelingIsWrong">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Target="{Binding Parameters.Parameter_ABAG_PuzzleTrial.Value}" Comparison="LessThan" Value="2" />
                                  </Conditions>
                                  <Actions>
                                    <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABAGwrong" />
                                    <Setter Target="{Binding Parameters.Parameter_ABAG_PuzzleTrial.Value}" Adjustment="+1" />
                                    <GotoState StateId="State_ScreenLabelingDefault" />
                                  </Actions>
                                </Trigger>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Target="{Binding Parameters.Parameter_ABAG_PuzzleTrial.Value}" Comparison="GreaterThanOrEqual" Value="2" />
                                  </Conditions>
                                  <Actions>
                                    <StartConversation Target="Conversation_LabPad" ConversationId="Conversation_ABAGhint" />
                                    <Setter Target="{Binding Parameters.Parameter_ABAG_PuzzleTrial.Value}" Adjustment="+1" />
                                    <GotoState StateId="State_ScreenLabelingDefault" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_PCW1ItemA_ABAG_Labelling">
                          <States>
                            <State Id="ABAG_A_VariableRegion" Title="Variable region" IsDefault="true" />
                            <State Id="ABAG_A_ConstantRegion" Title="Constant region" />
                            <State Id="ABAG_A_LightChain" Title="Light chain" />
                            <State Id="ABAG_A_HeavyChain" Title="Heavy chain" />
                            <State Id="ABAG_A_AntigenBindingSite" Title="Antigen-binding site" />
                            <State Id="ABAG_A_DisulfideBridge" Title="Disulfide bridge" />
                            <State Id="ABAG_A_Epitope" Title="Epitope" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_PCW1ItemB_ABAG_Labelling">
                          <States>
                            <State Id="ABAG_B_VariableRegion" Title="Variable region" IsDefault="true" />
                            <State Id="ABAG_B_ConstantRegion" Title="Constant region" />
                            <State Id="ABAG_B_LightChain" Title="Light chain" />
                            <State Id="ABAG_B_HeavyChain" Title="Heavy chain" />
                            <State Id="ABAG_B_AntigenBindingSite" Title="Antigen-binding site" />
                            <State Id="ABAG_B_DisulfideBridge" Title="Disulfide bridge" />
                            <State Id="ABAG_B_Epitope" Title="Epitope" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_PCW1ItemC_ABAG_Labelling">
                          <States>
                            <State Id="ABAG_C_VariableRegion" Title="Variable region" IsDefault="true" />
                            <State Id="ABAG_C_ConstantRegion" Title="Constant region" />
                            <State Id="ABAG_C_LightChain" Title="Light chain" />
                            <State Id="ABAG_C_HeavyChain" Title="Heavy chain" />
                            <State Id="ABAG_C_AntigenBindingSite" Title="Antigen-binding site" />
                            <State Id="ABAG_C_DisulfideBridge" Title="Disulfide bridge" />
                            <State Id="ABAG_C_Epitope" Title="Epitope" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_PCW1ItemD_ABAG_Labelling">
                          <States>
                            <State Id="ABAG_D_VariableRegion" Title="Variable region" IsDefault="true" />
                            <State Id="ABAG_D_ConstantRegion" Title="Constant region" />
                            <State Id="ABAG_D_LightChain" Title="Light chain" />
                            <State Id="ABAG_D_HeavyChain" Title="Heavy chain" />
                            <State Id="ABAG_D_AntigenBindingSite" Title="Antigen-binding site" />
                            <State Id="ABAG_D_DisulfideBridge" Title="Disulfide bridge" />
                            <State Id="ABAG_D_Epitope" Title="Epitope" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_PCW1ItemE_ABAG_Labelling">
                          <States>
                            <State Id="ABAG_E_VariableRegion" Title="Variable region" IsDefault="true" />
                            <State Id="ABAG_E_ConstantRegion" Title="Constant region" />
                            <State Id="ABAG_E_LightChain" Title="Light chain" />
                            <State Id="ABAG_E_HeavyChain" Title="Heavy chain" />
                            <State Id="ABAG_E_AntigenBindingSite" Title="Antigen-binding site" />
                            <State Id="ABAG_E_DisulfideBridge" Title="Disulfide bridge" />
                            <State Id="ABAG_E_Epitope" Title="Epitope" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_PCW1ItemF_ABAG_Labelling">
                          <States>
                            <State Id="ABAG_F_VariableRegion" Title="Variable region" IsDefault="true" />
                            <State Id="ABAG_F_ConstantRegion" Title="Constant region" />
                            <State Id="ABAG_F_LightChain" Title="Light chain" />
                            <State Id="ABAG_F_HeavyChain" Title="Heavy chain" />
                            <State Id="ABAG_F_AntigenBindingSite" Title="Antigen-binding site" />
                            <State Id="ABAG_F_DisulfideBridge" Title="Disulfide bridge" />
                            <State Id="ABAG_F_Epitope" Title="Epitope" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_SubmitA">
                          <States>
                            <State Id="State_SubmitADefault" IsDefault="true" />
                            <State Id="State_SubmitACorrect" />
                            <State Id="State_SubmitAWrong" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_SubmitB">
                          <States>
                            <State Id="State_SubmitBDefault" IsDefault="true" />
                            <State Id="State_SubmitBCorrect" />
                            <State Id="State_SubmitBWrong" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_SubmitC">
                          <States>
                            <State Id="State_SubmitCDefault" IsDefault="true" />
                            <State Id="State_SubmitCCorrect" />
                            <State Id="State_SubmitCWrong" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_SubmitD">
                          <States>
                            <State Id="State_SubmitDDefault" IsDefault="true" />
                            <State Id="State_SubmitDCorrect" />
                            <State Id="State_SubmitDWrong" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_SubmitE">
                          <States>
                            <State Id="State_SubmitEDefault" IsDefault="true" />
                            <State Id="State_SubmitECorrect" />
                            <State Id="State_SubmitEWrong" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_SubmitF">
                          <States>
                            <State Id="State_SubmitFDefault" IsDefault="true" />
                            <State Id="State_SubmitFCorrect" />
                            <State Id="State_SubmitFWrong" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_AbAgMinigameActivation">
                          <States>
                            <State Id="State_MinigameActive" IsDefault="true" />
                            <State Id="State_MinigameInactive" />
                          </States>
                        </StateGroup>
                      </StateGroups>
                      <Screens>
                        <Screen Id="PCW1Screen" GameObjectId="Screen" GUIScreenId="GUIScreen_PC" />
                      </Screens>
                      <Parameters>
                        <Parameter Id="Parameter_ABO_PuzzleTrial" Value="0" />
                        <Parameter Id="Parameter_ABOCarmen_PuzzleTrial" Value="0" />
                        <Parameter Id="Parameter_ABAG_PuzzleTrial" Value="0" />
                      </Parameters>
                    </Element>

                    <!--gloves-->
                    <Element Id="GlovesBoxW2" GameObjectId="GlovesBoxW2" SourceId="GlovesBox" Position="-0.13,-0.75" Rotation="-125" Tooltip="Gloves box">
                      <Triggers>
                        <EventTrigger Event="PreviewClick">
                          <Conditions>
                            <DataCondition Target="{Binding HasElement, RelativeSource=RightHand}" Value="true" />
                          </Conditions>
                          <Actions>
                            <StartConversation Target="EventConversation" ConversationSentence="Please drop the current item you are holding first." />
                            <CancelEvent />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Click">
                          <Conditions>
                            <CompositeCondition>
                              <DataCondition Target="{Binding HasElement, RelativeSource=RightHand}" Value="false" />
                              <DataCondition Target="{Binding RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
                              <DataCondition Target="{Binding RelativeSource=RightHand}" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
                            </CompositeCondition>
                          </Conditions>
                          <Actions>
                            <Setter Property="EmphasisDuration" Value="0" />
                            <AnimateHandTo />
                            <GotoState Target="{Binding RelativeSource=LeftHand}" StateId="Glove" />
                            <GotoState Target="{Binding RelativeSource=RightHand}" StateId="Glove" />
                            <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_NotSafeToDiscard" />
                            <AnimateHandTo IsReverse="true" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                    </Element>
                    <!--trashbin-->
                    <Placeholder Id="TrashbinFlattopW2" GameObjectId="TrashbinFlattopW2" SourceId="TrashbinFlattop" Position="0.35, -0.80" Rotation="270" AcceptsItems="EldonStickItem" PlaceholderBehaviour="Trash" Tooltip="Biohazard bin" ExtendedTooltip="Use this trash bin to dispose of used tubes and pipette tips.">
                      <Triggers>
                        <EventTrigger Event="PreviewClick">
                          <Conditions>
                            <CompositeCondition>
                              <DataCondition Target="LeftHand" Property="ActiveStates" Comparison="Contains" Value="Glove" />
                              <DataCondition Target="RightHand" Property="ActiveStates" Comparison="Contains" Value="Glove" />
                              <DataCondition Target="{Binding HasElement, RelativeSource=RightHand}" Value="false" />
                              <DataCondition Target="{Binding CurrentElement, ElementId=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_SafeToDiscard" />
                            </CompositeCondition>
                          </Conditions>
                          <Actions>
                            <GotoState StateId="State_Trashing" />
                            <AnimateHandTo Target="TrashbinFlattopW2_Container" />
                            <PlaySound SoundId="Trash" />
                            <GotoState Target="LeftHand" StateId="Barehand" />
                            <GotoState Target="RightHand" StateId="Barehand" />
                            <AnimateHandTo Target="TrashbinFlattopW2_Container" IsReverse="true" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                      <Elements>
                        <Element Id="TrashbinFlattopW2_Container" GameObjectId="Container" />
                      </Elements>
                      <StateGroups>
                        <StateGroup Id="StateGroup_TrashingAnimation">
                          <States>
                            <State Id="State_NoTrashing" IsDefault="true" />
                            <State Id="State_Trashing" AnimationId="Throw">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <Wait Duration="1" />
                                    <Setter Property="EmphasisDuration" Value="0" />
                                    <GotoState StateId="State_NoTrashing" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                      </StateGroups>
                    </Placeholder>
                    <!--pipettetip-->
                    <Element Id="PipetteTipsPackW1" SourceId="PCRPipetteTipsRack" GameObjectId="PipetteTipsPackW1" Position="0.262, -0.49" Rotation="90" ItemId="PipetteBox" IsClickable="true" Tooltip="Pipette tips" ExtendedTooltip="These tips go on the pipette. Clean tips are needed at every step to minimize risk of contamination." />
                    <!--pipetteholder-->
                    <Element Id="PipetteHolderW1" SourceId="PipetteHolder" GameObjectId="PipetteHolderW1" Position="0.4856364, -0.49" Rotation="90" IsClickable="false">
                      <Elements>
                        <Placeholder Id="PipetteHolderPlaceholderW1" GameObjectId="Placeholder" ItemId="Pipette" AcceptsItems="Pipette" IsPickUpAllowed="false" />
                      </Elements>
                    </Element>
                    <!--Tube15mlRack-->
                    <Element Id="RackTubes15mlTableIW2" SourceId="RackTubes15ml" GameObjectId="RackTubes15ml" Position="0.15, 0.2" Rotation="90" IsClickable="false" IsHighlightable="false">
                      <Elements>
                        <Placeholder Id="TestTube15mlPlaceholderRackIW21" GameObjectId="Placeholder_01" IsClickable="true" AcceptsItems="TestTube15ml" IsPickUpAllowed="false" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW22" GameObjectId="Placeholder_02" BasedOn="TestTube15mlPlaceholderRackIW21" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW23" GameObjectId="Placeholder_03" BasedOn="TestTube15mlPlaceholderRackIW21" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW24" GameObjectId="Placeholder_04" BasedOn="TestTube15mlPlaceholderRackIW21" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW25" GameObjectId="Placeholder_05" BasedOn="TestTube15mlPlaceholderRackIW21" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW26" GameObjectId="Placeholder_06" BasedOn="TestTube15mlPlaceholderRackIW21" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW27" GameObjectId="Placeholder_07" BasedOn="TestTube15mlPlaceholderRackIW21" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW28" GameObjectId="Placeholder_08" BasedOn="TestTube15mlPlaceholderRackIW21" />
                      </Elements>
                    </Element>

                    <!--ELDON-CARD-01-->
                    <Element Id="BloodTestCard1W2" GameObjectId="BloodTestCard" SourceId="EldonCardABL" Position="-0.142, 0.4" Rotation="-90" Tooltip="Eldon Card 1" IsClickable="true" IsFocusable="true">
                      <Triggers>
                        <!--Next/Prev arrow-->
                        <EventTrigger Event="Focused">
                          <Actions>
                            <GotoState StateId="State_ReadyToJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Defocused">
                          <Actions>
                            <GotoState StateId="State_NoJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Focused">
                          <Conditions>
                            <DataCondition Property="ActiveStates" Comparison="NotContains" Value="State_AfterFocused" />
                          </Conditions>
                          <Actions>
                            <GotoState StateId="State_Focused" />
                          </Actions>
                        </EventTrigger>

                        <!--Default IsEmphasized remover-->
                        <EventTrigger Event="Focused">
                          <Actions>
                            <Setter Property="EmphasisDuration" Value="0" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                      <Elements>
                        <Element Id="AntiA" GameObjectId="Anti-A" ItemId="AntiA_Item" IsClickable="true">
                          <Triggers>
                            <!--EMPTY-TO-HASWATER-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Water" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_Empty" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWater" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added water into Anti-A" />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASWATER-TO-HASWATER-AND-BLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Blood" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWater" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWaterAndBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added blood into Anti-A" />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                          </Triggers>
                          <Elements>
                            <Element Id="AntiA_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Water\nBlood" />
                            <Element Id="AntiA_Clotted" GameObjectId="Clotted" IsClickable="false" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="AntiA_Normal" GameObjectId="Blood" IsClickable="false" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                          <StateGroups>
                            <StateGroup Id="EldonCard_Containment" TransitionDuration="0">
                              <States>
                                <State Id="EldonCard_Empty" IsDefault="true" />
                                <State Id="EldonCard_HasWater">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="A_HasWater" />
                                        <Setter Target="AntiA_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiA_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiA_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="A_HasBlood" />
                                        <Setter Target="AntiA_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiA_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiA_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasWaterAndBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="A_HasWaterAndBlood" />
                                        <Setter Target="AntiA_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="AntiA_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiA_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_Mixed">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <Setter Target="AntiA" Property="IsClickable" Value="false" />
                                        <Setter Target="AntiA_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiA_DropletBlood" Property="IsClickable" Value="false" />
                                        <Setter Target="AntiA_Normal" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiA_Clotted" Property="IsVisible" Value="true" />
                                        <Setter Target="AntiA_Clotted" Property="IsClickable" Value="true" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                              </States>
                            </StateGroup>
                          </StateGroups>
                        </Element>
                        <Element Id="AntiB" GameObjectId="Anti-B" ItemId="AntiB_Item" IsClickable="true">
                          <Triggers>
                            <!--EMPTY-TO-HASWATER-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Water" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_Empty" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWater" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added water into Anti-B" />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASWATER-TO-HASWATER-AND-BLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Blood" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWater" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWaterAndBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added blood into Anti-B" />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                          </Triggers>
                          <Elements>
                            <Element Id="AntiB_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Water\nBlood" />
                            <Element Id="AntiB_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="AntiB_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                          <StateGroups>
                            <StateGroup Id="EldonCard_Containment" TransitionDuration="0">
                              <States>
                                <State Id="EldonCard_Empty" IsDefault="true" />
                                <State Id="EldonCard_HasWater">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="B_HasWater" />
                                        <Setter Target="AntiB_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="AntiB_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiB_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiB_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="B_HasBlood" />
                                        <Setter Target="AntiB_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiB_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="AntiB_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiB_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasWaterAndBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="B_HasWaterAndBlood" />
                                        <Setter Target="AntiB_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="AntiB_DropletBlood" Property="IsVisible" Value="true" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_Mixed">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <Setter Target="AntiB" Property="IsClickable" Value="false" />
                                        <Setter Target="AntiB_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiB_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiB_Normal" Property="IsVisible" Value="true" />
                                        <Setter Target="AntiB_Normal" Property="IsClickable" Value="true" />
                                        <Setter Target="AntiB_Clotted" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                              </States>
                            </StateGroup>
                          </StateGroups>
                        </Element>
                        <Element Id="AntiD" GameObjectId="Anti-D" ItemId="AntiD_Item" IsClickable="true">
                          <Triggers>
                            <!--EMPTY-TO-HASWATER-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Water" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_Empty" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWater" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added water into Anti-D" />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASWATER-TO-HASWATER-AND-BLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Blood" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWater" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWaterAndBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added blood into Anti-D" />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                          </Triggers>
                          <Elements>
                            <Element Id="AntiD_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Water\nBlood" />
                            <Element Id="AntiD_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="AntiD_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                          <StateGroups>
                            <StateGroup Id="EldonCard_Containment" TransitionDuration="0">
                              <States>
                                <State Id="EldonCard_Empty" IsDefault="true" />
                                <State Id="EldonCard_HasWater">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="D_HasWater" />
                                        <Setter Target="AntiD_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="AntiD_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiD_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiD_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="D_HasBlood" />
                                        <Setter Target="AntiD_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiD_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="AntiD_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiD_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasWaterAndBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="D_HasWaterAndBlood" />
                                        <Setter Target="AntiD_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="AntiD_DropletBlood" Property="IsVisible" Value="true" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_Mixed">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <Setter Target="AntiD" Property="IsClickable" Value="false" />
                                        <Setter Target="AntiD_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiD_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="AntiD_Normal" Property="IsVisible" Value="true" />
                                        <Setter Target="AntiD_Normal" Property="IsClickable" Value="true" />
                                        <Setter Target="AntiD_Clotted" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                              </States>
                            </StateGroup>
                          </StateGroups>
                        </Element>
                        <Element Id="Control" GameObjectId="Control" ItemId="Control_Item" IsClickable="true">
                          <Triggers>
                            <!--EMPTY-TO-HASWATER-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Water" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_Empty" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWater" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added water into Control" />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASWATER-TO-HASWATER-AND-BLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Blood" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWater" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWaterAndBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added blood into Control" />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASBLOODANDWATER-TO-MIXED-->
                          </Triggers>
                          <Elements>
                            <Element Id="Control_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Water\nBlood" />
                            <Element Id="Control_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="Control_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                          <StateGroups>
                            <StateGroup Id="EldonCard_Containment" TransitionDuration="0">
                              <States>
                                <State Id="EldonCard_Empty" IsDefault="true" />
                                <State Id="EldonCard_HasWater">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="C_HasWater" />
                                        <Setter Target="Control_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="Control_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="Control_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="Control_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="C_HasBlood" />
                                        <Setter Target="Control_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="Control_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="Control_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="Control_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasWaterAndBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard1W2" StateId="C_HasWaterAndBlood" />
                                        <Setter Target="Control_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="Control_DropletBlood" Property="IsVisible" Value="true" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_Mixed">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <Setter Target="Control" Property="IsClickable" Value="false" />
                                        <Setter Target="Control_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="Control_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="Control_Normal" Property="IsVisible" Value="true" />
                                        <Setter Target="Control_Normal" Property="IsClickable" Value="true" />
                                        <Setter Target="Control_Clotted" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                              </States>
                            </StateGroup>
                          </StateGroups>
                        </Element>
                      </Elements>
                      <StateGroups>
                        <StateGroup Id="StateGroup_JumpToOtherCard_EC01W2">
                          <States>
                            <State Id="State_ReadyToJump" />
                            <State Id="State_JumpFromCard01toCard02">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="IsFocused" Comparison="Equals" Value="true" />
                                  </Conditions>
                                  <Actions>
                                    <MoveTo Element="BloodTestCard2W2" />
                                    <Wait Duration="0.5" />
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_NoJump" IsDefault="true" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_HelperVisibility_EC01W2">
                          <States>
                            <State Id="State_HelperIsNotVisible" IsDefault="true">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_HelperIsVisible" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_BloodType_EC01W2">
                          <States>
                            <State Id="Type_A_Positive" Title="A+" IsDefault="true" />
                            <State Id="Type_A_Negative" Title="A-" />
                            <State Id="Type_B_Positive" Title="B+" />
                            <State Id="Type_B_Negative" Title="B-" />
                            <State Id="Type_AB_Positive" Title="AB+" />
                            <State Id="Type_AB_Negative" Title="AB-" />
                            <State Id="Type_O_Positive" Title="O+" />
                            <State Id="Type_O_Negative" Title="O-" />
                          </States>
                        </StateGroup>
                        <StateGroup>
                          <States>
                            <State Id="State_ActivateAllCircles" IsDefault="true">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <Setter Target="AntiA" Property="IsClickable" Value="true" />
                                    <Setter Target="AntiB" Property="IsClickable" Value="true" />
                                    <Setter Target="AntiD" Property="IsClickable" Value="true" />
                                    <Setter Target="Control" Property="IsClickable" Value="true" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_ActivateAntiAOnly">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <Setter Target="AntiA" Property="IsClickable" Value="true" />
                                    <Setter Target="AntiB" Property="IsClickable" Value="false" />
                                    <Setter Target="AntiD" Property="IsClickable" Value="false" />
                                    <Setter Target="Control" Property="IsClickable" Value="false" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                        <StateGroup Id="Status_AntiA_EC01W2">
                          <States>
                            <State Id="A_Empty" IsDefault="true" />
                            <State Id="A_HasWater" />
                            <State Id="A_HasBlood" />
                            <State Id="A_HasWaterAndBlood" />
                            <State Id="A_HasMixed">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState Target="AntiA" StateId="EldonCard_Mixed" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                        <StateGroup Id="Status_AntiB_EC01W2">
                          <States>
                            <State Id="B_Empty" IsDefault="true" />
                            <State Id="B_HasWater" />
                            <State Id="B_HasBlood" />
                            <State Id="B_HasWaterAndBlood" />
                            <State Id="B_HasMixed">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState Target="AntiB" StateId="EldonCard_Mixed" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                        <StateGroup Id="Status_AntiD_EC01W2">
                          <States>
                            <State Id="D_Empty" IsDefault="true" />
                            <State Id="D_HasWater" />
                            <State Id="D_HasBlood" />
                            <State Id="D_HasWaterAndBlood" />
                            <State Id="D_HasMixed">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState Target="AntiD" StateId="EldonCard_Mixed" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                        <StateGroup Id="Status_Control_EC01W2">
                          <States>
                            <State Id="C_Empty" IsDefault="true" />
                            <State Id="C_HasWater" />
                            <State Id="C_HasBlood" />
                            <State Id="C_HasWaterAndBlood" />
                            <State Id="C_HasMixed">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState Target="Control" StateId="EldonCard_Mixed" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_FocusedCondition_EC01W2">
                          <States>
                            <State Id="State_NotFocused" IsDefault="true" />
                            <State Id="State_PreFocused" />
                            <State Id="State_Focused" />
                            <State Id="State_AfterFocused" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_LabellingW2_EC01W2">
                          <States>
                            <State Id="State_LabellingIsWrong" IsDefault="true" />
                            <State Id="State_LabellingIsCorrect" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_LabelIndicator_EC01W2">
                          <States>
                            <State Id="State_LabelIndicatorDefault" IsDefault="true" />
                            <State Id="State_LabelIndicatorGreen" />
                            <State Id="State_LabelIndicatorRed" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_ForRhLabelVisibility_EC01W2">
                          <States>
                            <State Id="State_BeforeQuiz" IsDefault="true" />
                            <State Id="State_AfterQuiz" />
                          </States>
                        </StateGroup>
                      </StateGroups>
                      <Screens>
                        <Screen Id="Screen_Card1W2Name" GameObjectId="ScreenName" GUIScreenId="GUI_EldonCardScreen_Name_Card01W2" IsShown="true" />
                        <Screen Id="Screen_Card1W2Rhesus" GameObjectId="ScreenRhesus" GUIScreenId="GUI_EldonCardScreen_Rhesus_Card01W2" IsShown="true" />
                        <Screen Id="Screen_Card1W2Born" GameObjectId="ScreenBorn" GUIScreenId="GUI_EldonCardScreen_Born_Card01W2" IsShown="true" />
                        <Screen Id="Screen_Card1W2Date" GameObjectId="ScreenDate" GUIScreenId="GUI_EldonCardScreen_Date_Card01W2" IsShown="true" />
                        <Screen Id="Screen_Card1W2Sign" GameObjectId="ScreenSignature" GUIScreenId="GUI_EldonCardScreen_Signature_Card01W2" IsShown="true" />
                      </Screens>
                    </Element>
                    <!--bloodcard2-->
                    <Element Id="BloodTestCard2W2" GameObjectId="BloodTestCard2W2" SourceId="EldonCardABL" Position="-0.142, 0.150" Rotation="-90" IsClickable="true" IsFocusable="false" Tooltip="Eldon Card 2">
                      <Triggers>
                        <!--Next/Prev arrow-->
                        <EventTrigger Event="Focused">
                          <Actions>
                            <GotoState StateId="State_ReadyToJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Defocused">
                          <Actions>
                            <GotoState StateId="State_NoJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Focused">
                          <Conditions>
                            <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_PreFocused" />
                          </Conditions>
                          <Actions>
                            <GotoState StateId="State_Focused" />
                            <Wait Duration="1" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                      <Elements>
                        <Element Id="EC02_AntiA" GameObjectId="Anti-A" IsClickable="false">
                          <Elements>
                            <Element Id="EC02_AntiA_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC02_AntiA_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC02_AntiA_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC02_AntiB" GameObjectId="Anti-B" IsClickable="false">
                          <Elements>
                            <Element Id="EC02_AntiB_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC02_AntiB_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC02_AntiB_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC02_AntiD" GameObjectId="Anti-D" IsClickable="false">
                          <Elements>
                            <Element Id="EC02_AntiD_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC02_AntiD_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC02_AntiD_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC02_Control" GameObjectId="Control" IsClickable="false">
                          <Elements>
                            <Element Id="EC02_Control_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC02_Control_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC02_Control_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                      </Elements>
                      <StateGroups>
                        <StateGroup Id="StateGroup_JumpToOtherCard_EC02W2">
                          <States>
                            <State Id="State_ReadyToJump" />
                            <State Id="State_JumpFromCard02toCard03">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="IsFocused" Comparison="Equals" Value="true" />
                                  </Conditions>
                                  <Actions>
                                    <MoveTo Element="BloodTestCard3W2" />
                                    <Wait Duration="0.5" />
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_JumpFromCard02toCard01">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="IsFocused" Comparison="Equals" Value="true" />
                                  </Conditions>
                                  <Actions>
                                    <MoveTo Element="BloodTestCard1W2" />
                                    <Wait Duration="0.5" />
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_NoJump" IsDefault="true" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_BloodType_EC02W2">
                          <States>
                            <State Id="Type_A_Positive" Title="A+" IsDefault="true" />
                            <State Id="Type_A_Negative" Title="A-" />
                            <State Id="Type_B_Positive" Title="B+" />
                            <State Id="Type_B_Negative" Title="B-" />
                            <State Id="Type_AB_Positive" Title="AB+" />
                            <State Id="Type_AB_Negative" Title="AB-" />
                            <State Id="Type_O_Positive" Title="O+" />
                            <State Id="Type_O_Negative" Title="O-" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_HelperVisibility_EC02W2">
                          <States>
                            <State Id="State_HelperIsNotVisible" IsDefault="true">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_HelperIsVisible" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_FocusedCondition_EC02W2">
                          <States>
                            <State Id="State_NotFocused" IsDefault="true" />
                            <State Id="State_PreFocused">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_NotFocused" />
                                  </Conditions>
                                  <Actions>
                                    <Setter Target="EC02_AntiA_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC02_AntiB_Clotted" Property="IsVisible" Value="true" />
                                    <Setter Target="EC02_AntiD_Clotted" Property="IsVisible" Value="true" />
                                    <Setter Target="EC02_Control_Normal" Property="IsVisible" Value="true" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_Focused" />
                            <State Id="State_AfterFocused" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_LabellingW2_EC02W2">
                          <States>
                            <State Id="State_LabellingIsWrong" IsDefault="true" />
                            <State Id="State_LabellingIsCorrect" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_LabelIndicator_EC02W2">
                          <States>
                            <State Id="State_LabelIndicatorDefault" IsDefault="true" />
                            <State Id="State_LabelIndicatorGreen" />
                            <State Id="State_LabelIndicatorRed" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_ForRhLabelVisibility_EC02W2">
                          <States>
                            <State Id="State_BeforeQuiz" IsDefault="true" />
                            <State Id="State_AfterQuiz" />
                          </States>
                        </StateGroup>
                      </StateGroups>
                      <Screens>
                        <Screen Id="Screen_Card2W2Name" GameObjectId="ScreenName" GUIScreenId="GUI_EldonCardScreen_Name_Card02W2" IsShown="true" />
                        <Screen Id="Screen_Card2W2Rhesus" GameObjectId="ScreenRhesus" GUIScreenId="GUI_EldonCardScreen_Rhesus_Card02W2" IsShown="true" />
                        <Screen Id="Screen_Card2W2Born" GameObjectId="ScreenBorn" GUIScreenId="GUI_EldonCardScreen_Born_Card02W2" IsShown="true" />
                        <Screen Id="Screen_Card2W2Date" GameObjectId="ScreenDate" GUIScreenId="GUI_EldonCardScreen_Date_Card02W2" IsShown="true" />
                        <Screen Id="Screen_Card2W2Sign" GameObjectId="ScreenSignature" GUIScreenId="GUI_EldonCardScreen_Signature_Card02W2" IsShown="true" />
                      </Screens>
                    </Element>
                    <!--bloodcard3-->
                    <Element Id="BloodTestCard3W2" GameObjectId="BloodTestCard3W2" SourceId="EldonCardABL" Position="-0.142, -0.10" Rotation="-90" IsClickable="true" IsFocusable="false" Tooltip="Eldon Card 3">
                      <Triggers>
                        <!--Next/Prev arrow-->
                        <EventTrigger Event="Focused">
                          <Actions>
                            <GotoState StateId="State_ReadyToJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Defocused">
                          <Actions>
                            <GotoState StateId="State_NoJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Focused">
                          <Conditions>
                            <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_PreFocused" />
                          </Conditions>
                          <Actions>
                            <GotoState StateId="State_Focused" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                      <Elements>
                        <Element Id="EC03_AntiA" GameObjectId="Anti-A" IsClickable="false">
                          <Elements>
                            <Element Id="EC03_AntiA_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC03_AntiA_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC03_AntiA_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC03_AntiB" GameObjectId="Anti-B" IsClickable="false">
                          <Elements>
                            <Element Id="EC03_AntiB_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC03_AntiB_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC03_AntiB_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC03_AntiD" GameObjectId="Anti-D" IsClickable="false">
                          <Elements>
                            <Element Id="EC03_AntiD_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC03_AntiD_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC03_AntiD_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC03_Control" GameObjectId="Control" IsClickable="false">
                          <Triggers>
                            <!--EMPTY-TO-HASWATER-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Water" />
                                  <DataCondition Target="BloodTestCard3W2" Property="ActiveStates" Comparison="Contains" Value="State_EasterEggHidden" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState Target="BloodTestCard3W2" StateId="State_EasterEggQianYi" />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                          </Triggers>
                          <Elements>
                            <Element Id="EC03_Control_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC03_Control_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC03_Control_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                      </Elements>
                      <StateGroups>
                        <StateGroup Id="StateGroup_JumpToOtherCard_EC03W2">
                          <States>
                            <State Id="State_ReadyToJump" />
                            <State Id="State_JumpFromCard03toCard04">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="IsFocused" Comparison="Equals" Value="true" />
                                  </Conditions>
                                  <Actions>
                                    <MoveTo Element="BloodTestCard4W2" />
                                    <Wait Duration="0.5" />
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_JumpFromCard03toCard02">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="IsFocused" Comparison="Equals" Value="true" />
                                  </Conditions>
                                  <Actions>
                                    <MoveTo Element="BloodTestCard2W2" />
                                    <Wait Duration="0.5" />
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_NoJump" IsDefault="true" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_BloodType_EC03W2">
                          <States>
                            <State Id="Type_A_Positive" Title="A+" IsDefault="true" />
                            <State Id="Type_A_Negative" Title="A-" />
                            <State Id="Type_B_Positive" Title="B+" />
                            <State Id="Type_B_Negative" Title="B-" />
                            <State Id="Type_AB_Positive" Title="AB+" />
                            <State Id="Type_AB_Negative" Title="AB-" />
                            <State Id="Type_O_Positive" Title="O+" />
                            <State Id="Type_O_Negative" Title="O-" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_HelperVisibility_EC03W2">
                          <States>
                            <State Id="State_HelperIsNotVisible" IsDefault="true">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_HelperIsVisible" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_FocusedCondition_EC03W2">
                          <States>
                            <State Id="State_NotFocused" IsDefault="true" />
                            <State Id="State_PreFocused">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_NotFocused" />
                                  </Conditions>
                                  <Actions>
                                    <Setter Target="EC03_AntiA_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC03_AntiB_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC03_AntiD_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC03_Control_Normal" Property="IsVisible" Value="true" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_Focused" />
                            <State Id="State_AfterFocused" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_EasterEgg_EC03W2">
                          <States>
                            <State Id="State_EasterEggHidden" IsDefault="true" />
                            <State Id="State_EasterEggQianYi">
                            </State>
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_LabellingW2_EC03W2">
                          <States>
                            <State Id="State_LabellingIsWrong" IsDefault="true" />
                            <State Id="State_LabellingIsCorrect" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_LabelIndicator_EC03W2">
                          <States>
                            <State Id="State_LabelIndicatorDefault" IsDefault="true" />
                            <State Id="State_LabelIndicatorGreen" />
                            <State Id="State_LabelIndicatorRed" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_ForRhLabelVisibility_EC03W2">
                          <States>
                            <State Id="State_BeforeQuiz" IsDefault="true" />
                            <State Id="State_AfterQuiz" />
                          </States>
                        </StateGroup>
                      </StateGroups>
                      <Screens>
                        <Screen Id="Screen_C03Name" GameObjectId="ScreenName" GUIScreenId="GUI_EldonCardScreen_Name_Card03W2" IsShown="true" />
                        <Screen Id="Screen_C03Rhesus" GameObjectId="ScreenRhesus" GUIScreenId="GUI_EldonCardScreen_Rhesus_Card03W2" IsShown="true" />
                        <Screen Id="Screen_C03Born" GameObjectId="ScreenBorn" GUIScreenId="GUI_EldonCardScreen_Born_Card03W2" IsShown="true" />
                        <Screen Id="Screen_C03Date" GameObjectId="ScreenDate" GUIScreenId="GUI_EldonCardScreen_Date_Card03W2" IsShown="true" />
                        <Screen Id="Screen_C03Sign" GameObjectId="ScreenSignature" GUIScreenId="GUI_EldonCardScreen_Signature_Card03W2" IsShown="true" />
                      </Screens>
                    </Element>
                    <!--bloodcard4-->
                    <Element Id="BloodTestCard4W2" GameObjectId="BloodTestCard4W2" SourceId="EldonCardABL" Position="-0.142,-0.35" Rotation="-90" IsClickable="true" IsFocusable="false" Tooltip="Eldon Card 4">
                      <Triggers>
                        <!--Next/Prev arrow-->
                        <EventTrigger Event="Focused">
                          <Actions>
                            <GotoState StateId="State_ReadyToJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Defocused">
                          <Actions>
                            <GotoState StateId="State_NoJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Focused">
                          <Conditions>
                            <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_PreFocused" />
                          </Conditions>
                          <Actions>
                            <GotoState StateId="State_Focused" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                      <Elements>
                        <Element Id="EC04_AntiA" GameObjectId="Anti-A" IsClickable="false">
                          <Elements>
                            <Element Id="EC04_AntiA_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC04_AntiA_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC04_AntiA_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC04_AntiB" GameObjectId="Anti-B" IsClickable="false">
                          <Elements>
                            <Element Id="EC04_AntiB_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC04_AntiB_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC04_AntiB_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC04_AntiD" GameObjectId="Anti-D" IsClickable="false">
                          <Elements>
                            <Element Id="EC04_AntiD_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC04_AntiD_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC04_AntiD_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC04_Control" GameObjectId="Control" IsClickable="false">
                          <Elements>
                            <Element Id="EC04_Control_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC04_Control_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC04_Control_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                      </Elements>
                      <StateGroups>
                        <StateGroup Id="StateGroup_JumpToOtherCard_EC04">
                          <States>
                            <State Id="State_ReadyToJump" />
                            <State Id="State_JumpFromCard04toCard03">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="IsFocused" Comparison="Equals" Value="true" />
                                  </Conditions>
                                  <Actions>
                                    <MoveTo Element="BloodTestCard3W2" />
                                    <Wait Duration="0.5" />
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_NoJump" IsDefault="true" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_BloodType_EC04W2">
                          <States>
                            <State Id="Type_A_Positive" Title="A+" IsDefault="true" />
                            <State Id="Type_A_Negative" Title="A-" />
                            <State Id="Type_B_Positive" Title="B+" />
                            <State Id="Type_B_Negative" Title="B-" />
                            <State Id="Type_AB_Positive" Title="AB+" />
                            <State Id="Type_AB_Negative" Title="AB-" />
                            <State Id="Type_O_Positive" Title="O+" />
                            <State Id="Type_O_Negative" Title="O-" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_HelperVisibility_EC04">
                          <States>
                            <State Id="State_HelperIsNotVisible" IsDefault="true">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_HelperIsVisible" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_FocusedCondition_EC04">
                          <States>
                            <State Id="State_NotFocused" IsDefault="true" />
                            <State Id="State_PreFocused">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_NotFocused" />
                                  </Conditions>
                                  <Actions>
                                    <Setter Target="EC04_AntiA_Clotted" Property="IsVisible" Value="true" />
                                    <Setter Target="EC04_AntiB_Clotted" Property="IsVisible" Value="true" />
                                    <Setter Target="EC04_AntiD_Clotted" Property="IsVisible" Value="true" />
                                    <Setter Target="EC04_Control_Normal" Property="IsVisible" Value="true" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_Focused" />
                            <State Id="State_AfterFocused" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_LabellingW2_EC04">
                          <States>
                            <State Id="State_LabellingIsWrong" IsDefault="true" />
                            <State Id="State_LabellingIsCorrect" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_LabelIndicator_EC04">
                          <States>
                            <State Id="State_LabelIndicatorDefault" IsDefault="true" />
                            <State Id="State_LabelIndicatorGreen" />
                            <State Id="State_LabelIndicatorRed" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_ForRhLabelVisibility_EC04">
                          <States>
                            <State Id="State_BeforeQuiz" IsDefault="true" />
                            <State Id="State_AfterQuiz" />
                          </States>
                        </StateGroup>
                      </StateGroups>
                      <Screens>
                        <Screen Id="Screen_EC04Name" GameObjectId="ScreenName" GUIScreenId="GUI_EldonCardScreen_Name_Card04W2" IsShown="true" />
                        <Screen Id="Screen_EC04Rhesus" GameObjectId="ScreenRhesus" GUIScreenId="GUI_EldonCardScreen_Rhesus_Card04W2" IsShown="true" />
                        <Screen Id="Screen_EC04Born" GameObjectId="ScreenBorn" GUIScreenId="GUI_EldonCardScreen_Born_Card04W2" IsShown="true" />
                        <Screen Id="Screen_EC04Date" GameObjectId="ScreenDate" GUIScreenId="GUI_EldonCardScreen_Date_Card04W2" IsShown="true" />
                        <Screen Id="Screen_EC04Sign" GameObjectId="ScreenSignature" GUIScreenId="GUI_EldonCardScreen_Signature_Card04W2" IsShown="true" />
                      </Screens>
                    </Element>

                    <!--Eldon Stick(s)-->
                    <Placeholder Id="Placeholder_EldonStick1" AcceptsItems="EldonStickItem" ItemId="EldonStickItem" Position="0.15,-0.20" Rotation="-90" Tooltip="Eldon stick" IsVisible="false" IsClickable="false" IsHighlightable="true" />
                    <Placeholder Id="Placeholder_EldonStick2" AcceptsItems="EldonStickItem" ItemId="EldonStickItem" Position="0.15,-0.15" Rotation="-90" Tooltip="Eldon stick" IsVisible="false" IsClickable="false" IsHighlightable="true" />
                    <Placeholder Id="Placeholder_EldonStick3" AcceptsItems="EldonStickItem" ItemId="EldonStickItem" Position="0.15,-0.10" Rotation="-90" Tooltip="Eldon stick" IsVisible="false" IsClickable="false" IsHighlightable="true" />
                    <Placeholder Id="Placeholder_EldonStick4" AcceptsItems="EldonStickItem" ItemId="EldonStickItem" Position="0.15,-0.05" Rotation="-90" Tooltip="Eldon stick" IsVisible="false" IsClickable="false" IsHighlightable="true" />

                  </Elements>
                </Surface>
              </Elements>
            </Element>
            <Element Id="Workbench3" GameObjectId="Workbench3" SourceId="Table2" Position="3.02,0.13" Rotation="0" Tooltip="Workbench 3" ExtendedTooltip="Rhesus." IsFocusable="true">
              <Elements>
                <Surface Id="Surface_Workbench3" GameObjectId="Main">
                  <Elements>
                    <!--gloves-->
                    <Element Id="GlovesBoxW1" GameObjectId="GlovesBoxW1" SourceId="GlovesBox" Position="0.13,-0.7" Rotation="190" Tooltip="Gloves">
                      <Triggers>
                        <EventTrigger Event="PreviewClick">
                          <Conditions>
                            <DataCondition Target="{Binding HasElement, RelativeSource=RightHand}" Value="true" />
                          </Conditions>
                          <Actions>
                            <StartConversation Target="EventConversation" ConversationSentence="Please drop the current item you are holding first." />
                            <CancelEvent />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Click">
                          <Conditions>
                            <CompositeCondition>
                              <DataCondition Target="{Binding HasElement, RelativeSource=RightHand}" Value="false" />
                              <DataCondition Target="{Binding RelativeSource=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
                              <DataCondition Target="{Binding RelativeSource=RightHand}" Property="ActiveStates" Comparison="Contains" Value="Barehand" />
                            </CompositeCondition>
                          </Conditions>
                          <Actions>
                            <Setter Property="EmphasisDuration" Value="0" />
                            <AnimateHandTo />
                            <GotoState Target="{Binding RelativeSource=LeftHand}" StateId="Glove" />
                            <GotoState Target="{Binding RelativeSource=RightHand}" StateId="Glove" />
                            <GotoState Target="{Binding CurrentElement, RelativeSource=LeftHand}" StateId="State_NotSafeToDiscard" />
                            <AnimateHandTo IsReverse="true" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                    </Element>
                    <!--trashbin-->
                    <Placeholder Id="TrashbinFlattopW3" GameObjectId="TrashbinFlattopW3" SourceId="TrashbinFlattop" Position="0.35, 0.70" Rotation="270" AcceptsItems="EldonStickItem" PlaceholderBehaviour="Trash" Tooltip="Biohazard bin" ExtendedTooltip="Use this trash bin to dispose of used tubes and pipette tips.">
                      <Triggers>
                        <EventTrigger Event="PreviewClick">
                          <Conditions>
                            <CompositeCondition>
                              <DataCondition Target="LeftHand" Property="ActiveStates" Comparison="Contains" Value="Glove" />
                              <DataCondition Target="RightHand" Property="ActiveStates" Comparison="Contains" Value="Glove" />
                              <DataCondition Target="{Binding HasElement, RelativeSource=RightHand}" Value="false" />
                              <DataCondition Target="{Binding CurrentElement, ElementId=LeftHand}" Property="ActiveStates" Comparison="Contains" Value="State_SafeToDiscard" />
                            </CompositeCondition>
                          </Conditions>
                          <Actions>
                            <GotoState StateId="State_Trashing" />
                            <AnimateHandTo Target="TrashbinFlattopW3_Container" />
                            <PlaySound SoundId="Trash" />
                            <GotoState Target="LeftHand" StateId="Barehand" />
                            <GotoState Target="RightHand" StateId="Barehand" />
                            <AnimateHandTo Target="TrashbinFlattopW3_Container" IsReverse="true" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                      <Elements>
                        <Element Id="TrashbinFlattopW3_Container" GameObjectId="Container" />
                      </Elements>
                      <StateGroups>
                        <StateGroup Id="StateGroup_TrashingAnimation">
                          <States>
                            <State Id="State_NoTrashing" IsDefault="true" />
                            <State Id="State_Trashing" AnimationId="Throw">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <Wait Duration="1" />
                                    <Setter Property="EmphasisDuration" Value="0" />
                                    <GotoState StateId="State_NoTrashing" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                      </StateGroups>
                    </Placeholder>
                    <!--pipettetip-->
                    <Element Id="PipetteTipsPackW1b" SourceId="PCRPipetteTipsRack" GameObjectId="PipetteTipsPackW1b" Position="0.262, -0.49" Rotation="90" ItemId="PipetteBox" IsClickable="true" Tooltip="Pipette tips" ExtendedTooltip="These tips go on the pipette. Clean tips are needed at every step to minimize risk of contamination." />
                    <!--pipetteholder-->
                    <Element Id="PipetteHolderW3" SourceId="PipetteHolder" GameObjectId="PipetteHolderW3" Position="0.4856364, -0.49" Rotation="90" IsClickable="false">
                      <Elements>
                        <Placeholder Id="PipetteHolderPlaceholderW3" GameObjectId="Placeholder" ItemId="Pipette" AcceptsItems="Pipette" IsPickUpAllowed="false" />
                      </Elements>
                    </Element>

                    <!--rack-->
                    <Element Id="RackTubes15mlTableIW3" SourceId="RackTubes15ml" GameObjectId="RackTubes15ml" Position="0.234, 0" Rotation="90" IsClickable="false" IsHighlightable="false">
                      <Elements>
                        <Placeholder Id="TestTube15mlPlaceholderRackIW31" GameObjectId="Placeholder_01" IsClickable="true" AcceptsItems="TestTube15ml_B" IsPickUpAllowed="false" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW32" GameObjectId="Placeholder_02" BasedOn="TestTube15mlPlaceholderRackIW31" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW33" GameObjectId="Placeholder_03" BasedOn="TestTube15mlPlaceholderRackIW31" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW34" GameObjectId="Placeholder_04" BasedOn="TestTube15mlPlaceholderRackIW31" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW35" GameObjectId="Placeholder_05" BasedOn="TestTube15mlPlaceholderRackIW31" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW36" GameObjectId="Placeholder_06" BasedOn="TestTube15mlPlaceholderRackIW31" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW37" GameObjectId="Placeholder_07" BasedOn="TestTube15mlPlaceholderRackIW31" />
                        <Placeholder Id="TestTube15mlPlaceholderRackIW38" GameObjectId="Placeholder_08" BasedOn="TestTube15mlPlaceholderRackIW31" />
                      </Elements>
                    </Element>

                    <!--bloodcard CARMEN A NEGATIVE-->
                    <Element Id="BloodTestCard_Carmen" GameObjectId="BloodTestCard_Carmen" SourceId="EldonCardABL" Position="-0.142, 0.15" Rotation="-90" IsClickable="true" Tooltip="Carmen">
                      <Triggers>
                        <!--Next/Prev arrow-->
                        <EventTrigger Event="Focused">
                          <Actions>
                            <GotoState StateId="State_ReadyToJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Defocused">
                          <Actions>
                            <GotoState StateId="State_NoJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Focused">
                          <Conditions>
                            <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_PreFocused" />
                          </Conditions>
                          <Actions>
                            <GotoState StateId="State_Focused" />
                          </Actions>
                        </EventTrigger>
                        <!--Default IsEmphasized remover-->
                        <EventTrigger Event="Focused">
                          <Actions>
                            <Setter Property="EmphasisDuration" Value="0" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                      <Elements>
                        <Element Id="EC_CARMEN_AntiA" GameObjectId="Anti-A" ItemId="EC_CARMEN_AntiA_Item" IsClickable="true">
                          <Triggers>
                            <!--HASWATER-TO-HASWATER-AND-BLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Blood_Carmen" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWater" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWaterAndBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added blood into Anti-A" />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                          </Triggers>
                          <Elements>
                            <Element Id="EC_CARMEN_AntiA_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_CARMEN_AntiA_Clotted" GameObjectId="Clotted" IsClickable="false" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_CARMEN_AntiA_Normal" GameObjectId="Blood" IsClickable="false" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                          <StateGroups>
                            <StateGroup Id="EldonCard_Containment_CARMEN_AntiA" TransitionDuration="0">
                              <States>
                                <State Id="EldonCard_Empty" />
                                <State Id="EldonCard_HasWater" IsDefault="true">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="A_HasWater" />
                                        <Setter Target="EC_CARMEN_AntiA_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiA_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiA_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiA_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="A_HasBlood" />
                                        <Setter Target="EC_CARMEN_AntiA_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiA_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiA_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiA_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasWaterAndBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="A_HasWaterAndBlood" />
                                        <Setter Target="EC_CARMEN_AntiA_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiA_DropletBlood" Property="IsVisible" Value="true" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_Mixed">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <Setter Target="EC_CARMEN_AntiA" Property="IsClickable" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiA_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiA_Normal" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiA_Clotted" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiA_Clotted" Property="IsClickable" Value="true" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                              </States>
                            </StateGroup>
                          </StateGroups>
                        </Element>
                        <Element Id="EC_CARMEN_AntiB" GameObjectId="Anti-B" ItemId="EC_CARMEN_AntiB_Item" IsClickable="true">
                          <Triggers>
                            <!--EMPTY-TO-HASWATER-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Water" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_Empty" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWater" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added water into Anti-B." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--EMPTY-TO-HASBLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Blood_Carmen" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_Empty" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added blood droplet into Anti-B." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASWATER-TO-HASWATER-AND-BLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Blood_Carmen" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWater" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWaterAndBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added blood into Anti-B." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASBLOOD-TO-HASWATER-AND-BLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Water" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasBlood" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWaterAndBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added water into Anti-B." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASBLOODANDWATER-TO-MIXED-->
                          </Triggers>
                          <Elements>
                            <Element Id="EC_CARMEN_AntiB_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_CARMEN_AntiB_Clotted" GameObjectId="Clotted" IsClickable="false" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_CARMEN_AntiB_Normal" GameObjectId="Blood" IsClickable="false" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                          <StateGroups>
                            <StateGroup Id="EldonCard_Containment_CARMEN_AntiB" TransitionDuration="0">
                              <States>
                                <State Id="EldonCard_Empty" />
                                <State Id="EldonCard_HasWater" IsDefault="true">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="B_HasWater" />
                                        <Setter Target="EC_CARMEN_AntiB_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiB_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiB_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiB_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="B_HasBlood" />
                                        <Setter Target="EC_CARMEN_AntiB_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiB_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiB_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiB_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasWaterAndBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="B_HasWaterAndBlood" />
                                        <Setter Target="EC_CARMEN_AntiB_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiB_DropletBlood" Property="IsVisible" Value="true" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_Mixed">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <Setter Target="EC_CARMEN_AntiB" Property="IsClickable" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiB_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiB_Normal" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiB_Normal" Property="IsClickable" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiB_Clotted" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                              </States>
                            </StateGroup>
                          </StateGroups>
                        </Element>
                        <Element Id="EC_CARMEN_AntiD" GameObjectId="Anti-D" ItemId="EC_CARMEN_AntiD_Item" IsClickable="true">
                          <Triggers>
                            <!--EMPTY-TO-HASWATER-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Water" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_Empty" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWater" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added water into Anti-D." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--EMPTY-TO-HASBLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Blood_Carmen" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_Empty" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added blood droplet into Anti-D." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASWATER-TO-HASWATER-AND-BLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Blood_Carmen" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWater" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWaterAndBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added blood into Anti-D." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASBLOOD-TO-HASWATER-AND-BLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Water" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasBlood" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWaterAndBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added water into Anti-D." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASBLOODANDWATER-TO-MIXED-->
                          </Triggers>
                          <Elements>
                            <Element Id="EC_CARMEN_AntiD_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_CARMEN_AntiD_Clotted" GameObjectId="Clotted" IsClickable="false" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_CARMEN_AntiD_Normal" GameObjectId="Blood" IsClickable="false" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                          <StateGroups>
                            <StateGroup Id="EldonCard_Containment_CARMEN_AntiD" TransitionDuration="0">
                              <States>
                                <State Id="EldonCard_Empty" />
                                <State Id="EldonCard_HasWater" IsDefault="true">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="D_HasWater" />
                                        <Setter Target="EC_CARMEN_AntiD_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiD_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiD_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiD_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="D_HasBlood" />
                                        <Setter Target="EC_CARMEN_AntiD_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiD_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiD_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiD_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasWaterAndBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="D_HasWaterAndBlood" />
                                        <Setter Target="EC_CARMEN_AntiD_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiD_DropletBlood" Property="IsVisible" Value="true" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_Mixed">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <Setter Target="EC_CARMEN_AntiD" Property="IsClickable" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiD_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_AntiD_Normal" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiD_Normal" Property="IsClickable" Value="true" />
                                        <Setter Target="EC_CARMEN_AntiD_Clotted" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                              </States>
                            </StateGroup>
                          </StateGroups>
                        </Element>
                        <Element Id="EC_CARMEN_Control" GameObjectId="Control" ItemId="EC_CARMEN_Control_Item" IsClickable="true">
                          <Triggers>
                            <!--EMPTY-TO-HASWATER-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Water" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_Empty" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWater" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added water into Control." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--EMPTY-TO-HASBLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Blood_Carmen" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_Empty" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added blood droplet into Control." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASWATER-TO-HASWATER-AND-BLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Blood_Carmen" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasWater" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWaterAndBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added blood into Control." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASBLOOD-TO-HASWATER-AND-BLOOD-->
                            <EventTrigger Event="Click">
                              <Conditions>
                                <CompositeCondition>
                                  <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Content_Water" />
                                  <DataCondition Property="ActiveStates" Comparison="Contains" Value="EldonCard_HasBlood" />
                                </CompositeCondition>
                              </Conditions>
                              <Actions>
                                <AnimateHandTo />
                                <GotoState StateId="EldonCard_HasWaterAndBlood" />
                                <StartConversation Target="EventConversation" ConversationSentence="You added water into Control." />
                                <AnimateHandTo IsReverse="true" />
                              </Actions>
                            </EventTrigger>
                            <!--HASBLOODANDWATER-TO-MIXED-->
                          </Triggers>
                          <Elements>
                            <Element Id="EC_CARMEN_Control_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_CARMEN_Control_Clotted" GameObjectId="Clotted" IsClickable="false" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_CARMEN_Control_Normal" GameObjectId="Blood" IsClickable="false" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                          <StateGroups>
                            <StateGroup Id="EldonCard_Containment_CARMEN_Control" TransitionDuration="0">
                              <States>
                                <State Id="EldonCard_Empty" />
                                <State Id="EldonCard_HasWater" IsDefault="true">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="C_HasWater" />
                                        <Setter Target="EC_CARMEN_Control_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_Control_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_Control_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_Control_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="C_HasBlood" />
                                        <Setter Target="EC_CARMEN_Control_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_Control_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_Control_Clotted" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_Control_Normal" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_HasWaterAndBlood">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <GotoState Target="BloodTestCard_Carmen" StateId="C_HasWaterAndBlood" />
                                        <Setter Target="EC_CARMEN_Control_DropletBlood" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_Control_DropletBlood" Property="IsVisible" Value="true" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                                <State Id="EldonCard_Mixed">
                                  <Triggers>
                                    <Trigger>
                                      <Actions>
                                        <Setter Target="EC_CARMEN_Control" Property="IsClickable" Value="false" />
                                        <Setter Target="EC_CARMEN_Control_DropletBlood" Property="IsVisible" Value="false" />
                                        <Setter Target="EC_CARMEN_Control_Normal" Property="IsVisible" Value="true" />
                                        <Setter Target="EC_CARMEN_Control_Normal" Property="IsClickable" Value="true" />
                                        <Setter Target="EC_CARMEN_Control_Clotted" Property="IsVisible" Value="false" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </State>
                              </States>
                            </StateGroup>
                          </StateGroups>
                        </Element>
                      </Elements>
                      <StateGroups>
                        <StateGroup Id="StateGroup_JumpToOtherCard_CARMEN">
                          <States>
                            <State Id="State_ReadyToJump" />
                            <State Id="State_JumpFromCardCarmentoCardFChild">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="IsFocused" Comparison="Equals" Value="true" />
                                  </Conditions>
                                  <Actions>
                                    <MoveTo Element="BloodTestCard_FirstChild" />
                                    <Wait Duration="0.5" />
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_NoJump" IsDefault="true" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_BloodType_ECCarmen">
                          <States>
                            <State Id="Type_A_Positive" Title="A+" IsDefault="true" />
                            <State Id="Type_A_Negative" Title="A-" />
                            <State Id="Type_B_Positive" Title="B+" />
                            <State Id="Type_B_Negative" Title="B-" />
                            <State Id="Type_AB_Positive" Title="AB+" />
                            <State Id="Type_AB_Negative" Title="AB-" />
                            <State Id="Type_O_Positive" Title="O+" />
                            <State Id="Type_O_Negative" Title="O-" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_HelperVisibility_CARMEN">
                          <States>
                            <State Id="State_HelperIsNotVisible" IsDefault="true">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_HelperIsVisible" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_LabelIndicator_CARMEN">
                          <States>
                            <State Id="State_LabelIndicatorDefault" IsDefault="true" />
                            <State Id="State_LabelIndicatorGreen" />
                            <State Id="State_LabelIndicatorRed" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="Status_AntiACarmenCard">
                          <States>
                            <State Id="A_Empty" IsDefault="true" />
                            <State Id="A_HasWater" />
                            <State Id="A_HasBlood" />
                            <State Id="A_HasWaterAndBlood" />
                            <State Id="A_HasMixed">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState Target="EC_CARMEN_AntiA" StateId="EldonCard_Mixed" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                        <StateGroup Id="Status_AntiBCarmenCard">
                          <States>
                            <State Id="B_Empty" IsDefault="true" />
                            <State Id="B_HasWater" />
                            <State Id="B_HasBlood" />
                            <State Id="B_HasWaterAndBlood" />
                            <State Id="B_HasMixed">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState Target="EC_CARMEN_AntiB" StateId="EldonCard_Mixed" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                        <StateGroup Id="Status_AntiDCarmenCard">
                          <States>
                            <State Id="D_Empty" IsDefault="true" />
                            <State Id="D_HasWater" />
                            <State Id="D_HasBlood" />
                            <State Id="D_HasWaterAndBlood" />
                            <State Id="D_HasMixed">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState Target="EC_CARMEN_AntiD" StateId="EldonCard_Mixed" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                        <StateGroup Id="Status_ControlCarmenCard">
                          <States>
                            <State Id="C_Empty" IsDefault="true" />
                            <State Id="C_HasWater" />
                            <State Id="C_HasBlood" />
                            <State Id="C_HasWaterAndBlood" />
                            <State Id="C_HasMixed">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState Target="EC_CARMEN_Control" StateId="EldonCard_Mixed" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_FocusedConditionCarmenCard">
                          <States>
                            <State Id="State_NotFocused" IsDefault="true" />
                            <State Id="State_PreFocused">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_NotFocused" />
                                  </Conditions>
                                  <Actions>
                                    <Setter Target="EC_FirstChild_AntiA_Clotted" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FirstChild_AntiB_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FirstChild_AntiD_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FirstChild_Control_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FirstChild_AntiA_Normal" Property="IsVisible" Value="false" />
                                    <Setter Target="EC_FirstChild_AntiB_Clotted" Property="IsVisible" Value="false" />
                                    <Setter Target="EC_FirstChild_AntiD_Clotted" Property="IsVisible" Value="false" />
                                    <Setter Target="EC_FirstChild_Control_Clotted" Property="IsVisible" Value="false" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_Focused" />
                            <State Id="State_AfterFocused" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_Labelling_CARMEN">
                          <States>
                            <State Id="State_LabellingIsWrong" IsDefault="true" />
                            <State Id="State_LabellingIsCorrect" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_ForRhLabelVisibility_CARMEN">
                          <States>
                            <State Id="State_BeforeQuiz" IsDefault="true" />
                            <State Id="State_AfterQuiz" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_CirclesActivation_CARMEN">
                          <States>
                            <State Id="State_ActivateAllCircles" IsDefault="true">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <Setter Target="EC_CARMEN_AntiA" Property="IsClickable" Value="true" />
                                    <Setter Target="EC_CARMEN_AntiB" Property="IsClickable" Value="true" />
                                    <Setter Target="EC_CARMEN_AntiD" Property="IsClickable" Value="true" />
                                    <Setter Target="EC_CARMEN_Control" Property="IsClickable" Value="true" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_ActivateAntiAOnly">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <Setter Target="EC_CARMEN_AntiA" Property="IsClickable" Value="true" />
                                    <Setter Target="EC_CARMEN_AntiB" Property="IsClickable" Value="false" />
                                    <Setter Target="EC_CARMEN_AntiD" Property="IsClickable" Value="false" />
                                    <Setter Target="EC_CARMEN_Control" Property="IsClickable" Value="false" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                          </States>
                        </StateGroup>
                      </StateGroups>
                      <Screens>
                        <Screen Id="Screen_CARMEN_Name" GameObjectId="ScreenName" GUIScreenId="GUI_EldonCardScreen_Name_Carmen" IsShown="true" />
                        <Screen Id="Screen_CARMEN_Rhesus" GameObjectId="ScreenRhesus" GUIScreenId="GUI_EldonCardScreen_Rhesus_Carmen" IsShown="true" />
                        <Screen Id="Screen_CARMEN_Born" GameObjectId="ScreenBorn" GUIScreenId="GUI_EldonCardScreen_Born_Carmen" IsShown="true" />
                        <Screen Id="Screen_CARMEN_Date" GameObjectId="ScreenDate" GUIScreenId="GUI_EldonCardScreen_Date_Carmen" IsShown="true" />
                        <Screen Id="Screen_CARMEN_Sign" GameObjectId="ScreenSignature" GUIScreenId="GUI_EldonCardScreen_Signature_Carmen" IsShown="true" />
                      </Screens>
                    </Element>
                    <!--Bloodcard F_CHILD O POSITIVE-->
                    <Element Id="BloodTestCard_FirstChild" GameObjectId="BloodTestCard_FirstChild" SourceId="EldonCardABL" Position="-0.142, -0.1" Rotation="-90" IsClickable="true" IsFocusable="false" Tooltip="First Child">
                      <Triggers>
                        <!--Next/Prev arrow-->
                        <EventTrigger Event="Focused">
                          <Actions>
                            <GotoState StateId="State_ReadyToJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Defocused">
                          <Actions>
                            <GotoState StateId="State_NoJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Focused">
                          <Conditions>
                            <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_PreFocused" />
                          </Conditions>
                          <Actions>
                            <GotoState StateId="State_Focused" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                      <Elements>
                        <Element Id="EC_FirstChild_AntiA" GameObjectId="Anti-A" IsClickable="false">
                          <Elements>
                            <Element Id="EC_FirstChild_AntiA_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_FirstChild_AntiA_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_FirstChild_AntiA_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC_FirstChild_AntiB" GameObjectId="Anti-B" IsClickable="false">
                          <Elements>
                            <Element Id="EC_FirstChild_AntiB_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_FirstChild_AntiB_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_FirstChild_AntiB_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC_FirstChild_AntiD" GameObjectId="Anti-D" IsClickable="false">
                          <Elements>
                            <Element Id="EC_FirstChild_AntiD_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_FirstChild_AntiD_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_FirstChild_AntiD_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC_FirstChild_Control" GameObjectId="Control" IsClickable="false">
                          <Elements>
                            <Element Id="EC_FirstChild_Control_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_FirstChild_Control_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_FirstChild_Control_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                      </Elements>
                      <StateGroups>
                        <StateGroup Id="StateGroup_JumpToOtherCard_FChild">
                          <States>
                            <State Id="State_ReadyToJump" />
                            <State Id="State_JumpFromCardFChildtoCardFetus">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="IsFocused" Comparison="Equals" Value="true" />
                                  </Conditions>
                                  <Actions>
                                    <MoveTo Element="BloodTestCard_Fetus" />
                                    <Wait Duration="0.5" />
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_JumpFromCardFChildtoCardCarmen">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="IsFocused" Comparison="Equals" Value="true" />
                                  </Conditions>
                                  <Actions>
                                    <MoveTo Element="BloodTestCard_Carmen" />
                                    <Wait Duration="0.5" />
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_NoJump" IsDefault="true" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_BloodType_ECFirstChild">
                          <States>
                            <State Id="Type_A_Positive" Title="A+" IsDefault="true" />
                            <State Id="Type_A_Negative" Title="A-" />
                            <State Id="Type_B_Positive" Title="B+" />
                            <State Id="Type_B_Negative" Title="B-" />
                            <State Id="Type_AB_Positive" Title="AB+" />
                            <State Id="Type_AB_Negative" Title="AB-" />
                            <State Id="Type_O_Positive" Title="O+" />
                            <State Id="Type_O_Negative" Title="O-" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_HelperVisibility_FChild">
                          <States>
                            <State Id="State_HelperIsNotVisible" IsDefault="true">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_HelperIsVisible" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_LabelIndicator_FChild">
                          <States>
                            <State Id="State_LabelIndicatorDefault" IsDefault="true" />
                            <State Id="State_LabelIndicatorGreen" />
                            <State Id="State_LabelIndicatorRed" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_FocusedCondition_FChild">
                          <States>
                            <State Id="State_NotFocused" IsDefault="true" />
                            <State Id="State_PreFocused">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_NotFocused" />
                                  </Conditions>
                                  <Actions>
                                    <Setter Target="EC_FirstChild_AntiA_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FirstChild_AntiB_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FirstChild_AntiD_Clotted" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FirstChild_Control_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FirstChild_AntiA_Clotted" Property="IsVisible" Value="false" />
                                    <Setter Target="EC_FirstChild_AntiB_Clotted" Property="IsVisible" Value="false" />
                                    <Setter Target="EC_FirstChild_AntiD_Normal" Property="IsVisible" Value="false" />
                                    <Setter Target="EC_FirstChild_Control_Clotted" Property="IsVisible" Value="false" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_Focused" />
                            <State Id="State_AfterFocused" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_ForRhLabelVisibility_FChild">
                          <States>
                            <State Id="State_BeforeQuiz" IsDefault="true" />
                            <State Id="State_AfterQuiz" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_Labelling_FChild">
                          <States>
                            <State Id="State_LabellingIsWrong" IsDefault="true" />
                            <State Id="State_LabellingIsCorrect" />
                          </States>
                        </StateGroup>
                      </StateGroups>
                      <Screens>
                        <Screen Id="Screen_FChildName" GameObjectId="ScreenName" GUIScreenId="GUI_EldonCardScreen_Name_FirstChild" IsShown="true" />
                        <Screen Id="Screen_FChildRhesus" GameObjectId="ScreenRhesus" GUIScreenId="GUI_EldonCardScreen_Rhesus_FirstChild" IsShown="true" />
                        <Screen Id="Screen_FChildBorn" GameObjectId="ScreenBorn" GUIScreenId="GUI_EldonCardScreen_Born_FirstChild" IsShown="true" />
                        <Screen Id="Screen_FChildDate" GameObjectId="ScreenDate" GUIScreenId="GUI_EldonCardScreen_Date_FirstChild" IsShown="true" />
                        <Screen Id="Screen_FChildSign" GameObjectId="ScreenSignature" GUIScreenId="GUI_EldonCardScreen_Signature_FirstChild" IsShown="true" />
                      </Screens>
                    </Element>
                    <!--Bloodcard FETUS A POSITIVE-->
                    <Element Id="BloodTestCard_Fetus" GameObjectId="BloodTestCard_Fetus" SourceId="EldonCardABL" Position="-0.142, -0.35" Rotation="-90" IsClickable="true" IsFocusable="false" Tooltip="Fetus">
                      <Triggers>
                        <!--Next/Prev arrow-->
                        <EventTrigger Event="Focused">
                          <Actions>
                            <GotoState StateId="State_ReadyToJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Defocused">
                          <Actions>
                            <GotoState StateId="State_NoJump" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Focused">
                          <Conditions>
                            <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_PreFocused" />
                          </Conditions>
                          <Actions>
                            <GotoState StateId="State_Focused" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                      <Elements>
                        <Element Id="EC_FETUS_AntiA" GameObjectId="Anti-A" IsClickable="false">
                          <Elements>
                            <Element Id="EC_FETUS_AntiA_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_FETUS_AntiA_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_FETUS_AntiA_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC_FETUS_AntiB" GameObjectId="Anti-B" IsClickable="false">
                          <Elements>
                            <Element Id="EC_FETUS_AntiB_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_FETUS_AntiB_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_FETUS_AntiB_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC_FETUS_AntiD" GameObjectId="Anti-D" IsClickable="false">
                          <Elements>
                            <Element Id="EC_FETUS_AntiD_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_FETUS_AntiD_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_FETUS_AntiD_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                        <Element Id="EC_FETUS_Control" GameObjectId="Control" IsClickable="false">
                          <Elements>
                            <Element Id="EC_FETUS_Control_DropletBlood" GameObjectId="Droplet" IsClickable="false" IsVisible="false" Tooltip="Blood" />
                            <Element Id="EC_FETUS_Control_Clotted" GameObjectId="Clotted" IsClickable="true" IsVisible="false" Tooltip="Agglutination" />
                            <Element Id="EC_FETUS_Control_Normal" GameObjectId="Blood" IsClickable="true" IsVisible="false" Tooltip="No agglutination" />
                          </Elements>
                        </Element>
                      </Elements>
                      <StateGroups>
                        <StateGroup Id="StateGroup_JumpToOtherCard_Fetus">
                          <States>
                            <State Id="State_ReadyToJump" />
                            <State Id="State_JumpFromFetustoCardFChild">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="IsFocused" Comparison="Equals" Value="true" />
                                  </Conditions>
                                  <Actions>
                                    <MoveTo Element="BloodTestCard_FirstChild" />
                                    <Wait Duration="0.5" />
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_NoJump" IsDefault="true" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_BloodType_ECFetus">
                          <States>
                            <State Id="Type_A_Positive" Title="A+" IsDefault="true" />
                            <State Id="Type_A_Negative" Title="A-" />
                            <State Id="Type_B_Positive" Title="B+" />
                            <State Id="Type_B_Negative" Title="B-" />
                            <State Id="Type_AB_Positive" Title="AB+" />
                            <State Id="Type_AB_Negative" Title="AB-" />
                            <State Id="Type_O_Positive" Title="O+" />
                            <State Id="Type_O_Negative" Title="O-" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_HelperVisibility_Fetus">
                          <States>
                            <State Id="State_HelperIsNotVisible" IsDefault="true">
                              <Triggers>
                                <Trigger>
                                  <Actions>
                                    <GotoState StateId="State_NoJump" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_HelperIsVisible" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_LabelIndicator_Fetus">
                          <States>
                            <State Id="State_LabelIndicatorDefault" IsDefault="true" />
                            <State Id="State_LabelIndicatorGreen" />
                            <State Id="State_LabelIndicatorRed" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_FocusedCondition_Fetus">
                          <States>
                            <State Id="State_NotFocused" IsDefault="true" />
                            <State Id="State_PreFocused">
                              <Triggers>
                                <Trigger>
                                  <Conditions>
                                    <DataCondition Property="ActiveStates" Comparison="Contains" Value="State_NotFocused" />
                                  </Conditions>
                                  <Actions>
                                    <Setter Target="EC_FETUS_AntiA_Clotted" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FETUS_AntiB_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FETUS_AntiD_Clotted" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FETUS_Control_Normal" Property="IsVisible" Value="true" />
                                    <Setter Target="EC_FETUS_AntiA_Normal" Property="IsVisible" Value="false" />
                                    <Setter Target="EC_FETUS_AntiB_Clotted" Property="IsVisible" Value="false" />
                                    <Setter Target="EC_FETUS_AntiD_Normal" Property="IsVisible" Value="false" />
                                    <Setter Target="EC_FETUS_Control_Clotted" Property="IsVisible" Value="false" />
                                  </Actions>
                                </Trigger>
                              </Triggers>
                            </State>
                            <State Id="State_Focused" />
                            <State Id="State_AfterFocused" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_ForRhLabelVisibility_Fetus">
                          <States>
                            <State Id="State_BeforeQuiz" IsDefault="true" />
                            <State Id="State_AfterQuiz" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="StateGroup_Labelling_Fetus">
                          <States>
                            <State Id="State_LabellingIsWrong" IsDefault="true" />
                            <State Id="State_LabellingIsCorrect" />
                          </States>
                        </StateGroup>
                      </StateGroups>
                      <Screens>
                        <Screen Id="Screen_FetusName" GameObjectId="ScreenName" GUIScreenId="GUI_EldonCardScreen_Name_Fetus" IsShown="true" />
                        <Screen Id="Screen_FetusRhesus" GameObjectId="ScreenRhesus" GUIScreenId="GUI_EldonCardScreen_Rhesus_Fetus" IsShown="true" />
                        <Screen Id="Screen_FetusBorn" GameObjectId="ScreenBorn" GUIScreenId="GUI_EldonCardScreen_Born_Fetus" IsShown="true" />
                        <Screen Id="Screen_FetusDate" GameObjectId="ScreenDate" GUIScreenId="GUI_EldonCardScreen_Date_Fetus" IsShown="true" />
                        <Screen Id="Screen_FetusSign" GameObjectId="ScreenSignature" GUIScreenId="GUI_EldonCardScreen_Signature_Fetus" IsShown="true" />
                      </Screens>
                    </Element>
                    <!--eldon stick-->
                    <Placeholder Id="Placeholder_EldonStick1W3" AcceptsItems="EldonStickItem" ItemId="EldonStickItem" Position="-0.10,0.38" Rotation="-90" Tooltip="Eldon stick" IsVisible="false" IsClickable="false" />
                  </Elements>
                </Surface>
              </Elements>
            </Element>
            <Element Id="LabCoat" GameObjectId="ShelfLabCoat" SourceId="ShelfLabCoat" Position="1.50271,-0.696482" Rotation="0" IsClickable="true" Tooltip="Lab coats">
              <Triggers>
                <EventTrigger Event="Click">
                  <Conditions>
                    <DataCondition Property="ActiveStates" Comparison="Contains" Value="Hanged" />
                  </Conditions>
                  <Actions>
                    <Setter Property="EmphasisDuration" Value="0" />
                    <MoveTo Element="LabCoat" />
                    <AnimateHandTo Target="LabCoat" />
                    <Wait Duration="0.1" />
                    <Setter Target="LabCoat" Property="IsFocusable" Value="false" />
                    <AnimateHandTo Target="LabCoat" IsReverse="true" />
                    <MoveTo Element="LabRoom" />
                    <Wait Duration="0.5" />
                    <GotoState StateId="Weared" />
                  </Actions>
                </EventTrigger>
              </Triggers>
              <StateGroups>
                <StateGroup Id="WearStatus">
                  <States>
                    <State Id="Hanged" IsDefault="true" />
                    <State Id="Weared" />
                  </States>
                </StateGroup>
              </StateGroups>
            </Element>
            <Element Id="Workbench4" GameObjectId="Table1b" SourceId="Table1" Position="0.28,5.14" IsClickable="false" IsFocusable="false" Rotation="180" />

            <Assistant Id="AssistantLab" GameObjectId="AssistantLab" SourceId="labassistant_female_caucasian_nolipsync" Position="1.23599,-0.08411527" Rotation="-50" IsClickable="false" IsLookingAtPlayer="false" IsHighlightable="false" IsVisible="true">
              <StateGroups>
                <StateGroup Id="StateGroup_AssistantOperation" TransitionDuration="0.5">
                  <States>
                    <State Id="State_StandBy" IsDefault="true" />
                    <State Id="State_MovingToPlayer">
                      <Triggers>
                        <Trigger>
                          <Actions>
                            <GotoState StateId="IdleHead" />
                            <GotoState StateId="State_Walk" />
                            <MoveTo Target="AssistantLab" Position="-0.65,0.45" />
                            <GotoState StateId="State_Walk" />
                            <MoveTo Target="AssistantLab" Position="-1.0,1.0" />
                            <GotoState StateId="State_Idle" />
                            <GotoState StateId="IdleHead" />
                            <Setter Property="IsLookingAtPlayer" Value="false" />
                            <Wait Duration="0.5" />
                            <GotoState StateId="State_DestinationReached" />
                          </Actions>
                        </Trigger>
                      </Triggers>
                    </State>
                    <State Id="State_MovingToCorner">
                      <Triggers>
                        <Trigger>
                          <Actions>
                            <GotoState StateId="IdleHead" />
                            <Setter Property="IsLookingAtPlayer" Value="false" />
                            <GotoState StateId="State_Walk" />
                            <MoveTo Target="AssistantLab" Position="-1.8,-0.8" />
                            <GotoState StateId="State_Idle" />
                            <Wait Duration="0.1" />
                            <GotoState StateId="State_DestinationReached" />
                          </Actions>
                        </Trigger>
                      </Triggers>
                    </State>
                  </States>
                </StateGroup>
                <StateGroup Id="StateGroup_Destination">
                  <States>
                    <State Id="State_DestinationNotReached" IsDefault="true" />
                    <State Id="State_DestinationReached">
                      <Triggers>
                        <Trigger>
                          <Actions>
                            <GotoState StateId="State_StandBy" />
                          </Actions>
                        </Trigger>
                      </Triggers>
                    </State>
                  </States>
                </StateGroup>
                <StateGroup Id="StateGroup_BodyStates" TransitionDuration="0.5">
                  <States>
                    <State Id="DoNothing" IsDefault="true" />
                    <State Id="State_Idle">
                      <Triggers>
                        <Trigger>
                          <Actions>
                            <Wait Duration="0.01" />
                            <ControlMedia Action="Resume" HasFrames="false" ObjectName="AssistantLab" EventName="idle" />
                          </Actions>
                        </Trigger>
                      </Triggers>
                    </State>
                    <State Id="State_Walk">
                      <Triggers>
                        <Trigger>
                          <Actions>
                            <ControlMedia Action="Resume" HasFrames="false" ObjectName="AssistantLab" EventName="walk" />
                          </Actions>
                        </Trigger>
                      </Triggers>
                    </State>
                    <State Id="State_Faint">
                      <Triggers>
                        <Trigger>
                          <Actions>
                            <ControlMedia Action="Resume" HasFrames="false" ObjectName="AssistantLab" EventName="faint" />
                          </Actions>
                        </Trigger>
                      </Triggers>
                    </State>
                  </States>
                </StateGroup>
                <StateGroup Id="StateGroup_HeadStates" TransitionDuration="0.5">
                  <States>
                    <State Id="IdleHead" AnimatorParameterName="RandomTalk" AnimatorParameterValue="false" IsDefault="true" />
                    <State Id="Talking" AnimatorParameterName="RandomTalk" AnimatorParameterValue="true" />
                  </States>
                </StateGroup>
              </StateGroups>
            </Assistant>

            <!--Region [List of Decorative Objects]-->
            <Element Id="DecoObj011" GameObjectId="C1_LOD0" SourceId="Cabinet" Position="2.667,-1.786" IsClickable="false" />
            <Element Id="DecoObj012" GameObjectId="C1_LOD0" SourceId="Cabinet" Position="1.667,-1.786" IsClickable="false" />
            <Element Id="DecoObj013" GameObjectId="C1_LOD0" SourceId="Cabinet" Position="0.667,-1.786" IsClickable="false" />
            <Element Id="DecoObj014" GameObjectId="C1_LOD0" SourceId="Cabinet" Position="-0.333,-1.786" IsClickable="false" />
            <Element Id="DecoObj015" GameObjectId="C1_LOD0" SourceId="Cabinet" Position="-1.333,-1.786" IsClickable="false" />
            <Element Id="DecoObj016" GameObjectId="C1_LOD0" SourceId="Cabinet" Position="3.875,0.258" IsClickable="false" Rotation="-90" />
            <Element Id="DecoObj017" GameObjectId="C1_LOD0" SourceId="Cabinet" Position="3.875,1.261" IsClickable="false" Rotation="-90" />
            <Element Id="DecoObj018" GameObjectId="C1_LOD0" SourceId="Cabinet" Position="3.875,3.885" IsClickable="false" Rotation="-90" />
            <Element Id="DecoObj019" GameObjectId="C1_LOD0" SourceId="Cabinet" Position="3.875,4.888" IsClickable="false" Rotation="-90" />
            <Element Id="DecoObj010" GameObjectId="ShelfLong" SourceId="ShelfLong" Position="3.6,1.538" IsClickable="false" Rotation="180" />
            <Element Id="DecoObj021" GameObjectId="ShelfLong" SourceId="ShelfLong" Position="3.6,2.454" IsClickable="false" />
            <!--Endregion-->
          </Elements>
        </Surface>
        <Element Id="DecoObj01" GameObjectId="gloves_box" IsVisible="false" IsClickable="false" />
        <Element Id="DecoObj02" GameObjectId="PCR_LOD1" IsVisible="false" IsClickable="false" />
        <Element Id="DecoObj03" GameObjectId="papers2" IsVisible="false" IsClickable="false" />
        <Element Id="DecoObj04" GameObjectId="papers3" IsVisible="false" IsClickable="false" />
        <Element Id="DecoObj05" GameObjectId="poster5" IsVisible="false" IsClickable="false" />
        <Element Id="DecoObj06" GameObjectId="deco_glasses1" IsVisible="false" IsClickable="false" />
      </Elements>
      <StateGroups>
        <StateGroup>
          <States>
            <State Id="State_Anim_035NotPlayed" IsDefault="true" />
            <State Id="State_Anim_035IsPlaying">
              <Triggers>
                <NotificationTrigger Notification="ShowMessage" Parameter="Message01">
                  <Actions>
                    <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Ani" />
                    <Wait Notification="PopupClosed" />
                    <ControlMedia Action="Resume" HasFrames="false" EventName="resume" />
                  </Actions>
                </NotificationTrigger>
                <NotificationTrigger Notification="ShowMessage" Parameter="Message02">
                  <Actions>
                    <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Ani1" />
                    <Wait Notification="PopupClosed" />
                    <ControlMedia Action="Resume" HasFrames="false" EventName="resume" />
                  </Actions>
                </NotificationTrigger>
                <NotificationTrigger Notification="ShowMessage" Parameter="Message03">
                  <Actions>
                    <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Ani2" />
                    <Wait Notification="PopupClosed" />
                    <ControlMedia Action="Resume" HasFrames="false" EventName="resume" />
                  </Actions>
                </NotificationTrigger>
                <NotificationTrigger Notification="ShowMessage" Parameter="Message04">
                  <Actions>
                    <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Ani3" />
                    <Wait Notification="PopupClosed" />
                    <ControlMedia Action="Resume" HasFrames="false" EventName="resume" />
                  </Actions>
                </NotificationTrigger>
                <NotificationTrigger Notification="ShowMessage" Parameter="Message05">
                  <Actions>
                    <ControlMedia Action="Resume" HasFrames="false" EventName="resume" />
                  </Actions>
                </NotificationTrigger>
                <NotificationTrigger Notification="ShowMessage" Parameter="Message06">
                  <Actions>
                    <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Ani4" />
                    <Wait Notification="PopupClosed" />
                    <ControlMedia Action="Resume" HasFrames="false" EventName="resume" />
                  </Actions>
                </NotificationTrigger>
                <NotificationTrigger Notification="ShowMessage" Parameter="Message07">
                  <Actions>
                    <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Ani5" />
                    <Wait Notification="PopupClosed" />
                    <ControlMedia Action="Resume" HasFrames="false" EventName="resume" />
                  </Actions>
                </NotificationTrigger>
                <NotificationTrigger Notification="ShowMessage" Parameter="Message08">
                  <Actions>
                    <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Ani6" />
                    <Wait Notification="PopupClosed" />
                    <ControlMedia Action="Resume" HasFrames="false" EventName="resume" />
                  </Actions>
                </NotificationTrigger>
                <NotificationTrigger Notification="ShowMessage" Parameter="Message09">
                  <Actions>
                    <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Ani7" />
                    <Wait Notification="PopupClosed" />
                    <ControlMedia Action="Resume" HasFrames="false" EventName="resume" />
                  </Actions>
                </NotificationTrigger>
                <NotificationTrigger Notification="ShowMessage" Parameter="Message10">
                  <Actions>
                    <StartConversation Target="SubtitleConversation" ConversationId="Conversation_Ani8" />
                    <Wait Notification="PopupClosed" />
                    <ControlMedia Action="Resume" HasFrames="false" EventName="resume" />
                  </Actions>
                </NotificationTrigger>
                <NotificationTrigger Notification="AnimationEnded">
                  <Actions>
                    <EndConversation Target="Popup_Title" />
                    <EndConversation Target="SubtitleConversation" />
                    <Wait />
                    <GotoState StateId="State_Anim_035HasPlayed" />
                  </Actions>
                </NotificationTrigger>
              </Triggers>
            </State>
            <State Id="State_Anim_035HasPlayed" />
          </States>
        </StateGroup>
      </StateGroups>
    </Scene>
  </Scenes>
</Engine>